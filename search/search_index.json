{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","tags":false},"docs":[{"location":"","text":"","title":"Introduction"},{"location":"#issue-and-verify-universally-accepted-digital-credentials","text":"<p>Trinsic is the proof of anything platform. We make it easy for people and organizations to prove things about themselves with technology instead of paper documents. Our software is based on Decentralized Identifiers (DIDs) and Verifiable Credentials (VCs), a new digital identity standard. </p> <p>With Trinsic, organizations and their customers share data between each other in a trustworthy, standardized, and privacy-preserving way. </p> <p>We make all of this possible through the exchange of verified data contained within Verifiable Credentials. These credentials are carried on an individual's device, and people can easily share them with others to prove things about themselves anywhere.</p> <p>Learn how to issue and verify universally-accepted digital credentials so that anywhere people go online or in-person, they can simply tap their phone, prove who they are, and get what they need.</p> <p> Try the Tutorial</p>","title":"Issue and verify universally-accepted digital credentials."},{"location":"#our-products","text":"","title":"Our Products"},{"location":"#trinsic-core","text":"<p>Trinsic Core is infrastructure for digital trust. It's our set of APIs for sending verifiable data between digital identity wallets. Core gives people and organizations the ability to easily and securely prove things about themselves with digital credentials.</p> <p>With Core, you can transform credentials, licenses, passes, and certificates into a W3C standard format that can be exchanged digitally and verified instantly by anyone called a \"verifiable credential\".</p>","title":"Trinsic Core"},{"location":"#trinsic-ecosystems","text":"<p>A layer built on top of Core, Trinsic Ecosystems is a product for organizations that want to build an ecosystem of different issuers, holders, and verifiers of credentials. By ecosystem, we mean a network of companies and consumers that need to be able to securely share and instantly verify data. </p> <p>At Trinsic, we call the organizations that bring together these ecosystems of companies and customers \"providers\" since they are providing digital trust to the ecosystem through Trinsic's infrastructure.</p>  <p>Get Started in 15 Minutes</p> <p>Want to get started using digital credentials quickly? Try our tutorial to get a conceptual walkthrough of a common use case.</p>","title":"Trinsic Ecosystems"},{"location":"early-adopter/","text":"<p>For development teams ready to integrate verifiable credentials for a specific industry or use case, Trinsic Ecosystems has been built specifically for you. We're currently in beta with a small group of customers.</p> <p>If you'd like to join the beta for Trinsic Ecosystems, please reach out! Simply fill out the form below, and we'll get in touch.</p> <p>Sign Up</p>","title":"Introducing Trinsic Ecosystems"},{"location":"roadmap/","text":"","title":"Roadmap"},{"location":"roadmap/#sdks","text":"","title":"SDKs"},{"location":"roadmap/#available-sdks","text":"<ul> <li> .NET</li> <li> Node</li> <li> Python</li> <li> Web</li> <li> Java</li> </ul>","title":"Available SDKs"},{"location":"roadmap/#coming-soon","text":"<ul> <li> Android</li> <li> iOS</li> <li> Go</li> <li> Ruby</li> </ul>","title":"Coming Soon"},{"location":"support/","text":"<p>Normally, the best way to ask quick questions is through the Trinsic Community slack channel.</p> <p>If you have a bug to report, please report it on the Github issues on our SDK. Contributions and additions to this docs site are always welcome.</p> <p>Finally, if you're interested in getting in touch with the team for any other reason, contact us at support@trinsic.id. We treat any feedback as gold.</p>","title":"Have a Question?"},{"location":"android/","text":"<p>The Trinsic Java / Android SDK makes it easy to interact with the Trinsic API from any Java application. The most recent version of the library can be found on ____. You can find the SDKs source on Github.</p>","title":"The Trinsic  Java / Android SDK"},{"location":"android/#installation","text":"<p>TODO</p>","title":"Installation"},{"location":"android/#configuration","text":"<p>TODO</p>","title":"Configuration"},{"location":"android/#next-steps","text":"<p>TODO</p> <p>Try out a sample application using our Android SDK here.</p>","title":"Next Steps"},{"location":"cli/","text":"<p>The Trinsic CLI makes it easy to interact with the Trinsic API from your terminal.  You can get the CLI on homebrew or build the CLI from source on Github. It contains all the commands of Trinsic's SDKs and makes them interactive. </p>","title":"The Trinsic CLI"},{"location":"cli/#installation","text":"MacOS and Linux <p>We use homebrew to distribute the CLI packages for MacOS and Linux. Install Homebrew</p> <p>Then run these commands to install the Trinsic CLI <pre><code>brew tap trinsic-id/tap\nbrew install trinsic-cli</code></pre></p>  From source <p>The CLI can also be built from source.</p> <p>This requires the Rustup toolchain  installed on your system.</p> <p>Once installed, run this command in terminal:</p> <pre><code>cargo +nightly install --git https://github.com/trinsic-id/sdk trinsic</code></pre> <p>To verify that the CLI has been installed successfully, try running:</p> <pre><code>trinsic --help</code></pre>","title":"Installation"},{"location":"cli/#next-steps","text":"<p>Once the CLI is installed, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference. For more information about the CLI, read the configuration guide</p> <p>Start Walkthrough Explore API</p>","title":"Next Steps"},{"location":"cli/config/","text":"<p>The CLI stores its configuration in the user's home directory in <code>~/.trinsic/</code>. This directory contains the main configuration file <code>config.toml</code> and all the profile data.</p>","title":"Configuration"},{"location":"cli/config/#show-configuration","text":"<p>To print the current configuration file in the terminal use:</p> <pre><code>trinsic config --show</code></pre> <p>Typical configuration file may look like this:</p> <pre><code>[server]\naddress = \"https://prod.trinsic.cloud\"\n\n[profile]\ndefault = \"my_profile\"</code></pre>","title":"Show Configuration"},{"location":"cli/config/#update-configuration-entry","text":"<p>To change the configuration values, use the <code>config</code> subcommand with the attribute and its value.</p> <pre><code>trinsic config &lt;attribute_name&gt; &lt;attribute_value&gt;</code></pre> <p>The following attributes are currently supported:</p>  <code>server-address</code>  <p>Updates the default server address the CLI communicates</p> <pre><code>trinsic config --server-address https://example.com/</code></pre>  <code>profile-default</code>  <p>Updates the default profile used with the CLI</p> <pre><code>trinsic config --profile-default alice</code></pre>","title":"Update Configuration Entry"},{"location":"cli/demo/","text":"","title":"Trinsic CLI Demo"},{"location":"cli/demo/#steps-to-run","text":"<ul> <li>Click the green Run button</li> <li>Follow walkthrough</li> <li>Note: If you resize this window, make sure to reload the page. If not, the CLI will have display problems.</li> </ul>","title":"Steps to Run"},{"location":"cli/vaccination-cli/","text":"<p>This walkthrough will show how a vaccination card can be issued, held, and proven using verifiable credentials with the Trinsic CLI.</p>","title":"Vaccination Use Case for CLI"},{"location":"cli/vaccination-cli/#installation","text":"<p>In a new tab, open our demo environment to use the CLI. This demo environment works best when run side-by-side the following walkthrough using two tabs in your browser.</p> <p>If you'd rather run the CLI on your machine, you can install the CLI locally using our installation instructions</p> <p>Once the CLI is installed, clone our CLI example repository on Github to download the credential data for this walkthrough. <pre><code>git clone https://github.com/trinsic-id/cli-example &amp;&amp; cd cli-example</code></pre></p>","title":"Installation"},{"location":"cli/vaccination-cli/#use-case-overview","text":"<p>In this walkthrough we'll explore a scenario where Allison gets her vaccination certificate. She then uses this certificate to board an airline that requires proof of vaccination. Each participant in this scenario is part of the same ecosystem, though this is not a functional requirement.</p> <pre><code>journey\n    section Issuance\n      Obtain cert.: 3: Allison, Clinic\n      Store in wallet: 3: Allison\n    section Verification\n      Request cert.: 3: Allison, Airline\n      Share: 3: Allison\n      Verify: 5: Airline</code></pre> <p>If you haven't learned about verifiable credentials already, first read Verifiable Credential Basics.</p> <p>In most credential exchange scenarios there are three primary roles - Issuer, Holder, and Verifier.</p> <p>Issuer: Responsible for issuing signed credentials that attest information about a credential subject</p> <p>Holder: Stores issued credentials from an issuer. Most often this is the credential subject. Also generates passes to share with verifiers.</p> <p>Verifier: Verifies passes presented from holders.</p>","title":"Use case overview"},{"location":"cli/vaccination-cli/#meet-allison","text":"<p>Allison's town just received the go ahead to vaccinate everyone. We'll walk through a scenario where Allison gets her vaccination card and then generates a pass with it to board an airline, all using her devices.</p> <p>To start, create a directory call walkthrough, and then three directories in that called <code>allison</code>, <code>clinic</code>, and <code>airline</code>.  <pre><code>walkthrough\n|- allison\n|- clinic\n|- airline</code></pre></p>","title":"Meet Allison"},{"location":"cli/vaccination-cli/#create-wallets","text":"<p>We'll start by creating a wallet for each participant in this credential exchange. Wallets can be created by anyone, for anyone. In this scenario, we have three wallets. Allison will be the credential holder, the Airline will be the verifier, and the vaccination clinic will be the issuer.</p> <p>These wallets have been created by you, your role is an ecosystem provider. Your role is to help deploy a credential exchange ecosystem.</p> Trinsic CLI <pre><code>trinsic wallet create --description \"Allison's Wallet\" --name allison &amp;&amp; \\\ntrinsic wallet create --description \"Airline's wallet\" --name airline &amp;&amp; \\\ntrinsic wallet create --description \"Vaccination Clinic\" --name clinic</code></pre>    <p>Note</p> <p>Reference: Create Wallet</p>","title":"Create Wallets"},{"location":"cli/vaccination-cli/#issue-a-credential","text":"<p>Each credential is a JSON document that is signed with a special digital signature to makes each piece of data in the credential separately verifiable. This is a called bbs+ signature scheme. The credential is signed, but not sent. For now, sending the credential should be done through existing communication methods.</p> Trinsic CLI <pre><code>trinsic  --profile clinic issuer issue --document data/vaccination-certificate-unsigned.json --out vaccination-certificate-signed.json</code></pre>    <p>Info</p> <p>Reference: Issue a Credential</p>","title":"Issue a Credential"},{"location":"cli/vaccination-cli/#store-credential-in-wallet","text":"<p>Once Allison receives the credential, she can store it within her wallet. She can use any device that she's authorized to use with her wallet.</p> Trinsic CLI <pre><code>trinsic --profile allison wallet insert-item --item vaccination-certificate-signed.json</code></pre>   <p>Note down the response <code>item_id</code> printed to the console for the next step.</p>  <p>Info</p> <p>Reference: Insert Recordl</p>","title":"Store Credential in Wallet"},{"location":"cli/vaccination-cli/#search-wallet-for-credential","text":"<p>If you'd like to check the credential in Allison's wallet to see if it arrived, you can search the wallet for the <code>id</code> of the credential.</p> Trinsic CLI <pre><code>trinsic --profile allison wallet search --query \"SELECT * FROM c WHERE c.id='&lt;item_id&gt;'\"</code></pre>    <p>Info</p> <p>Reference: Search Wallet</p>","title":"Search Wallet for Credential"},{"location":"cli/vaccination-cli/#create-proof","text":"<p>Now let's create a proof for Allison. She may choose to generate this proof before going to the airport, or might generate it right as she boards.</p> <p>Replace the <code>&lt;item_id&gt;</code> in the generate proof command below with the output from the <code>insert_item</code> above.</p> Trinsic CLI <pre><code>trinsic --profile allison issuer create-proof --document-id \"&lt;item-id&gt;\" --out vaccination-certificate-partial-proof.json --reveal-document data/vaccination-certificate-frame.json</code></pre>   <p>Take a look at the proof. Notice how only the attributes included in the <code>frame</code> are included with the proof.</p> <p>Allison sends this proof to the airline for them to verify.</p>  <p>Info</p> <p>Reference: Create Proof</p>","title":"Create Proof"},{"location":"cli/vaccination-cli/#verify-proof","text":"<p>Once the airline receives the proof, they can now verify it to ensure its authenticity. Because Allison sent a proof of her vaccination credential and not the credential itself, the airline only receives its required information.</p> Trinsic CLI <pre><code>trinsic --profile airline issuer verify-proof --proof-document vaccination-certificate-partial-proof.json</code></pre>   <p>Watch for the output of <code>true</code> to know that the credential successfully passed all of the verification processes.</p>  <p>Info</p> <p>Reference: Verify Proof</p>","title":"Verify Proof"},{"location":"dotnet/","text":"<p>The Trinsic C# / .NET SDK makes it easy to interact with the Trinsic API from your .NET application. The most recent version of the library can be found on NuGet. The Trinsic SDK  supports .NET applications written in C#, VB.NET, and F# that utilize any supported version of .NET Core. You can also find the SDKs source on Github.</p>","title":"The Trinsic C# / .NET SDK"},{"location":"dotnet/#installation","text":"<p>Install the packages directly from Nuget.org </p> Package Manager <pre><code>PM&gt; Install-Package Trinsic</code></pre>  .NET CLI <pre><code>&gt; dotnet add package Trinsic</code></pre>  PackageReference <pre><code>&lt;PackageReference Include=\"Trinsic\" /&gt;</code></pre>","title":"Installation"},{"location":"dotnet/#configuration","text":"<pre><code>using Trinsic;\n\n// Set the server address\nvar service = new WalletService(\"https://example.com\");\n\n// Create new profile or import an existing one\nvar myProfile = await service.CreateWallet();\n\n// Set the profile to be used with authorization pipeline\nservice.SetProfile(myProfile);</code></pre>","title":"Configuration"},{"location":"dotnet/#next-steps","text":"<p>Once the CLI is installed and configured, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference</p> <p>Start Walkthrough Explore API C# API Reference</p>","title":"Next Steps"},{"location":"dotnet/vaccination-net/","text":"","title":"Vaccination Use Case for .NET Core"},{"location":"dotnet/vaccination-net/#technical-requirements","text":"<p>You can run this example on your local machine, or you can use our Gitpod setup to bootstrap a full development environment. If running locally, you only need .NET Core installed. We will use the dotnet CLI and the editor of your choice.</p>  <p>Supported runtimes</p> <p>Xamarin targets for iOS and Android are fully supported using the same package dependencies. Support for Blazor in Web Assembly will be available in a future release.</p>","title":"Technical requirements"},{"location":"dotnet/vaccination-net/#create-new-project","text":"<p>Let's create a new .NET console app that we will use to add our sample code</p> <pre><code>dotnet new console -n VaccinationSample &amp;&amp; cd VaccinationSample</code></pre> <p>Add the required dependencies</p> <pre><code>dotnet add package Trinsic --prerelease\ndotnet add package Okapi.Net --prerelease</code></pre>  <p>The package <code>Okapi.Net</code> is already a dependency of <code>Trinsic</code> package, but we must add explicitly to bring in static library dependencies. This will not be required in future version and only package <code>Trinsic</code> can be used.</p>","title":"Create new project"},{"location":"dotnet/vaccination-net/#configure-services","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. In your <code>Program.cs</code> file add the following line replacing the <code>null</code> argument with your URL (ignore the <code>serverConfig</code> argument):</p> Create Wallet  <pre><code>var walletService = new WalletService(allison, serverConfig);\nvar credentialsService = new CredentialsService(clinic, serverConfig);\n</code></pre>","title":"Configure services"},{"location":"dotnet/vaccination-net/#setup-wallet-profiles","text":"<p>Let's create three different profiles, each pointing to a separate wallet. Since we are using a single console app for this demo, we will simply set the active profile before each interaction to designate which actor is currently taking action. To create a new wallet profile, we use the Create Wallet feature.</p> Setup Wallets  <pre><code>var (allison, _) = await accountService.SignInAsync(new());\nvar (clinic, _) = await accountService.SignInAsync(new());\nvar (airline, _) = await accountService.SignInAsync(new());\n</code></pre> <p>If you would like to save the profile for future use, you can simply export the serialized profile to a local storage. Please note that the profiles contain sensitive key data, so they should be stored in a secure enclave.</p> <pre><code>using Google.Protobuf;\nusing System.IO;\n\n// Serialize profile by exporting the binary protobuf form\nFile.WriteAllBytes(\"allison.bin\", allison.ToByteString().ToByteArray());\n\n// Create profile from existing data\nvar allison = WalletProfile.Parser.ParseFrom(File.ReadAllBytes(\"allison.bin\"));</code></pre> <p>Read more about security profiles and authentication.</p>","title":"Setup wallet profiles"},{"location":"dotnet/vaccination-net/#certificate-issuance","text":"<p>Upon receiving her vaccine, Allison also receives a digital certificate from the clinic. This certificate is digitally signed by the clinic, acting as an issuer. The certificate is in a JSON form, and for this example, we will use the following JSON. Add this file to your project named <code>vaccination-certificate-unsigned.jsonld</code>.</p> vaccination-certificate-unsigned.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"id\": \"urn:uvci:af5vshde843jf831j128fj\",\n    \"type\": [\n        \"VaccinationCertificate\",\n        \"VerifiableCredential\"\n    ],\n    \"description\": \"COVID-19 Vaccination Certificate\",\n    \"name\": \"COVID-19 Vaccination Certificate\",\n    \"expirationDate\": \"2029-12-03T12:19:52Z\",\n    \"issuanceDate\": \"2019-12-03T12:19:52Z\",\n    \"issuer\": \"did:key:zUC724vuGvHpnCGFG1qqpXb81SiBLu3KLSqVzenwEZNPoY35i2Bscb8DLaVwHvRFs6F2NkNNXRcPWvqnPDUd9ukdjLkjZd3u9zzL4wDZDUpkPAatLDGLEYVo8kkAzuAKJQMr7N2\",\n    \"credentialSubject\": {\n        \"id\": \"urn:uuid:c53e70f8-ce9a-4576-8744-e5f85c20a743\",\n        \"type\": \"VaccinationEvent\",\n        \"batchNumber\": \"1183738569\",\n        \"countryOfVaccination\": \"US\"\n    }\n}</code></pre> <p>Let's set the active profile to the clinic, and call the issuance endpoint</p> Issue Credential  <pre><code>// Set active profile to 'clinic' so we can issue credential signed\n// with the clinic's signing keys\nwalletService.Profile = credentialsService.Profile = clinic;\n\n// Read the JSON credential data\nvar credentialJson = await File.ReadAllTextAsync(VaccinationCertificateUnsigned);\n// Sign the credential using BBS+ signature scheme\nvar credential = await credentialsService.IssueCredential(document: JObject.Parse(credentialJson));\n_testOutputHelper.WriteLine($\"Credential:\\n{credential.ToString(Formatting.Indented)}\");\n</code></pre> <p>At this point, the clinic can send the signed credential to Allison using any available methods. These methods can include any message exchange protocol, or a custom transport. In this case, we'll assume that the credential was delivered to Allison in an offline environment.</p>","title":"Certificate issuance"},{"location":"dotnet/vaccination-net/#store-certificate-in-personal-wallet","text":"<p>Allison can store this credential in her cloud wallet, simply by calling the Insert Item function.</p> Store Credential  <pre><code>// Set active profile to 'allison' so we can manage her cloud wallet\nwalletService.Profile = credentialsService.Profile = allison;\n\nvar itemId = await walletService.InsertItem(credential);\n</code></pre>","title":"Store certificate in personal wallet"},{"location":"dotnet/vaccination-net/#proof-of-vaccination","text":"<p>Before boarding an airplane, Allison must show a proof of vaccination. The request for this proof also comes in a form of JSON, in this case a JSON-LD frame. This request can be communicated using any exchange protocol. Again, we'll assume this was done offline.</p> <p>Let's save this request in a file named <code>vaccination-certificate-frame.jsonld</code></p> vaccination-certificate-frame.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"type\": [\n        \"VerifiableCredential\",\n        \"VaccinationCertificate\"\n    ],\n    \"@explicit\": true,\n    \"issuer\": {},\n    \"credentialSubject\": {\n        \"@explicit\": true,\n        \"@type\": \"VaccinationEvent\",\n        \"batchNumber\": {},\n        \"countryOfVaccination\": {}\n    }\n}</code></pre> <p>This request asks Allison to provide proof of valid vaccination certificate, including the <code>issuer</code>, <code>batchNumber</code>and <code>countryOfVaccination</code> fields.</p> <p>Allison can use the Create Proof functions to build a proof that will share only the requested fields.</p> Share Credential  <pre><code>// We'll read the request frame from a file and communicate this with Allison\nwalletService.Profile = credentialsService.Profile = allison;\n\nvar proofRequestJson = File.ReadAllText(VaccinationCertificateFrame);\n\n// Build a proof for the given request and the `itemId` we previously received\n// which points to the stored credential\nvar credentialProof = await credentialsService.CreateProof(itemId, JObject.Parse(proofRequestJson));\n</code></pre>","title":"Proof of vaccination"},{"location":"dotnet/vaccination-net/#verification","text":"<p>Allison shares the proof of credential she created with the airline. The airline can now use Verify Proof functions to check the validity of the proof.</p> Verify Credential  <pre><code>// The airline verifies the credential\nwalletService.Profile = credentialsService.Profile = airline;\n\n// Check for valid signature\nvar valid = await credentialsService.VerifyProof(credentialProof);\n</code></pre>","title":"Verification"},{"location":"dotnet/vaccination-net/#complete-sample-code","text":"<p>This sample is available in our GitHub repo. You can also simply run the code using Replit and inspect the results.</p>  Run example in Replit <p></p>","title":"Complete sample code"},{"location":"go/","text":"<p>The Trinsic Go SDK makes it easy to interact with the Trinsic API from any Go application. The most recent version of the library can be found on ____. You can find the SDKs source on Github.</p>","title":"The Trinsic Go SDK"},{"location":"go/#installation","text":"<p>TODO</p>","title":"Installation"},{"location":"go/#configuration","text":"<p>TODO</p>","title":"Configuration"},{"location":"go/#next-steps","text":"<p>TODO</p>","title":"Next Steps"},{"location":"ios/","text":"<p>The Trinsic Swift SDK makes it easy to interact with the Trinsic API from any iOS application. The most recent version of the library can be found on ____. You can find the SDKs source on Github.</p>","title":"The Trinsic Swift SDK"},{"location":"ios/#installation","text":"<p>TODO</p>","title":"Installation"},{"location":"ios/#configuration","text":"<p>TODO</p>","title":"Configuration"},{"location":"ios/#next-steps","text":"<p>TODO</p>","title":"Next Steps"},{"location":"java/","text":"<p>The Trinsic Java SDK makes it easy to interact with the Trinsic API from any Java application. The most recent version of the library can be found on Github Maven Packages. You can find the SDKs source on Github.</p>","title":"The Trinsic Java SDK"},{"location":"java/#installation","text":"<ol> <li>Install the Trinsic SDK package from the Github Packages</li> </ol>","title":"Installation"},{"location":"java/#configuration","text":"<ol> <li>Download the Trinsic Okapi binaries for your platform (TODO - this will be handled via winget/brew/deb in the future)</li> <li>Go here and download the latest release</li> <li>You need to ensure that you have the Trinsic Okapi native binaries in the appropriate location.</li> <li>By default, the location is current path. (TODO - This will change to allow better dynamic loading)</li> </ol>","title":"Configuration"},{"location":"java/#next-steps","text":"<p>Once the SDK is installed and configured, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference</p> <p>Start Walkthrough Explore API Java API Reference</p> <p>^ TODO - Macro generate the next steps content since it's essentially identical for all languages?</p>","title":"Next Steps"},{"location":"java/vaccination-java/","text":"","title":"Walkthrough for Java"},{"location":"java/vaccination-java/#technical-requirements","text":"<p>You can run this example on your local machine, or you can use our Gitpod setup to bootstrap a full development environment. If running locally, you'll only need Java (TODO - Specify exact recent version) installed</p>","title":"Technical requirements"},{"location":"java/vaccination-java/#sample-project","text":"<p>Clone this sdk repository: </p> <p>In this project, we'll be following along the <code>java/src/test/java/VaccineDemo.java</code></p>","title":"Sample Project"},{"location":"java/vaccination-java/#configure-services","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. </p> Create Wallet  <pre><code>var serverConfig = TrinsicUtilities.getTestServerConfig();\nSystem.out.println(\"Connecting to:\\n\" + serverConfig);\nvar accountService = new AccountService(null, serverConfig);\n\n\u22ef\n\nvar walletService = new WalletService(allison, serverConfig);\nvar credentialsService = new CredentialsService(clinic, serverConfig);\n</code></pre> <p>Or, if you want to provide a URL: <pre><code>server_address = '&lt;SERVER_ADDRESS&gt;'\nwallet_service = WalletService(server_address)</code></pre></p>","title":"Configure services"},{"location":"java/vaccination-java/#setup-wallet-profiles","text":"<p>Let's create three different profiles, each pointing to a separate wallet. Since we are using a single console app for this demo, we will simply set the active profile before each interaction to designate which actor is currently taking action. To create a new wallet profile, we use the Create Wallet feature.</p> Setup Wallets  <pre><code>// Create 3 different profiles for each participant in the scenario\nvar allison = accountService.signIn(null).getProfile();\nvar clinic = accountService.signIn(null).getProfile();\nvar airline = accountService.signIn(null).getProfile();\n</code></pre> <p>If you would like to save the profile for future use, you can simply export the serialized profile to a local storage. Please note that the profiles contain sensitive key data, so they should be stored in a secure enclave.</p> Save and Load Profile  <pre><code>var writeFile = new FileOutputStream(\"allison.bin\");\nwriteFile.write(allison.toByteString().toByteArray());\nwriteFile.close();\n\n// Create profile from existing data\nvar readFile = new FileInputStream(\"allison.bin\");\nvar allisonBin = readFile.readAllBytes();\nreadFile.close();\nallison = Account.AccountProfile.newBuilder().mergeFrom(allisonBin).build();\n</code></pre> <p>Read more about security profiles and authentication.</p>","title":"Setup wallet profiles"},{"location":"java/vaccination-java/#certificate-issuance","text":"<p>Upon receiving her vaccine, Allison also receives a digital certificate from the clinic. This certificate is digitally signed by the clinic, acting as an issuer. The certificate is in a JSON form, and for this example, we will use the following JSON. Add this file to your project named <code>vaccination-certificate-unsigned.jsonld</code>.</p> vaccination-certificate-unsigned.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"id\": \"urn:uvci:af5vshde843jf831j128fj\",\n    \"type\": [\n        \"VaccinationCertificate\",\n        \"VerifiableCredential\"\n    ],\n    \"description\": \"COVID-19 Vaccination Certificate\",\n    \"name\": \"COVID-19 Vaccination Certificate\",\n    \"expirationDate\": \"2029-12-03T12:19:52Z\",\n    \"issuanceDate\": \"2019-12-03T12:19:52Z\",\n    \"issuer\": \"did:key:zUC724vuGvHpnCGFG1qqpXb81SiBLu3KLSqVzenwEZNPoY35i2Bscb8DLaVwHvRFs6F2NkNNXRcPWvqnPDUd9ukdjLkjZd3u9zzL4wDZDUpkPAatLDGLEYVo8kkAzuAKJQMr7N2\",\n    \"credentialSubject\": {\n        \"id\": \"urn:uuid:c53e70f8-ce9a-4576-8744-e5f85c20a743\",\n        \"type\": \"VaccinationEvent\",\n        \"batchNumber\": \"1183738569\",\n        \"countryOfVaccination\": \"US\"\n    }\n}</code></pre> <p>We specify links to the jsonld files:</p> Data Paths  <pre><code>public static String baseTestPath() {\n    return Path.of(new File(\"\").getAbsolutePath(), \"..\", \"devops\", \"testdata\").toAbsolutePath().toString();\n}\n\npublic static Path vaccineCertUnsignedPath() {\n    return Path.of(baseTestPath(), \"vaccination-certificate-unsigned.jsonld\");\n}\n\npublic static Path vaccineCertFramePath() {\n    return Path.of(baseTestPath(), \"vaccination-certificate-frame.jsonld\");\n}\n</code></pre> <p>Let's set the active profile to the clinic, and call the issuance endpoint</p> Issue Credential  <pre><code>// Sign a credential as the clinic and send it to Allison\nvar credentialJson = new Gson().fromJson(Files.readString(vaccineCertUnsignedPath()), HashMap.class);\nvar credential = credentialsService.issueCredential(credentialJson);\nSystem.out.println(\"Credential: \" + credential);\n</code></pre> <p>At this point, the clinic can send the signed credential to Allison using any available methods. These methods can include any message exchange protocol, or a custom transport. In this case, we'll assume that the credential was delivered to Allison in an offline environment.</p>","title":"Certificate issuance"},{"location":"java/vaccination-java/#store-certificate-in-personal-wallet","text":"<p>Allison can store this credential in her cloud wallet, simply by calling the Insert Item function.</p> Store Credential  <pre><code>// Alice stores the credential in her cloud wallet.\nvar itemId = walletService.insertItem(credential);\nSystem.out.println(\"item id = \" + itemId);\n</code></pre>","title":"Store certificate in personal wallet"},{"location":"java/vaccination-java/#proof-of-vaccination","text":"<p>Before boarding an airplane, Allison must show a proof of vaccination. The request for this proof also comes in a form of JSON, in this case a JSON-LD frame. This request can be communicated using any exchange protocol. Again, we'll assume this was done offline.</p> <p>Let's save this request in a file named <code>vaccination-certificate-frame.jsonld</code></p> vaccination-certificate-frame.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"type\": [\n        \"VerifiableCredential\",\n        \"VaccinationCertificate\"\n    ],\n    \"@explicit\": true,\n    \"issuer\": {},\n    \"credentialSubject\": {\n        \"@explicit\": true,\n        \"@type\": \"VaccinationEvent\",\n        \"batchNumber\": {},\n        \"countryOfVaccination\": {}\n    }\n}</code></pre> <p>This request asks Allison to provide proof of valid vaccination certificate, including the <code>issuer</code>, <code>batchNumber</code>and <code>countryOfVaccination</code> fields.</p> <p>Allison can use the Create Proof functions to build a proof that will share only the requested fields.</p> Share Credential  <pre><code>// Allison shares the credential with the venue.\n// The venue has communicated with Allison the details of the credential\n// that they require expressed as a JSON-LD frame.\ncredentialsService.setProfile(allison);\nvar proofRequestJson = new Gson().fromJson(Files.readString(vaccineCertFramePath()), HashMap.class);\nvar credentialProof = credentialsService.createProof(itemId, proofRequestJson);\nSystem.out.println(\"Proof: \" + credentialProof);\n</code></pre>","title":"Proof of vaccination"},{"location":"java/vaccination-java/#verification","text":"<p>Allison shares the proof of credential she created with the airline. The airline can now use Verify Proof functions to check the validity of the proof.</p> Verify Credential  <pre><code>// The airline verifies the credential\ncredentialsService.setProfile(airline);\nvar isValid = credentialsService.verifyProof(credentialProof);\nSystem.out.println(\"Verification result: \" + isValid);\nAssertions.assertTrue(isValid);\n</code></pre>","title":"Verification"},{"location":"java/vaccination-java/#complete-sample-code","text":"<p>This sample is available in our GitHub repo.</p>","title":"Complete sample code"},{"location":"learn/credentials/","text":"<p></p> <p>\"Verifiable Credentials\", or \"VCs\" are digital documents that conform to the W3C Verifiable Credential Data Model. VCs provide a standard for digitally issuing, holding, and verifying data about a subject. A verifiable credential is a set of tamper-evident claims and metadata that cryptographically prove who issued it.  https://www.w3.org/TR/vc-data-model/</p> <p>Verifiable credentials are unique from other kinds of digital documents because they enable you to verify the following things: </p> <ol> <li>The original issuing entity (the source of the data) </li> <li>It was issued to the entity presenting it (the subject of the data) </li> <li>It hasn't been tampered with (the veracity of the data)</li> <li>Whether the issuer revoked the credential as of a particular point in time (the status of the data)</li> </ol> <p>trust triangle</p>","title":"Credentials"},{"location":"learn/credentials/#components-of-a-credential","text":"<p>To break down the components of a credential, we'll use a digital driver's license as an example.</p>","title":"Components of a Credential"},{"location":"learn/credentials/#issuer-did","text":"<p>As you can see from the diagram above, a verifier will only accept a credential if they trust its source. For example, in the United States a TSA agent will only let you on an airplane if you present a valid driver's license (or other gov ID); they do this because they trust the DMV or other agency that issued it. In order to validate where a credential came from, verifiers use the issuer's DID.</p> <p>Each new issuer is assigned an issuer DID. The issuer DID acts as a public-facing address or public key. In self-sovereign identity, these DIDs are usually written to a public blockchain, but other locations are possible, too. Each issuer DID has an associated private key which is used to cryptographically \"sign\" each issued credential. In fact, each attribute inside the credential is signed in this manner, allowing the holder of the credential to share only a subset of the attributes when desired. For example, someone could share their name and age from their driver's license without sharing the driver's license number, address, and hair color. Using the issuer DID and straightforward public-private key cryptography, anyone can verify the attributes in the credential were attested to by the issuer. </p>","title":"Issuer DID"},{"location":"learn/credentials/#schema","text":"<p>Each credential needs a template so the data can be shared and interpreted correctly. That template is called a Schema.</p> <p>Schemas are the general structure of the credential. In our example, they tell us what information must be included on the driver's license in order for it to be valid, like Full name, Address, Eye color, etc. </p> <p>In short, they are the attributes that you want to include in this credential.</p>","title":"Schema"},{"location":"learn/credentials/#example","text":"<pre><code>{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"description\": \"Email\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"emailAddress\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n            }\n        },\n    \"required\": [\"emailAddress\"],\n    \"additionalProperties\": false\n}</code></pre> <p>Schemas are nonproprietary; any issuer can view/use the schemas written by any other issuer.</p> <p>We abstract schema creation away into the same action as creation of a credential template. Keep reading to read how to create a schema and credential template. </p>","title":"Example:"},{"location":"learn/ecosystems/","text":"<p>Exchanging credentials often requires many different participants to all communicate and collaborate. Aligning standards and incentives is challenging. </p> <p>We've made it simple to create an ecosystem of participants to all exchange credentials. </p>","title":"Ecosystems"},{"location":"learn/ecosystems/#potential-scenarios","text":"<p>Industry groups, enterprises, and startups who are deploying this technology to multi-party ecosystems. Our focus on building for interoperability, hyper-scalability, and ease of use means you can get to market faster with a better product with Trinsic than any other way. </p> <p>Trust ecosystems are networks of participants that can authenticate to and share data with one another. Trust ecosystems exist all around us, but most are analog and disaggregated. The first trust ecosystems to go digital were payments networks. Visa, MasterCard, etc. introduced a standard mechanism to allow consumers to make purchases with any merchant using credit from any bank. Visa created an enduring business while simultaneously unlocking value for all participants involved.</p> <p>Credit card networks represent only one kind of trust ecosystem. A trust ecosystem at a minimum has the following 4 roles.</p> <ul> <li>Provider - provides the tools and rules to the rest of the participants to ensure a healthy ecosystem, generally through a product experience that is sold to the other participants</li> <li>Issuer - is the source of data that is shared throughout an ecosystem</li> <li>Verifier - consumes data in an ecosystem</li> <li>Holder - holds data, and is generally the subject of the data, in an ecosystem</li> </ul>","title":"Potential Scenarios"},{"location":"learn/ecosystems/#anatomy-of-a-trust-ecosystem","text":"<p>Before diving into the value provided by each participant, it\u2019s helpful to cover how it works at a high level. You may dive deeper into any of these items by clicking into the respective pages. We\u2019ll use the analogy of a payment network to conceptualize the purpose of each component.</p> <p>Wallet - A place to securely store verifiable credentials.</p> <p>Credential - W3C Verifiable Credentials that contain valuable data about a subject. These are signed and issued by an issuer.</p> <p>Pass - A presentation of a verifiable credential that only includes the information required for use case.</p> <p>Underlying Tech - All of the additional standardized technology Trinsic uses to build trust ecosystems.</p>","title":"Anatomy of a Trust Ecosystem"},{"location":"learn/ecosystems/#value-of-trust-ecosystems-to-participants","text":"<p>The first step to successfully building a trust ecosystem that can scale is to identify the value for each of the participants. Here we will elaborate on the value derived by each actor in an ecosystem and how Trinsic\u2019s platform is optimized to help deliver it.</p>","title":"Value of Trust Ecosystems to Participants"},{"location":"learn/ecosystems/#providers","text":"<p>Providers typically already have, or are building, a product or platform to sell to the issuers and verifiers with the goal of creating a sustainable business. </p> <p>Visa, for example, isn\u2019t a currency, a bank, or a merchant. They sell the rails for transaction settlement to banks and merchants to enable the seamless transactions we all enjoy. By taking a small interchange fee, they capture value alongside the banks and merchants and have built a sustainable business.</p> <p>Trinsic is the only company to offer a product tailored specifically for providers. That means instead of patching together various open source components meant for issuers or verifiers, Trinsic offers a product built from the ground-up to accommodate the unique needs of providers. Ultimately, that means providers using Trinsic get to market faster with better products.</p>","title":"Providers"},{"location":"learn/ecosystems/#issuers","text":"<p>Issuers realize value when they extend or augment their existing business operations. By issuing the data they already have in verifiable credential form, they often can increase revenue, reduce verification costs, and improve brand presence. </p> <p>When credit cards were in their infancy, banks began issuing cards because it allowed them to continue their existing business (giving credit) in a new way. Likewise, the issuers that get the most value from verifiable credentials are ones who already have data about people, and simply need to give it to them in a new way (e.g. medical labs who already give paper documents can now give digital form).</p> <p>Trinsic\u2019s platform is optimized to both reduce onboarding costs and add help issuers scale without increasing their costs</p> <ul> <li>Before credit cards banks could offer various consumer loans</li> </ul>","title":"Issuers"},{"location":"learn/ecosystems/#holders","text":"<p>Holders acquire the most convenient way to prove something about themselves digitally, both in-person and online</p> <ul> <li>Before credit cards, consumers needed to pay with paper. Paying with credit meant bespoke processes with each individual retailer (e.g. opening a tab at a bar, creating a Macy\u2019s account, etc). Likewise today our digital identities are all siloed and separate, resulting in a myriad of problems for consumers.</li> </ul>","title":"Holders"},{"location":"learn/ecosystems/#verifiers","text":"<p>Verifiers get instant, trusted authentication and verification without needing to maintain their own infrastructure</p> <ul> <li>Before credit card networks like Visa, merchants needed to issue credit and manage collections in-house if they wanted customers who could buy on credit. Likewise, companies in virtually every industry have compliance, risk, and identity departments where they manage this in-house. Just as Visa turned electronic payments into a simple terminal installation for merchants, so too will trust ecosystems unlock the ability for verifiers of all kinds to focus on their true business without compromising on trust and security.</li> </ul> <p>Like the internet itself, trust over IP represents a massive business opportunity for innovators in all industries. And like the internet itself, the vast majority of the value will be created at the application layer.</p>","title":"Verifiers"},{"location":"learn/passes/","text":"<p>Passes are documents generated from one or more credentials that contain only the information required to be verified. They can be generated in advance or in real-time. Passes minimize the information about you that is shared with third parties.</p>","title":"Passes"},{"location":"learn/security/","text":"","title":"Trinsic's Security"},{"location":"learn/security/#overview","text":"<p>TODO</p>","title":"Overview"},{"location":"learn/security/#zero-knowledge-security-architecture","text":"<p>TODO</p>","title":"Zero-knowledge Security Architecture"},{"location":"learn/security/#new-account-registration","text":"<pre><code>\nsequenceDiagram\n\n    participant U as User\n    participant A as API\n    participant S as Cloud&lt;br/&gt;Services\n    participant E as Email&lt;br/&gt;Provider\n\n    U-&gt;&gt;A: New Account :Email :Name\n\n    activate A\n    A-&gt;&gt;S: Create Wallet\n    activate S\n    note over S: Generate \"WalletId\" and&lt;br/&gt;initialize storage&lt;br/&gt;provider\n    S-&gt;&gt;A: :WalletId\n    deactivate S\n\n    A-&gt;&gt;A: Generate :DeviceId\n    A-&gt;&gt;S: Grant Access&lt;br/&gt;:DeviceId :WalletId\n\n    activate S\n    S-&gt;&gt;S: Generate :Token\n    S-&gt;&gt;S: Blind Token :Code\n    S-&gt;&gt;E: Send :Code to :Email\n    S-&gt;&gt;A: :BlindedToken\n    deactivate S\n\n    A-&gt;&gt;U: Response&lt;br/&gt;:BlindedToken :AccessData\n    note right of U: :AccessData = { :DeviceId :WalletId }\n    deactivate A\n\n    U-&gt;&gt;E: Check :Email for :Code\n    activate U\n    U-&gt;&gt;U: Unblind :BlindedToken&lt;br/&gt;using :Code\n    note over U: Optionally, blind token&lt;br /&gt;using :PIN or&lt;br/&gt;:KeyChainSecret\n    U-&gt;&gt;U: Store :AccountProfile\n    note over U: :AccountProfile = { :Token :AccessData }\n    deactivate U\n</code></pre>","title":"New Account Registration"},{"location":"learn/security/#authenticated-requests","text":"<pre><code>\nsequenceDiagram\n\n    participant U as User\n    participant A as API\n    participant S as Cloud&lt;br/&gt;Services\n    participant W as Wallet&lt;br/&gt;Provider\n\n    note over U: Initiate request to&lt;br/&gt;wallet data\n    activate U\n    U-&gt;&gt;U: Retrieve :WalletProfile\n    U--&gt;&gt;U: Input :PIN\n    note over U: Optional :PIN or&lt;br/&gt;:KeyChainSecret\n    U-&gt;&gt;U: Create API :Request&lt;br/&gt;and :RequestHash\n    U-&gt;&gt;U: Generate ZKP :Proof\n    note over U: Using :WalletProfile and :Nonce\n    note over U: :Nonce = { :Timestamp :RequestHash }\n    U-&gt;&gt;U: Add :Proof to&lt;br/&gt;:Authorization header\n    U-&gt;&gt;+A: Send Request\n    deactivate U\n\n    A-&gt;&gt;A: Parse :Authorization header\n    A-&gt;&gt;A: Check HMAC\n\n    A-&gt;&gt;+S: Authenticate :Request\n    S-&gt;&gt;S: Check :Proof\n    alt if invalid proof\n        S--&gt;&gt;A: Unauthorized (Invalid Proof)\n        A--&gt;&gt;U: Unauthorized\n    end\n    S-&gt;&gt;S: Check access for :DeviceId&lt;br/&gt;to :WalletId\n    S-&gt;&gt;-A: :AuthenticationResponse\n\n    alt if not authorized\n        A--&gt;&gt;U: Unauthorized\n    else if authorized\n        note over A: Output claims [ :WalletId :DeviceId ]\n        A-&gt;&gt;+W: Get Data :WalletId :Request\n        W-&gt;&gt;-A: :WalletData\n        A-&gt;&gt;-U: :WalletData\n    end</code></pre>","title":"Authenticated Requests"},{"location":"learn/tech/","text":"","title":"Underlying Tech"},{"location":"learn/tech/#linked-data","text":"<p>When we consider credentials getting exchanged online far and wide, a problem starts to occur - how does everyone know what every else means when they show a credential? To the rescue comes Linked Data, a format for representing structured data with self-contained descriptors of that data.</p> <p>\"Linked data is to spreadsheets and databases what the web of hypertext documents is to word processor files\" - W3C Wiki on Linked Data</p>","title":"Linked Data"},{"location":"learn/tech/#decentralized-identifiers","text":"<p>Taken from the Verifiable Credential Data Model, a decentralized identifier is \"a portable URL-based identifier, also known as a DID, associated with an entity. These identifiers are most often used in a verifiable credential and are associated with subjects such that a verifiable credential itself can be easily ported from one repository to another without the need to reissue the credential. An example of a DID is <code>did:example:123456abcdef</code>\"</p>","title":"Decentralized Identifiers"},{"location":"learn/tech/#zero-knowledge-proofs","text":"<p>One of the most exciting qualities of verifiable credentials are their ability to minimize the data shared about you when you prove who you are. The classic example is showing your driver's license in a bar. While a human bouncer may forget all the revealing information on your driver's license, a computerized bouncer that scans your driver's license never forgets any information. With zero knowledge proofs, you can choose specific information from your credentials to share with verifiers.</p> <p>These are enabled through a BBS+ Signature specification.</p>","title":"Zero Knowledge Proofs"},{"location":"learn/wallets/","text":"<p>Wallets can be thought of a little like an email inbox. Wallets exist to send, receive and store credentials. Wallets can be hosted by anyone. Each wallet can only be accessed by a set of keys stored on devices. Wallets represent a user's identity. They manage an identity for an individual.  Trinsic has a wallet that is built to be eventually interoperable with other identity wallets that exist.</p>","title":"Wallets"},{"location":"node/","text":"<p>The Trinsic Node SDK makes it easy to interact with the Trinsic API from any backend javascript application. The most recent version of the library can be found on npm. You can find the SDKs source on Github.</p>","title":"The Trinsic Javascript / Node SDK"},{"location":"node/#installation","text":"<p>Install the package for Node from npmjs.com </p> Install <pre><code>npm i @trinsic/trinsic</code></pre>","title":"Installation"},{"location":"node/#configuration","text":"<p>When using the SDK in your code, you can pass parameters to the default service constructors and use the provided methods to set different active profiles.</p> <pre><code>import { WalletService } from '@trinsic/trinsic';\n\n// Set the server address\nconst service = new WalletService(\"https://example.com\");\n\n// Create new profile or import an existing one\nconst myProfile = await service.createWallet();\n\n// Set the profile to be used with authorization pipeline\nservice.setProfile(myProfile);</code></pre>","title":"Configuration"},{"location":"node/#next-steps","text":"<p>Once the SDK is installed and configured, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference</p> <p>Start Walkthrough Explore API</p>","title":"Next Steps"},{"location":"node/vaccination-node/","text":"<p>In this walkthrough we will showcase a practical example of how participants in an ecosystem use verifiable data to exchange trusted bits of information.</p>","title":"Vaccination Use Case for Node.js"},{"location":"node/vaccination-node/#ecosystem-setup","text":"<p>Before we begin, please ensure that you have access to our beta environment. If you haven't yet, join our early adopter program and we'll get in touch.</p>","title":"Ecosystem setup"},{"location":"node/vaccination-node/#use-case-overview","text":"<p>In this walkthrough we'll explore a scenario where Allison gets her vaccination certificate. She then uses this certificate to board an airline that requires proof of vaccination. Each participant in this scenario is part of the same ecosystem, though this is not a functional requirement.</p> <pre><code>journey\n    section Issuance\n      Obtain cert.: 3: Allison, Clinic\n      Store in wallet: 3: Allison\n    section Verification\n      Request cert.: 3: Allison, Airline\n      Share: 3: Allison\n      Verify: 5: Airline</code></pre> <p>If you haven't learned about verifiable credentials already, first read Verifiable Credential Basics.</p> <p>In most credential exchange scenarios there are three primary roles - Issuer, Holder, and Verifier.</p> <p>Issuer: Responsible for issuing signed credentials that attest information about a credential subject</p> <p>Holder: Stores issued credentials from an issuer. Most often this is the credential subject. Also generates passes to share with verifiers.</p> <p>Verifier: Verifies passes presented from holders.</p>","title":"Use case overview"},{"location":"node/vaccination-node/#technical-requirements","text":"<p>You can run this example on your local machine, or you can use our Gitpod setup to bootstrap a full development environment. If running locally, you only need node and npm installed on your machine and a code editor of your choice.</p>","title":"Technical requirements"},{"location":"node/vaccination-node/#create-new-project","text":"<p>Let's create a new console app that we will use to add our sample code</p> <pre><code>mkdir VaccinationSample &amp;&amp; cd VaccinationSample &amp;&amp; npm init</code></pre> <p>You can select all the defaults for the node project.</p> <p>Add the required dependencies</p> <pre><code>npm i @trinsic/trinsic</code></pre>","title":"Create new project"},{"location":"node/vaccination-node/#configure-services","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. In your <code>index.js</code> file add the following line replacing the placeholder with your URL:</p> <pre><code>const { WalletService } = require('@trinsic/trinsic')\n\nconst walletService = new WalletService(\"&lt;ECOSYSTEM SERVICE URL&gt;\");</code></pre>","title":"Configure services"},{"location":"node/vaccination-node/#setup-wallet-profiles","text":"<p>Let's create three different profiles, each pointing to a separate wallet. Since we are using a single console app for this demo, we will simply set the active profile before each interaction to designate which actor is currently taking action. To create a new wallet profile, we use the Create Wallet feature.</p> <pre><code>let allison = await walletService.createWallet();\nlet clinic = await walletService.createWallet();\nlet airline = await walletService.createWallet();</code></pre> <p>If you would like to save the profile for future use, you can simply export the serialized profile to a local storage. Please note that the profiles contain sensitive key data, so they should be stored in a secure enclave.</p> <pre><code>const fs = require('fs');\nconst { Struct } = require('google-protobuf/google/protobuf/struct_pb');\n\n// Serialize profile by exporting the binary protobuf form\nfs.writeFileSync(\"allison.bin\", allison.serializeBinary());\n\n// Create profile from existing data\nlet profile = fs.readFileSync(\"allison.bin\");\nlet allison = WalletProfile.deserializeBinary(profile);</code></pre>  <p>Loading Profiles</p> <p>In order to load a profile from a saved file you'll need to install google-protobuf with <code>npm i google-protobuf</code> in order to use the Struct class and convert the DID Document from JavaScript to the protobuf form.</p>  <p>Read more about security profiles and authentication.</p>","title":"Setup wallet profiles"},{"location":"node/vaccination-node/#certificate-issuance","text":"<p>Upon receiving her vaccine, Allison also receives a digital certificate from the clinic. This certificate is digitally signed by the clinic, acting as an issuer. The certificate is in a JSON form, and for this example, we will use the following JSON. Add this file to your project named <code>vaccination-certificate-unsigned.jsonld</code>.</p> vaccination-certificate-unsigned.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"id\": \"urn:uvci:af5vshde843jf831j128fj\",\n    \"type\": [\n        \"VaccinationCertificate\",\n        \"VerifiableCredential\"\n    ],\n    \"description\": \"COVID-19 Vaccination Certificate\",\n    \"name\": \"COVID-19 Vaccination Certificate\",\n    \"expirationDate\": \"2029-12-03T12:19:52Z\",\n    \"issuanceDate\": \"2019-12-03T12:19:52Z\",\n    \"issuer\": \"did:key:zUC724vuGvHpnCGFG1qqpXb81SiBLu3KLSqVzenwEZNPoY35i2Bscb8DLaVwHvRFs6F2NkNNXRcPWvqnPDUd9ukdjLkjZd3u9zzL4wDZDUpkPAatLDGLEYVo8kkAzuAKJQMr7N2\",\n    \"credentialSubject\": {\n        \"id\": \"urn:uuid:c53e70f8-ce9a-4576-8744-e5f85c20a743\",\n        \"type\": \"VaccinationEvent\",\n        \"batchNumber\": \"1183738569\",\n        \"countryOfVaccination\": \"US\"\n    }\n}</code></pre> <p>Let's set the active profile to the clinic, and call the issuance endpoint</p> <pre><code>// Set active profile to 'clinic' so we can issue credential signed\n// with the clinic's signing keys\nwalletService.setProfile(clinic);\n\n// Read the JSON credential data\nlet credentialJson = fs.readFileSync(\"./vaccination-certificate-unsigned.jsonld\");\n\n// Sign the credential using BBS+ signature scheme\nlet credential = await walletService.issueCredential(JSON.parse(credentialJson));</code></pre> <p>At this point, the clinic can send the signed credential to Allison using any available methods. These methods can include any message exchange protocol, or a custom transport. In this case, we'll assume that the credential was delivered to Allison in an offline environment.</p>","title":"Certificate issuance"},{"location":"node/vaccination-node/#store-certificate-in-personal-wallet","text":"<p>Allison can store this credential in her cloud wallet, simply by calling the Insert Item function.</p> <pre><code>// Set active profile to 'allison' so we can manage her cloud wallet\nwalletService.setProfile(allison);\n\n// Insert the signed credential\nlet itemId = await walletService.insertItem(credential);</code></pre>","title":"Store certificate in personal wallet"},{"location":"node/vaccination-node/#proof-of-vaccination","text":"<p>Before boarding an airplane, Allison must show a proof of vaccination. The request for this proof also comes in a form of JSON, in this case a JSON-LD frame. This request can be communicated using any exchange protocol. Again, we'll assume this was done offline.</p> <p>Let's save this request in a file named <code>vaccination-certificate-frame.jsonld</code></p> vaccination-certificate-frame.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"type\": [\n        \"VerifiableCredential\",\n        \"VaccinationCertificate\"\n    ],\n    \"@explicit\": true,\n    \"issuer\": {},\n    \"credentialSubject\": {\n        \"@explicit\": true,\n        \"@type\": \"VaccinationEvent\",\n        \"batchNumber\": {},\n        \"countryOfVaccination\": {}\n    }\n}</code></pre> <p>This request asks Allison to provide proof of valid vaccination certificate, including the <code>issuer</code>, <code>batchNumber</code>and <code>countryOfVaccination</code> fields.</p> <p>Allison can use the Create Proof functions to build a proof that will share only the requested fields.</p> <pre><code>// We'll read the request frame from a file and communicate this with Allison\nlet proofRequestJson = fs.readFileSync(\"./vaccination-certificate-frame.jsonld\");\n\n// Set the active profile to 'allison'\nwalletService.setProfile(allison);\n\n// Build a proof for the given request and the `itemId` we previously received\n// which points to the stored credential\nlet credentialProof = await walletService.createProof(itemId, JSON.parse(proofRequestJson));</code></pre>","title":"Proof of vaccination"},{"location":"node/vaccination-node/#verification","text":"<p>Allison shares the proof of credential she created with the airline. The airline can now use Verify Proof functions to check the validity of the proof.</p> <pre><code>// Set active profile to 'airline'\nwalletService.setProfile(airline);\n\n// Check for valid signature\nlet valid = await walletService.verifyProof(credentialProof);</code></pre>","title":"Verification"},{"location":"node/vaccination-node/#complete-sample-code","text":"<p>This sample is available in our GitHub repo.</p>","title":"Complete sample code"},{"location":"python/","text":"<p>The Trinsic Python SDK makes it easy to interact with the Trinsic API from any Python application. The most recent version of the library can be found on PyPi. You can find the SDKs source on Github.</p>","title":"The Trinsic Python SDK"},{"location":"python/#installation","text":"<pre><code>pip install trinsic-sdk</code></pre>","title":"Installation"},{"location":"python/#configuration","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. </p> <pre><code>from trinsic.services import WalletService, create_channel_if_needed, ProviderService\n\nserver_address = '&lt;SERVER_ADDRESS&gt;'\nwallet_service = WalletService(server_address)</code></pre> <pre><code></code></pre>","title":"Configuration"},{"location":"python/#next-steps","text":"<p>Once the SDK is installed and configured, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference</p> <p>Start Walkthrough Explore API Python API Reference</p>","title":"Next Steps"},{"location":"python/vaccination-python/","text":"","title":"Walkthrough for Python"},{"location":"python/vaccination-python/#technical-requirements","text":"<p>You can run this example on your local machine, or you can use our Gitpod setup to bootstrap a full development environment. If running locally, you'll only need python 3 installed</p>","title":"Technical requirements"},{"location":"python/vaccination-python/#sample-project","text":"<p>Clone this sdk repository: </p> <p>In this project, we'll be following along the <code>python/samples/vaccine_demo.py</code></p>","title":"Sample Project"},{"location":"python/vaccination-python/#configure-services","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. </p> Create Wallet  <pre><code>account_service = AccountService(server_config=trinsic_test_config())\n\n\u22ef\n\nwallet_service = WalletService(allison, trinsic_test_config())\ncredentials_service = CredentialsService(clinic, trinsic_test_config())\n</code></pre> <p>Or, if you want to provide a URL: <pre><code>server_address = '&lt;SERVER_ADDRESS&gt;'\nwallet_service = WalletService(server_address)</code></pre></p>","title":"Configure services"},{"location":"python/vaccination-python/#setup-wallet-profiles","text":"<p>Let's create three different profiles, each pointing to a separate wallet. Since we are using a single console app for this demo, we will simply set the active profile before each interaction to designate which actor is currently taking action. To create a new wallet profile, we use the Create Wallet feature.</p> Setup Wallets  <pre><code># Create 3 different profiles for each participant in the scenario\nallison, _ = await account_service.sign_in()\nclinic, _ = await account_service.sign_in()\nairline, _ = await account_service.sign_in()\n</code></pre> <p>If you would like to save the profile for future use, you can simply export the serialized profile to a local storage. Please note that the profiles contain sensitive key data, so they should be stored in a secure enclave.</p> Save and Load Profile  <pre><code># Store profile for later use\nwith open(\"allison.bin\", \"wb\") as fid:\n    fid.write(bytes(allison))\n\n# Create profile from existing data\nallison = AccountProfile()\nwith open(\"allison.bin\", \"rb\") as fid:\n    allison.parse(fid.read())\n</code></pre> <p>Read more about security profiles and authentication.</p>","title":"Setup wallet profiles"},{"location":"python/vaccination-python/#certificate-issuance","text":"<p>Upon receiving her vaccine, Allison also receives a digital certificate from the clinic. This certificate is digitally signed by the clinic, acting as an issuer. The certificate is in a JSON form, and for this example, we will use the following JSON. Add this file to your project named <code>vaccination-certificate-unsigned.jsonld</code>.</p> vaccination-certificate-unsigned.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"id\": \"urn:uvci:af5vshde843jf831j128fj\",\n    \"type\": [\n        \"VaccinationCertificate\",\n        \"VerifiableCredential\"\n    ],\n    \"description\": \"COVID-19 Vaccination Certificate\",\n    \"name\": \"COVID-19 Vaccination Certificate\",\n    \"expirationDate\": \"2029-12-03T12:19:52Z\",\n    \"issuanceDate\": \"2019-12-03T12:19:52Z\",\n    \"issuer\": \"did:key:zUC724vuGvHpnCGFG1qqpXb81SiBLu3KLSqVzenwEZNPoY35i2Bscb8DLaVwHvRFs6F2NkNNXRcPWvqnPDUd9ukdjLkjZd3u9zzL4wDZDUpkPAatLDGLEYVo8kkAzuAKJQMr7N2\",\n    \"credentialSubject\": {\n        \"id\": \"urn:uuid:c53e70f8-ce9a-4576-8744-e5f85c20a743\",\n        \"type\": \"VaccinationEvent\",\n        \"batchNumber\": \"1183738569\",\n        \"countryOfVaccination\": \"US\"\n    }\n}</code></pre> <p>We specify links to the jsonld files:</p> Data Paths  <pre><code>def _base_data_path() -&gt; str:\n    return abspath(join(dirname(__file__), \"..\", \"..\", \"devops\", \"testdata\"))\n\n\ndef _vaccine_cert_unsigned_path() -&gt; str:\n    return abspath(join(_base_data_path(), \"vaccination-certificate-unsigned.jsonld\"))\n\n\ndef _vaccine_cert_frame_path() -&gt; str:\n    return abspath(join(_base_data_path(), \"vaccination-certificate-frame.jsonld\"))\n</code></pre> <p>Let's set the active profile to the clinic, and call the issuance endpoint</p> Issue Credential  <pre><code># Sign a credential as the clinic and send it to Allison\nwith open(_vaccine_cert_unsigned_path(), \"r\") as fid:\n    credential_json = json.load(fid)\n\ncredential = await credentials_service.issue_credential(credential_json)\nprint(f\"Credential: {credential}\")\n</code></pre> <p>At this point, the clinic can send the signed credential to Allison using any available methods. These methods can include any message exchange protocol, or a custom transport. In this case, we'll assume that the credential was delivered to Allison in an offline environment.</p>","title":"Certificate issuance"},{"location":"python/vaccination-python/#store-certificate-in-personal-wallet","text":"<p>Allison can store this credential in her cloud wallet, simply by calling the Insert Item function.</p> Store Credential  <pre><code># Alice stores the credential in her cloud wallet.\nwallet_service.profile = allison\nitem_id = await wallet_service.insert_item(credential)\nprint(f\"item id = {item_id}\")\n</code></pre>","title":"Store certificate in personal wallet"},{"location":"python/vaccination-python/#proof-of-vaccination","text":"<p>Before boarding an airplane, Allison must show a proof of vaccination. The request for this proof also comes in a form of JSON, in this case a JSON-LD frame. This request can be communicated using any exchange protocol. Again, we'll assume this was done offline.</p> <p>Let's save this request in a file named <code>vaccination-certificate-frame.jsonld</code></p> vaccination-certificate-frame.jsonld  <pre><code>{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"type\": [\n        \"VerifiableCredential\",\n        \"VaccinationCertificate\"\n    ],\n    \"@explicit\": true,\n    \"issuer\": {},\n    \"credentialSubject\": {\n        \"@explicit\": true,\n        \"@type\": \"VaccinationEvent\",\n        \"batchNumber\": {},\n        \"countryOfVaccination\": {}\n    }\n}</code></pre> <p>This request asks Allison to provide proof of valid vaccination certificate, including the <code>issuer</code>, <code>batchNumber</code>and <code>countryOfVaccination</code> fields.</p> <p>Allison can use the Create Proof functions to build a proof that will share only the requested fields.</p> Share Credential  <pre><code># Allison shares the credential with the venue.\n# The venue has communicated with Allison the details of the credential\n# that they require expressed as a JSON-LD frame.\ncredentials_service.profile = allison\nwith open(_vaccine_cert_frame_path(), \"r\") as fid2:\n    proof_request_json = json.load(fid2)\n\ncredential_proof = await credentials_service.create_proof(document_id=item_id, reveal_document=proof_request_json)\nprint(f\"Proof: {credential_proof}\")\n</code></pre>","title":"Proof of vaccination"},{"location":"python/vaccination-python/#verification","text":"<p>Allison shares the proof of credential she created with the airline. The airline can now use Verify Proof functions to check the validity of the proof.</p> Verify Credential  <pre><code># The airline verifies the credential\ncredentials_service.profile = airline\nvalid = await credentials_service.verify_proof(credential_proof)\n\nprint(f\"Verification result: {valid}\")\nassert valid\n</code></pre>","title":"Verification"},{"location":"python/vaccination-python/#complete-sample-code","text":"<p>This sample is available in our GitHub repo.</p>","title":"Complete sample code"},{"location":"reference/","text":"<p>If you are ready to begin integrating the SDK, make sure you have an SDK installed and configured. You can install each SDK by following the instructions in each page under Build in the sidebar.</p> <p>When using the SDK, you can pass parameters to the default service constructors and use the provided methods to set different active profiles.</p>","title":"Overview"},{"location":"reference/#authorization","text":"<p>Trinsic Ecosystems uses authenticated access for accessing personal data. This is implemented using Authorization Capabilities for Linked Data  (ZCAP-LD for short). Zcaps provide a secure way for linked data systems to grant and express authority utilizing the object capability model. Our wallet capabilities are represented as linked data objects which are signed with Linked Data Proofs. LD Proofs represent the core technology of the way we share and exchange authentic data with others.</p>","title":"Authorization"},{"location":"reference/#profile-data-format","text":"<p>Security Profiles are represented as a protobuf message that contains details about the connecting device to the remote cloud wallet. These are sensitive details that contain private key data, and must always be stored in a secure storage. The details of this data contract are expressed with this proto message.</p> <pre><code>message WalletProfile {\n    google.protobuf.Struct did_document = 1;\n    string wallet_id = 2;\n    string invoker = 3;\n    string capability = 4;\n    bytes invoker_jwk = 5;\n}</code></pre>  <code>did_document</code> contains the DID Document generated by the device that will be used to access the remote wallet. Each device/profile will have a unique DID Document. The DID method used in this document is <code>did:key</code>. <code>wallet_id</code> represents the remote wallet identifier that this profile has been granted access. <code>invoker</code> represents the specific key in the DID Document that was granted capability authorization. <code>capability</code> represents the unique identifier of the z-cap that the <code>invoker</code> is allowed to access. <code>invoker_jwk</code> represents the key of the invoker in JWK format. This key is already present in the DID Document, we simply store it here in JWK format for convenience.   <p>This profile is always stored in its binary form using the protobuf native serialization. A profile is created by using the Create Wallet functionality in the SDK.</p>","title":"Profile Data Format"},{"location":"reference/dotnet/","text":"<p></p>","title":"Dotnet"},{"location":"reference/dotnet/#trinsic","text":"","title":"Trinsic"},{"location":"reference/dotnet/#contents","text":"<ul> <li>AccountDetails</li> <li>EmailFieldNumber</li> <li>NameFieldNumber</li> <li>SmsFieldNumber</li> <li>Email</li> <li>Name</li> <li>Sms</li> <li>AccountProfile</li> <li>AuthDataFieldNumber</li> <li>AuthTokenFieldNumber</li> <li>ProfileTypeFieldNumber</li> <li>ProtectionFieldNumber</li> <li>AuthData</li> <li>AuthToken</li> <li>ProfileType</li> <li>Protection</li> <li>AccountReflection</li> <li>Descriptor</li> <li>AccountService</li> <li>AccountService</li> <li>Descriptor</li> <li>GetInfoAsync()</li> <li>Protect(profile,securityCode)</li> <li>SignInAsync(details)</li> <li>Unprotect(profile,securityCode)</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>AccountServiceBase</li> <li>Info(request,context)</li> <li>ListDevices(request,context)</li> <li>RevokeDevice(request,context)</li> <li>SignIn(request,context)</li> <li>AccountServiceClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>Info(request,headers,deadline,cancellationToken)</li> <li>Info(request,options)</li> <li>InfoAsync(request,headers,deadline,cancellationToken)</li> <li>InfoAsync(request,options)</li> <li>ListDevices(request,headers,deadline,cancellationToken)</li> <li>ListDevices(request,options)</li> <li>ListDevicesAsync(request,headers,deadline,cancellationToken)</li> <li>ListDevicesAsync(request,options)</li> <li>NewInstance()</li> <li>RevokeDevice(request,headers,deadline,cancellationToken)</li> <li>RevokeDevice(request,options)</li> <li>RevokeDeviceAsync(request,headers,deadline,cancellationToken)</li> <li>RevokeDeviceAsync(request,options)</li> <li>SignIn(request,headers,deadline,cancellationToken)</li> <li>SignIn(request,options)</li> <li>SignInAsync(request,headers,deadline,cancellationToken)</li> <li>SignInAsync(request,options)</li> <li>AddFrameworkRequest</li> <li>GovernanceFrameworkFieldNumber</li> <li>AddFrameworkResponse</li> <li>StatusFieldNumber</li> <li>AuthorityOneofCase</li> <li>AuthorityOneofCase</li> <li>AuthorityOneofCase</li> <li>AuthorityOneofCase</li> <li>CheckIssuerStatusRequest</li> <li>CredentialTypeUriFieldNumber</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>X509CertFieldNumber</li> <li>CheckIssuerStatusResponse</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>StatusFieldNumber</li> <li>CheckVerifierStatusRequest</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>PresentationTypeUriFieldNumber</li> <li>X509CertFieldNumber</li> <li>CheckVerifierStatusResponse</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>StatusFieldNumber</li> <li>Common</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>CommonBase</li> <li>CommonClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>NewInstance()</li> <li>CommonReflection</li> <li>Descriptor</li> <li>ConfirmationMethod</li> <li>ConnectedDevice</li> <li>Email</li> <li>None</li> <li>Other</li> <li>Sms</li> <li>ContactMethodOneofCase</li> <li>CreateCredentialTemplateRequest</li> <li>BaseUriFieldNumber</li> <li>NameFieldNumber</li> <li>SchemaFieldNumber</li> <li>CreateCredentialTemplateResponse</li> <li>IdFieldNumber</li> <li>UriFieldNumber</li> <li>CreateProofRequest</li> <li>DocumentIdFieldNumber</li> <li>RevealDocumentFieldNumber</li> <li>CreateProofResponse</li> <li>ProofDocumentFieldNumber</li> <li>Credential</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>CredentialBase</li> <li>CredentialClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>NewInstance()</li> <li>CredentialTemplate</li> <li>IdFieldNumber</li> <li>NameFieldNumber</li> <li>SchemaFieldNumber</li> <li>UriFieldNumber</li> <li>VersionFieldNumber</li> <li>CredentialTemplates</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>CredentialTemplatesBase</li> <li>CredentialTemplatesClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>NewInstance()</li> <li>CredentialsService</li> <li>CreateProof(documentId,revealDocument)</li> <li>IssueCredential(document)</li> <li>Send(document,email)</li> <li>VerifyProof(proofDocument)</li> <li>DebugReflection</li> <li>Descriptor</li> <li>Debugging</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>DebuggingBase</li> <li>DebuggingClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>NewInstance()</li> <li>DeleteCredentialTemplateRequest</li> <li>IdFieldNumber</li> <li>DeleteItemRequest</li> <li>DeliveryMethodOneofCase</li> <li>FetchDataRequest</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>QueryFieldNumber</li> <li>FetchDataResponse</li> <li>ResponseFieldNumber</li> <li>GetCredentialTemplateRequest</li> <li>IdFieldNumber</li> <li>GetCredentialTemplateResponse</li> <li>TemplateFieldNumber</li> <li>GovernanceFramework</li> <li>DescriptionFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>TrustRegistryUriFieldNumber</li> <li>InfoResponse</li> <li>DetailsFieldNumber</li> <li>Details</li> <li>InsertItemRequest</li> <li>ItemFieldNumber</li> <li>ItemTypeFieldNumber</li> <li>InsertItemResponse</li> <li>ItemIdFieldNumber</li> <li>StatusFieldNumber</li> <li>ItemId</li> <li>InvitationStatusRequest</li> <li>InvitationIdFieldNumber</li> <li>InvitationStatusResponse</li> <li>StatusDetailsFieldNumber</li> <li>StatusFieldNumber</li> <li>InviteRequest</li> <li>DescriptionFieldNumber</li> <li>DidcommInvitationFieldNumber</li> <li>EmailFieldNumber</li> <li>ParticipantFieldNumber</li> <li>PhoneFieldNumber</li> <li>InviteResponse</li> <li>InvitationIdFieldNumber</li> <li>StatusFieldNumber</li> <li>IssueFromTemplateRequest</li> <li>AttributesFieldNumber</li> <li>TemplateIdFieldNumber</li> <li>IssueRequest</li> <li>DocumentFieldNumber</li> <li>IssueResponse</li> <li>DocumentFieldNumber</li> <li>JTokenExtensions</li> <li>ToStruct()</li> <li>JsonOneofCase</li> <li>JsonPayload</li> <li>JsonBytesFieldNumber</li> <li>JsonStringFieldNumber</li> <li>JsonStructFieldNumber</li> <li>MemberOneofCase</li> <li>MemberOneofCase</li> <li>Nonce</li> <li>RequestHashFieldNumber</li> <li>TimestampFieldNumber</li> <li>RequestHash</li> <li>Timestamp</li> <li>OberonSecurityProvider</li> <li>Base64UrlEncode(data)</li> <li>ProtoMessageExtensions</li> <li>As``1(message)</li> <li>Provider</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>ProviderBase</li> <li>InvitationStatus(request,context)</li> <li>Invite(request,context)</li> <li>ProviderClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>InvitationStatus(request,headers,deadline,cancellationToken)</li> <li>InvitationStatus(request,options)</li> <li>InvitationStatusAsync(request,headers,deadline,cancellationToken)</li> <li>InvitationStatusAsync(request,options)</li> <li>Invite(request,headers,deadline,cancellationToken)</li> <li>Invite(request,options)</li> <li>InviteAsync(request,headers,deadline,cancellationToken)</li> <li>InviteAsync(request,options)</li> <li>NewInstance()</li> <li>ProviderReflection</li> <li>Descriptor</li> <li>ProviderService</li> <li>InvitationStatus(request)</li> <li>InviteParticipant(request)</li> <li>RegisterIssuerRequest</li> <li>CredentialTypeUriFieldNumber</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>OptionsFieldNumber</li> <li>ValidFromUtcFieldNumber</li> <li>ValidUntilUtcFieldNumber</li> <li>X509CertFieldNumber</li> <li>RegisterIssuerResponse</li> <li>ResponseDataFieldNumber</li> <li>StatusFieldNumber</li> <li>RegisterVerifierRequest</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>OptionsFieldNumber</li> <li>PresentationTypeUriFieldNumber</li> <li>ValidFromUtcFieldNumber</li> <li>ValidUntilUtcFieldNumber</li> <li>X509CertFieldNumber</li> <li>RegisterVerifierResponse</li> <li>ResponseDataFieldNumber</li> <li>StatusFieldNumber</li> <li>RegistrationStatus</li> <li>Current</li> <li>Expired</li> <li>Revoked</li> <li>Terminated</li> <li>RemoveFrameworkRequest</li> <li>GovernanceFrameworkFieldNumber</li> <li>RemoveFrameworkResponse</li> <li>StatusFieldNumber</li> <li>RequestOptions</li> <li>ResponseJsonFormatFieldNumber</li> <li>SearchCredentialTemplatesRequest</li> <li>ContinuationTokenFieldNumber</li> <li>QueryFieldNumber</li> <li>Query</li> <li>SearchCredentialTemplatesResponse</li> <li>ContinuationTokenFieldNumber</li> <li>CountFieldNumber</li> <li>HasMoreFieldNumber</li> <li>TemplatesFieldNumber</li> <li>SearchRegistryRequest</li> <li>ContinuationTokenFieldNumber</li> <li>OptionsFieldNumber</li> <li>QueryFieldNumber</li> <li>Query</li> <li>SearchRegistryResponse</li> <li>ContinuationTokenFieldNumber</li> <li>CountFieldNumber</li> <li>HasMoreFieldNumber</li> <li>ItemsFieldNumber</li> <li>SearchRequest</li> <li>ContinuationTokenFieldNumber</li> <li>OptionsFieldNumber</li> <li>QueryFieldNumber</li> <li>SearchResponse</li> <li>ContinuationTokenFieldNumber</li> <li>CountFieldNumber</li> <li>HasMoreFieldNumber</li> <li>ItemsFieldNumber</li> <li>SendRequest</li> <li>DidUriFieldNumber</li> <li>DidcommInvitationFieldNumber</li> <li>DocumentFieldNumber</li> <li>EmailFieldNumber</li> <li>SendResponse</li> <li>StatusFieldNumber</li> <li>ServerConfig</li> <li>EndpointFieldNumber</li> <li>PortFieldNumber</li> <li>UseTlsFieldNumber</li> <li>Endpoint</li> <li>Port</li> <li>UseTls</li> <li>ServiceBase</li> <li>BuildMetadataAsync()</li> <li>SignInRequest</li> <li>DetailsFieldNumber</li> <li>InvitationCodeFieldNumber</li> <li>Details</li> <li>InvitationCode</li> <li>SignInResponse</li> <li>ConfirmationMethodFieldNumber</li> <li>ProfileFieldNumber</li> <li>StatusFieldNumber</li> <li>ConfirmationMethod</li> <li>Profile</li> <li>Status</li> <li>Status</li> <li>Completed</li> <li>Error</li> <li>InvitationSent</li> <li>StructExtensions</li> <li>ToJObject(message)</li> <li>ToJToken(message)</li> <li>TemplatesReflection</li> <li>Descriptor</li> <li>TokenProtection</li> <li>EnabledFieldNumber</li> <li>MethodFieldNumber</li> <li>Enabled</li> <li>Method</li> <li>TrustRegistry</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>TrustRegistryBase</li> <li>AddFramework(request,context)</li> <li>RegisterIssuer(request,context)</li> <li>RegisterVerifier(request,context)</li> <li>UnregisterIssuer(request,context)</li> <li>UnregisterVerifier(request,context)</li> <li>TrustRegistryClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>AddFramework(request,headers,deadline,cancellationToken)</li> <li>AddFramework(request,options)</li> <li>AddFrameworkAsync(request,headers,deadline,cancellationToken)</li> <li>AddFrameworkAsync(request,options)</li> <li>NewInstance()</li> <li>RegisterIssuer(request,headers,deadline,cancellationToken)</li> <li>RegisterIssuer(request,options)</li> <li>RegisterIssuerAsync(request,headers,deadline,cancellationToken)</li> <li>RegisterIssuerAsync(request,options)</li> <li>RegisterVerifier(request,headers,deadline,cancellationToken)</li> <li>RegisterVerifier(request,options)</li> <li>RegisterVerifierAsync(request,headers,deadline,cancellationToken)</li> <li>RegisterVerifierAsync(request,options)</li> <li>UnregisterIssuer(request,headers,deadline,cancellationToken)</li> <li>UnregisterIssuer(request,options)</li> <li>UnregisterIssuerAsync(request,headers,deadline,cancellationToken)</li> <li>UnregisterIssuerAsync(request,options)</li> <li>UnregisterVerifier(request,headers,deadline,cancellationToken)</li> <li>UnregisterVerifier(request,options)</li> <li>UnregisterVerifierAsync(request,headers,deadline,cancellationToken)</li> <li>UnregisterVerifierAsync(request,options)</li> <li>TrustRegistryReflection</li> <li>Descriptor</li> <li>TrustRegistryService</li> <li>CheckIssuerStatus(issuerDid,credentialType,governanceFramework)</li> <li>CheckVerifierStatus(verifierDid,presentationType,governanceFramework)</li> <li>RegisterGovernanceFramework(governanceFramework,description)</li> <li>RegisterIssuer(issuerDid,credentialType,governanceFramework,validFrom,validUntil)</li> <li>RegisterVerifier(verifierDid,presentationType,governanceFramework,validFrom,validUntil)</li> <li>SearchRegistry(query)</li> <li>Types</li> <li>Types</li> <li>UniversalWalletReflection</li> <li>Descriptor</li> <li>UnregisterIssuerRequest</li> <li>CredentialTypeUriFieldNumber</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>X509CertFieldNumber</li> <li>UnregisterIssuerResponse</li> <li>StatusFieldNumber</li> <li>UnregisterVerifierRequest</li> <li>DidUriFieldNumber</li> <li>GovernanceFrameworkUriFieldNumber</li> <li>PresentationTypeUriFieldNumber</li> <li>X509CertFieldNumber</li> <li>UnregisterVerifierResponse</li> <li>StatusFieldNumber</li> <li>UpdateCredentialTemplateRequest</li> <li>IdFieldNumber</li> <li>NameFieldNumber</li> <li>SchemaFieldNumber</li> <li>UpdateCredentialTemplateResponse</li> <li>TemplateFieldNumber</li> <li>VerifiableCredentialsReflection</li> <li>Descriptor</li> <li>VerifyProofRequest</li> <li>ProofDocumentFieldNumber</li> <li>VerifyProofResponse</li> <li>ValidFieldNumber</li> <li>WalletService</li> <li>WalletService</li> <li>Descriptor</li> <li>BindService(serviceImpl)</li> <li>BindService(serviceBinder,serviceImpl)</li> <li>InsertItem(item)</li> <li>Search(query)</li> <li>WalletServiceBase</li> <li>Deleteitem(request,context)</li> <li>InsertItem(request,context)</li> <li>Search(request,context)</li> <li>WalletServiceClient</li> <li>#ctor(channel)</li> <li>#ctor(callInvoker)</li> <li>#ctor()</li> <li>#ctor(configuration)</li> <li>Deleteitem(request,headers,deadline,cancellationToken)</li> <li>Deleteitem(request,options)</li> <li>DeleteitemAsync(request,headers,deadline,cancellationToken)</li> <li>DeleteitemAsync(request,options)</li> <li>InsertItem(request,headers,deadline,cancellationToken)</li> <li>InsertItem(request,options)</li> <li>InsertItemAsync(request,headers,deadline,cancellationToken)</li> <li>InsertItemAsync(request,options)</li> <li>NewInstance()</li> <li>Search(request,headers,deadline,cancellationToken)</li> <li>Search(request,options)</li> <li>SearchAsync(request,headers,deadline,cancellationToken)</li> <li>SearchAsync(request,options)</li> </ul> <p></p>","title":"Contents"},{"location":"reference/dotnet/#accountdetails-type","text":"","title":"AccountDetails <code>type</code>"},{"location":"reference/dotnet/#namespace","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary","text":"<p>Account Registration Details</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#emailfieldnumber-constants","text":"","title":"EmailFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_1","text":"<p>Field number for the \"email\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#namefieldnumber-constants","text":"","title":"NameFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_2","text":"<p>Field number for the \"name\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#smsfieldnumber-constants","text":"","title":"SmsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_3","text":"<p>Field number for the \"sms\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#email-property","text":"","title":"Email <code>property</code>"},{"location":"reference/dotnet/#summary_4","text":"<p>Email account (required)</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#name-property","text":"","title":"Name <code>property</code>"},{"location":"reference/dotnet/#summary_5","text":"<p>Account name (optional)</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#sms-property","text":"","title":"Sms <code>property</code>"},{"location":"reference/dotnet/#summary_6","text":"<p>SMS number including country code (optional)</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#accountprofile-type","text":"","title":"AccountProfile <code>type</code>"},{"location":"reference/dotnet/#namespace_1","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_7","text":"<p>Device profile containing sensitive authentication data. This information should be stored securely</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authdatafieldnumber-constants","text":"","title":"AuthDataFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_8","text":"<p>Field number for the \"auth_data\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authtokenfieldnumber-constants","text":"","title":"AuthTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_9","text":"<p>Field number for the \"auth_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#profiletypefieldnumber-constants","text":"","title":"ProfileTypeFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_10","text":"<p>Field number for the \"profile_type\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#protectionfieldnumber-constants","text":"","title":"ProtectionFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_11","text":"<p>Field number for the \"protection\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authdata-property","text":"","title":"AuthData <code>property</code>"},{"location":"reference/dotnet/#summary_12","text":"<p>Auth data containg information about the current device access</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authtoken-property","text":"","title":"AuthToken <code>property</code>"},{"location":"reference/dotnet/#summary_13","text":"<p>Secure token issued by server used to generate zero-knowledge proofs</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#profiletype-property","text":"","title":"ProfileType <code>property</code>"},{"location":"reference/dotnet/#summary_14","text":"<p>The type of profile, used to differentiate between protocol schemes or versions</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#protection-property","text":"","title":"Protection <code>property</code>"},{"location":"reference/dotnet/#summary_15","text":"<p>Token security information about the token. If token protection is enabled, implementations must supply protection secret before using the token for authentication.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#accountreflection-type","text":"","title":"AccountReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_2","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_16","text":"<p>Holder for reflection information generated from services/account/v1/account.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_17","text":"<p>File descriptor for services/account/v1/account.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#accountservice-type","text":"","title":"AccountService <code>type</code>"},{"location":"reference/dotnet/#namespace_3","text":"<p>Trinsic</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_18","text":"<p>Account Service</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#accountservice-type_1","text":"","title":"AccountService <code>type</code>"},{"location":"reference/dotnet/#namespace_4","text":"<p>Trinsic.Services.Account.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_1","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_19","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#getinfoasync-method","text":"","title":"GetInfoAsync() <code>method</code>"},{"location":"reference/dotnet/#summary_20","text":"<p>Return the details about the currently active account</p>","title":"Summary"},{"location":"reference/dotnet/#returns","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#protectprofilesecuritycode-method","text":"","title":"Protect(profile,securityCode) <code>method</code>"},{"location":"reference/dotnet/#summary_21","text":"<p>Protects the account profile with a security code. The code can be PIN, password, keychain secret, etc.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_1","text":"Name Type Description     profile Trinsic.Services.Account.V1.AccountProfile@    securityCode System.String     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinasyncdetails-method","text":"","title":"SignInAsync(details) <code>method</code>"},{"location":"reference/dotnet/#summary_22","text":"<p>Perform a sign-in to obtain an account profile. If the AccountDetails are specified, they will be used to associate</p>","title":"Summary"},{"location":"reference/dotnet/#returns_1","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_2","text":"Name Type Description     details Trinsic.Services.Account.V1.AccountDetails     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unprotectprofilesecuritycode-method","text":"","title":"Unprotect(profile,securityCode) <code>method</code>"},{"location":"reference/dotnet/#summary_23","text":"<p>Unprotects the account profile using a security code. The confirmation method field will specify how this code was communicated with the account owner.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_3","text":"Name Type Description     profile Trinsic.Services.Account.V1.AccountProfile@    securityCode System.String     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceserviceimpl-method","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_24","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_4","text":"Name Type Description     serviceImpl Trinsic.Services.Account.V1.AccountService.AccountServiceBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_25","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_5","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.Account.V1.AccountService.AccountServiceBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#accountservicebase-type","text":"","title":"AccountServiceBase <code>type</code>"},{"location":"reference/dotnet/#namespace_5","text":"<p>Trinsic.Services.Account.V1.AccountService</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_26","text":"<p>Base class for server-side implementations of AccountService</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#inforequestcontext-method","text":"","title":"Info(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_27","text":"<p>Get account information</p>","title":"Summary"},{"location":"reference/dotnet/#returns_2","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_6","text":"Name Type Description     request Trinsic.Services.Account.V1.InfoRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#listdevicesrequestcontext-method","text":"","title":"ListDevices(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_28","text":"<p>List all connected devices</p>","title":"Summary"},{"location":"reference/dotnet/#returns_3","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_7","text":"Name Type Description     request Trinsic.Services.Account.V1.ListDevicesRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#revokedevicerequestcontext-method","text":"","title":"RevokeDevice(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_29","text":"<p>Revoke device access to the account's cloud wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_4","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_8","text":"Name Type Description     request Trinsic.Services.Account.V1.RevokeDeviceRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinrequestcontext-method","text":"","title":"SignIn(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_30","text":"<p>Sign in to an already existing account</p>","title":"Summary"},{"location":"reference/dotnet/#returns_5","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_9","text":"Name Type Description     request Trinsic.Services.Account.V1.SignInRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#accountserviceclient-type","text":"","title":"AccountServiceClient <code>type</code>"},{"location":"reference/dotnet/#namespace_6","text":"<p>Trinsic.Services.Account.V1.AccountService</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_31","text":"<p>Client for AccountService</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_32","text":"<p>Creates a new client for AccountService</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_10","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_33","text":"<p>Creates a new client for AccountService that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_11","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_34","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_12","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_35","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_13","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inforequestheadersdeadlinecancellationtoken-method","text":"","title":"Info(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_36","text":"<p>Get account information</p>","title":"Summary"},{"location":"reference/dotnet/#returns_6","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_14","text":"Name Type Description     request Trinsic.Services.Account.V1.InfoRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inforequestoptions-method","text":"","title":"Info(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_37","text":"<p>Get account information</p>","title":"Summary"},{"location":"reference/dotnet/#returns_7","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_15","text":"Name Type Description     request Trinsic.Services.Account.V1.InfoRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#infoasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"InfoAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_38","text":"<p>Get account information</p>","title":"Summary"},{"location":"reference/dotnet/#returns_8","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_16","text":"Name Type Description     request Trinsic.Services.Account.V1.InfoRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#infoasyncrequestoptions-method","text":"","title":"InfoAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_39","text":"<p>Get account information</p>","title":"Summary"},{"location":"reference/dotnet/#returns_9","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_17","text":"Name Type Description     request Trinsic.Services.Account.V1.InfoRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#listdevicesrequestheadersdeadlinecancellationtoken-method","text":"","title":"ListDevices(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_40","text":"<p>List all connected devices</p>","title":"Summary"},{"location":"reference/dotnet/#returns_10","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_18","text":"Name Type Description     request Trinsic.Services.Account.V1.ListDevicesRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#listdevicesrequestoptions-method","text":"","title":"ListDevices(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_41","text":"<p>List all connected devices</p>","title":"Summary"},{"location":"reference/dotnet/#returns_11","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_19","text":"Name Type Description     request Trinsic.Services.Account.V1.ListDevicesRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#listdevicesasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"ListDevicesAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_42","text":"<p>List all connected devices</p>","title":"Summary"},{"location":"reference/dotnet/#returns_12","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_20","text":"Name Type Description     request Trinsic.Services.Account.V1.ListDevicesRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#listdevicesasyncrequestoptions-method","text":"","title":"ListDevicesAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_43","text":"<p>List all connected devices</p>","title":"Summary"},{"location":"reference/dotnet/#returns_13","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_21","text":"Name Type Description     request Trinsic.Services.Account.V1.ListDevicesRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_44","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_22","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#revokedevicerequestheadersdeadlinecancellationtoken-method","text":"","title":"RevokeDevice(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_45","text":"<p>Revoke device access to the account's cloud wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_14","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_23","text":"Name Type Description     request Trinsic.Services.Account.V1.RevokeDeviceRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#revokedevicerequestoptions-method","text":"","title":"RevokeDevice(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_46","text":"<p>Revoke device access to the account's cloud wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_15","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_24","text":"Name Type Description     request Trinsic.Services.Account.V1.RevokeDeviceRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#revokedeviceasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"RevokeDeviceAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_47","text":"<p>Revoke device access to the account's cloud wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_16","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_25","text":"Name Type Description     request Trinsic.Services.Account.V1.RevokeDeviceRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#revokedeviceasyncrequestoptions-method","text":"","title":"RevokeDeviceAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_48","text":"<p>Revoke device access to the account's cloud wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_17","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_26","text":"Name Type Description     request Trinsic.Services.Account.V1.RevokeDeviceRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinrequestheadersdeadlinecancellationtoken-method","text":"","title":"SignIn(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_49","text":"<p>Sign in to an already existing account</p>","title":"Summary"},{"location":"reference/dotnet/#returns_18","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_27","text":"Name Type Description     request Trinsic.Services.Account.V1.SignInRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinrequestoptions-method","text":"","title":"SignIn(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_50","text":"<p>Sign in to an already existing account</p>","title":"Summary"},{"location":"reference/dotnet/#returns_19","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_28","text":"Name Type Description     request Trinsic.Services.Account.V1.SignInRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"SignInAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_51","text":"<p>Sign in to an already existing account</p>","title":"Summary"},{"location":"reference/dotnet/#returns_20","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_29","text":"Name Type Description     request Trinsic.Services.Account.V1.SignInRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinasyncrequestoptions-method","text":"","title":"SignInAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_52","text":"<p>Sign in to an already existing account</p>","title":"Summary"},{"location":"reference/dotnet/#returns_21","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_30","text":"Name Type Description     request Trinsic.Services.Account.V1.SignInRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#addframeworkrequest-type","text":"","title":"AddFrameworkRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_7","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#governanceframeworkfieldnumber-constants","text":"","title":"GovernanceFrameworkFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_53","text":"<p>Field number for the \"governance_framework\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#addframeworkresponse-type","text":"","title":"AddFrameworkResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_8","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusfieldnumber-constants","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_54","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authorityoneofcase-type","text":"","title":"AuthorityOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_9","text":"<p>Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_55","text":"<p>Enum of possible cases for the \"authority\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authorityoneofcase-type_1","text":"","title":"AuthorityOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_10","text":"<p>Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_56","text":"<p>Enum of possible cases for the \"authority\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authorityoneofcase-type_2","text":"","title":"AuthorityOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_11","text":"<p>Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_57","text":"<p>Enum of possible cases for the \"authority\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#authorityoneofcase-type_3","text":"","title":"AuthorityOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_12","text":"<p>Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_58","text":"<p>Enum of possible cases for the \"authority\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#checkissuerstatusrequest-type","text":"","title":"CheckIssuerStatusRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_13","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#credentialtypeurifieldnumber-constants","text":"","title":"CredentialTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_59","text":"<p>Field number for the \"credential_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#didurifieldnumber-constants","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_60","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_61","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_62","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#checkissuerstatusresponse-type","text":"","title":"CheckIssuerStatusResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_14","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_1","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_63","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_1","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_64","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#checkverifierstatusrequest-type","text":"","title":"CheckVerifierStatusRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_15","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#didurifieldnumber-constants_1","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_65","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_2","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_66","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#presentationtypeurifieldnumber-constants","text":"","title":"PresentationTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_67","text":"<p>Field number for the \"presentation_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants_1","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_68","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#checkverifierstatusresponse-type","text":"","title":"CheckVerifierStatusResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_16","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_3","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_69","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_2","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_70","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#common-type","text":"","title":"Common <code>type</code>"},{"location":"reference/dotnet/#namespace_17","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_2","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_71","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_1","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_72","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_31","text":"Name Type Description     serviceImpl Trinsic.Services.Common.V1.Common.CommonBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_1","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_73","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_32","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.Common.V1.Common.CommonBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#commonbase-type","text":"","title":"CommonBase <code>type</code>"},{"location":"reference/dotnet/#namespace_18","text":"<p>Trinsic.Services.Common.V1.Common</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_74","text":"<p>Base class for server-side implementations of Common</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#commonclient-type","text":"","title":"CommonClient <code>type</code>"},{"location":"reference/dotnet/#namespace_19","text":"<p>Trinsic.Services.Common.V1.Common</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_75","text":"<p>Client for Common</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_1","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_76","text":"<p>Creates a new client for Common</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_33","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_1","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_77","text":"<p>Creates a new client for Common that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_34","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_1","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_78","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_35","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_1","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_79","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_36","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_1","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_80","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_37","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#commonreflection-type","text":"","title":"CommonReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_20","text":"<p>Trinsic.Services.Common.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_81","text":"<p>Holder for reflection information generated from services/common/v1/common.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_3","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_82","text":"<p>File descriptor for services/common/v1/common.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#confirmationmethod-type","text":"","title":"ConfirmationMethod <code>type</code>"},{"location":"reference/dotnet/#namespace_21","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_83","text":"<p>Confirmation method type for two-factor workflows</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#connecteddevice-constants","text":"","title":"ConnectedDevice <code>constants</code>"},{"location":"reference/dotnet/#summary_84","text":"<p>Confirmation from a connected device is required</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#email-constants","text":"","title":"Email <code>constants</code>"},{"location":"reference/dotnet/#summary_85","text":"<p>Email confirmation required</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#none-constants","text":"","title":"None <code>constants</code>"},{"location":"reference/dotnet/#summary_86","text":"<p>No confirmation required</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#other-constants","text":"","title":"Other <code>constants</code>"},{"location":"reference/dotnet/#summary_87","text":"<p>Indicates third-party method of confirmation is required</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#sms-constants","text":"","title":"Sms <code>constants</code>"},{"location":"reference/dotnet/#summary_88","text":"<p>SMS confirmation required</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#contactmethodoneofcase-type","text":"","title":"ContactMethodOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_22","text":"<p>Trinsic.Services.Common.V1.InviteRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_89","text":"<p>Enum of possible cases for the \"contact_method\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#createcredentialtemplaterequest-type","text":"","title":"CreateCredentialTemplateRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_23","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#baseurifieldnumber-constants","text":"","title":"BaseUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_90","text":"<p>Field number for the \"base_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#namefieldnumber-constants_1","text":"","title":"NameFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_91","text":"<p>Field number for the \"name\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#schemafieldnumber-constants","text":"","title":"SchemaFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_92","text":"<p>Field number for the \"schema\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#createcredentialtemplateresponse-type","text":"","title":"CreateCredentialTemplateResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_24","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#idfieldnumber-constants","text":"","title":"IdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_93","text":"<p>Field number for the \"id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#urifieldnumber-constants","text":"","title":"UriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_94","text":"<p>Field number for the \"uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#createproofrequest-type","text":"","title":"CreateProofRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_25","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_95","text":"<p>Create Proof</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#documentidfieldnumber-constants","text":"","title":"DocumentIdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_96","text":"<p>Field number for the \"document_id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#revealdocumentfieldnumber-constants","text":"","title":"RevealDocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_97","text":"<p>Field number for the \"reveal_document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#createproofresponse-type","text":"","title":"CreateProofResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_26","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#proofdocumentfieldnumber-constants","text":"","title":"ProofDocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_98","text":"<p>Field number for the \"proof_document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#credential-type","text":"","title":"Credential <code>type</code>"},{"location":"reference/dotnet/#namespace_27","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_4","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_99","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_2","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_100","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_38","text":"Name Type Description     serviceImpl Trinsic.Services.VerifiableCredentials.V1.Credential.CredentialBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_2","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_101","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_39","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.VerifiableCredentials.V1.Credential.CredentialBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#credentialbase-type","text":"","title":"CredentialBase <code>type</code>"},{"location":"reference/dotnet/#namespace_28","text":"<p>Trinsic.Services.VerifiableCredentials.V1.Credential</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_102","text":"<p>Base class for server-side implementations of Credential</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#credentialclient-type","text":"","title":"CredentialClient <code>type</code>"},{"location":"reference/dotnet/#namespace_29","text":"<p>Trinsic.Services.VerifiableCredentials.V1.Credential</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_103","text":"<p>Client for Credential</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_2","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_104","text":"<p>Creates a new client for Credential</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_40","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_2","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_105","text":"<p>Creates a new client for Credential that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_41","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_2","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_106","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_42","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_2","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_107","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_43","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_2","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_108","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_44","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#credentialtemplate-type","text":"","title":"CredentialTemplate <code>type</code>"},{"location":"reference/dotnet/#namespace_30","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#idfieldnumber-constants_1","text":"","title":"IdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_109","text":"<p>Field number for the \"id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#namefieldnumber-constants_2","text":"","title":"NameFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_110","text":"<p>Field number for the \"name\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#schemafieldnumber-constants_1","text":"","title":"SchemaFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_111","text":"<p>Field number for the \"schema\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#urifieldnumber-constants_1","text":"","title":"UriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_112","text":"<p>Field number for the \"uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#versionfieldnumber-constants","text":"","title":"VersionFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_113","text":"<p>Field number for the \"version\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#credentialtemplates-type","text":"","title":"CredentialTemplates <code>type</code>"},{"location":"reference/dotnet/#namespace_31","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_5","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_114","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_3","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_115","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_45","text":"Name Type Description     serviceImpl Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_3","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_116","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_46","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#credentialtemplatesbase-type","text":"","title":"CredentialTemplatesBase <code>type</code>"},{"location":"reference/dotnet/#namespace_32","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_117","text":"<p>Base class for server-side implementations of CredentialTemplates</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#credentialtemplatesclient-type","text":"","title":"CredentialTemplatesClient <code>type</code>"},{"location":"reference/dotnet/#namespace_33","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_118","text":"<p>Client for CredentialTemplates</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_3","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_119","text":"<p>Creates a new client for CredentialTemplates</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_47","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_3","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_120","text":"<p>Creates a new client for CredentialTemplates that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_48","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_3","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_121","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_49","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_3","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_122","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_50","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_3","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_123","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_51","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#credentialsservice-type","text":"","title":"CredentialsService <code>type</code>"},{"location":"reference/dotnet/#namespace_34","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#createproofdocumentidrevealdocument-method","text":"","title":"CreateProof(documentId,revealDocument) <code>method</code>"},{"location":"reference/dotnet/#summary_124","text":"<p>Derive a proof from an existing document in the wallet using an input reveal document frame</p>","title":"Summary"},{"location":"reference/dotnet/#returns_22","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_52","text":"Name Type Description     documentId System.String    revealDocument Newtonsoft.Json.Linq.JObject     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#issuecredentialdocument-method","text":"","title":"IssueCredential(document) <code>method</code>"},{"location":"reference/dotnet/#summary_125","text":"<p>Signs an input credential</p>","title":"Summary"},{"location":"reference/dotnet/#returns_23","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_53","text":"Name Type Description     document Newtonsoft.Json.Linq.JObject     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#senddocumentemail-method","text":"","title":"Send(document,email) <code>method</code>"},{"location":"reference/dotnet/#summary_126","text":"<p>Sends a document to the specified destination</p>","title":"Summary"},{"location":"reference/dotnet/#returns_24","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_54","text":"Name Type Description     document Newtonsoft.Json.Linq.JObject    email System.String     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#verifyproofproofdocument-method","text":"","title":"VerifyProof(proofDocument) <code>method</code>"},{"location":"reference/dotnet/#summary_127","text":"<p>Verifies a proof document</p>","title":"Summary"},{"location":"reference/dotnet/#returns_25","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_55","text":"Name Type Description     proofDocument Newtonsoft.Json.Linq.JObject     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#debugreflection-type","text":"","title":"DebugReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_35","text":"<p>Trinsic.Services.Debug.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_128","text":"<p>Holder for reflection information generated from debug.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_6","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_129","text":"<p>File descriptor for debug.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#debugging-type","text":"","title":"Debugging <code>type</code>"},{"location":"reference/dotnet/#namespace_36","text":"<p>Trinsic.Services.Debug.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_7","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_130","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_4","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_131","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_56","text":"Name Type Description     serviceImpl Trinsic.Services.Debug.V1.Debugging.DebuggingBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_4","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_132","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_57","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.Debug.V1.Debugging.DebuggingBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#debuggingbase-type","text":"","title":"DebuggingBase <code>type</code>"},{"location":"reference/dotnet/#namespace_37","text":"<p>Trinsic.Services.Debug.V1.Debugging</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_133","text":"<p>Base class for server-side implementations of Debugging</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#debuggingclient-type","text":"","title":"DebuggingClient <code>type</code>"},{"location":"reference/dotnet/#namespace_38","text":"<p>Trinsic.Services.Debug.V1.Debugging</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_134","text":"<p>Client for Debugging</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_4","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_135","text":"<p>Creates a new client for Debugging</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_58","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_4","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_136","text":"<p>Creates a new client for Debugging that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_59","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_4","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_137","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_60","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_4","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_138","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_61","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_4","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_139","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_62","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#deletecredentialtemplaterequest-type","text":"","title":"DeleteCredentialTemplateRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_39","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#idfieldnumber-constants_2","text":"","title":"IdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_140","text":"<p>Field number for the \"id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#deleteitemrequest-type","text":"","title":"DeleteItemRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_40","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_141","text":"<p>Delete item request</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#deliverymethodoneofcase-type","text":"","title":"DeliveryMethodOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_41","text":"<p>Trinsic.Services.VerifiableCredentials.V1.SendRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_142","text":"<p>Enum of possible cases for the \"delivery_method\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#fetchdatarequest-type","text":"","title":"FetchDataRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_42","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_4","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_143","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#queryfieldnumber-constants","text":"","title":"QueryFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_144","text":"<p>Field number for the \"query\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#fetchdataresponse-type","text":"","title":"FetchDataResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_43","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#responsefieldnumber-constants","text":"","title":"ResponseFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_145","text":"<p>Field number for the \"response\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#getcredentialtemplaterequest-type","text":"","title":"GetCredentialTemplateRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_44","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#idfieldnumber-constants_3","text":"","title":"IdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_146","text":"<p>Field number for the \"id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#getcredentialtemplateresponse-type","text":"","title":"GetCredentialTemplateResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_45","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#templatefieldnumber-constants","text":"","title":"TemplateFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_147","text":"<p>Field number for the \"template\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframework-type","text":"","title":"GovernanceFramework <code>type</code>"},{"location":"reference/dotnet/#namespace_46","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptionfieldnumber-constants","text":"","title":"DescriptionFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_148","text":"<p>Field number for the \"description\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_5","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_149","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#trustregistryurifieldnumber-constants","text":"","title":"TrustRegistryUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_150","text":"<p>Field number for the \"trust_registry_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#inforesponse-type","text":"","title":"InfoResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_47","text":"<p>Trinsic.Services.Account.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#detailsfieldnumber-constants","text":"","title":"DetailsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_151","text":"<p>Field number for the \"details\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#details-property","text":"","title":"Details <code>property</code>"},{"location":"reference/dotnet/#summary_152","text":"<p>The account details associated with the calling request context</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#insertitemrequest-type","text":"","title":"InsertItemRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_48","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_153","text":"<p>Insert item request</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemfieldnumber-constants","text":"","title":"ItemFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_154","text":"<p>Field number for the \"item\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemtypefieldnumber-constants","text":"","title":"ItemTypeFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_155","text":"<p>Field number for the \"item_type\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#insertitemresponse-type","text":"","title":"InsertItemResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_49","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_156","text":"<p>Insert item response</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemidfieldnumber-constants","text":"","title":"ItemIdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_157","text":"<p>Field number for the \"item_id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_3","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_158","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemid-property","text":"","title":"ItemId <code>property</code>"},{"location":"reference/dotnet/#summary_159","text":"<p>The item identifier of the inserted record</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationstatusrequest-type","text":"","title":"InvitationStatusRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_50","text":"<p>Trinsic.Services.Common.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_160","text":"<p>Request details for the status of onboarding an individual or organization. The referenece_id passed is the response from the `Onboard` method call</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationidfieldnumber-constants","text":"","title":"InvitationIdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_161","text":"<p>Field number for the \"invitation_id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationstatusresponse-type","text":"","title":"InvitationStatusResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_51","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusdetailsfieldnumber-constants","text":"","title":"StatusDetailsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_162","text":"<p>Field number for the \"status_details\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_4","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_163","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#inviterequest-type","text":"","title":"InviteRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_52","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptionfieldnumber-constants_1","text":"","title":"DescriptionFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_164","text":"<p>Field number for the \"description\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#didcomminvitationfieldnumber-constants","text":"","title":"DidcommInvitationFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_165","text":"<p>Field number for the \"didcomm_invitation\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#emailfieldnumber-constants_1","text":"","title":"EmailFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_166","text":"<p>Field number for the \"email\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#participantfieldnumber-constants","text":"","title":"ParticipantFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_167","text":"<p>Field number for the \"participant\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#phonefieldnumber-constants","text":"","title":"PhoneFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_168","text":"<p>Field number for the \"phone\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#inviteresponse-type","text":"","title":"InviteResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_53","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#invitationidfieldnumber-constants_1","text":"","title":"InvitationIdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_169","text":"<p>Field number for the \"invitation_id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_5","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_170","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#issuefromtemplaterequest-type","text":"","title":"IssueFromTemplateRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_54","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#attributesfieldnumber-constants","text":"","title":"AttributesFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_171","text":"<p>Field number for the \"attributes\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#templateidfieldnumber-constants","text":"","title":"TemplateIdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_172","text":"<p>Field number for the \"templateId\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#issuerequest-type","text":"","title":"IssueRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_55","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#documentfieldnumber-constants","text":"","title":"DocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_173","text":"<p>Field number for the \"document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#issueresponse-type","text":"","title":"IssueResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_56","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#documentfieldnumber-constants_1","text":"","title":"DocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_174","text":"<p>Field number for the \"document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#jtokenextensions-type","text":"","title":"JTokenExtensions <code>type</code>"},{"location":"reference/dotnet/#namespace_57","text":"<p>Newtonsoft.Json.Linq</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#tostruct-method","text":"","title":"ToStruct() <code>method</code>"},{"location":"reference/dotnet/#summary_175","text":"<p>Converts to struct.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_26","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_63","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#jsononeofcase-type","text":"","title":"JsonOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_58","text":"<p>Trinsic.Services.Common.V1.JsonPayload</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_176","text":"<p>Enum of possible cases for the \"json\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#jsonpayload-type","text":"","title":"JsonPayload <code>type</code>"},{"location":"reference/dotnet/#namespace_59","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#jsonbytesfieldnumber-constants","text":"","title":"JsonBytesFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_177","text":"<p>Field number for the \"json_bytes\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#jsonstringfieldnumber-constants","text":"","title":"JsonStringFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_178","text":"<p>Field number for the \"json_string\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#jsonstructfieldnumber-constants","text":"","title":"JsonStructFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_179","text":"<p>Field number for the \"json_struct\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#memberoneofcase-type","text":"","title":"MemberOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_60","text":"<p>Trinsic.Services.TrustRegistry.V1.CheckIssuerStatusRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_180","text":"<p>Enum of possible cases for the \"member\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#memberoneofcase-type_1","text":"","title":"MemberOneofCase <code>type</code>"},{"location":"reference/dotnet/#namespace_61","text":"<p>Trinsic.Services.TrustRegistry.V1.CheckVerifierStatusRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_181","text":"<p>Enum of possible cases for the \"member\" oneof.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#nonce-type","text":"","title":"Nonce <code>type</code>"},{"location":"reference/dotnet/#namespace_62","text":"<p>Trinsic.Services.Common.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_182","text":"<p>Nonce used to generate an oberon proof</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#requesthashfieldnumber-constants","text":"","title":"RequestHashFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_183","text":"<p>Field number for the \"request_hash\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#timestampfieldnumber-constants","text":"","title":"TimestampFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_184","text":"<p>Field number for the \"timestamp\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#requesthash-property","text":"","title":"RequestHash <code>property</code>"},{"location":"reference/dotnet/#summary_185","text":"<p>blake3256 hash of the request body</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#timestamp-property","text":"","title":"Timestamp <code>property</code>"},{"location":"reference/dotnet/#summary_186","text":"<p>UTC unix millisecond timestamp the request was made</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#oberonsecurityprovider-type","text":"","title":"OberonSecurityProvider <code>type</code>"},{"location":"reference/dotnet/#namespace_63","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#base64urlencodedata-method","text":"","title":"Base64UrlEncode(data) <code>method</code>"},{"location":"reference/dotnet/#summary_187","text":"<p>Encoded a byte array to base64url string without padding</p>","title":"Summary"},{"location":"reference/dotnet/#returns_27","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_64","text":"Name Type Description     data System.Byte[]     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#protomessageextensions-type","text":"","title":"ProtoMessageExtensions <code>type</code>"},{"location":"reference/dotnet/#namespace_64","text":"<p>Google.Protobuf</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#as1message-method","text":"","title":"As``1(message) <code>method</code>"},{"location":"reference/dotnet/#summary_188","text":"<p>Converts a message from one type into another. The two types must be compatible and generated from the same .proto file, but may have different namespaces.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_28","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_65","text":"Name Type Description     message Google.Protobuf.IMessage","title":"Parameters"},{"location":"reference/dotnet/#generic-types","text":"Name Description     T     <p></p>","title":"Generic Types"},{"location":"reference/dotnet/#provider-type","text":"","title":"Provider <code>type</code>"},{"location":"reference/dotnet/#namespace_65","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_8","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_189","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_5","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_190","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_66","text":"Name Type Description     serviceImpl Trinsic.Services.Common.V1.Provider.ProviderBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_5","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_191","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_67","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.Common.V1.Provider.ProviderBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#providerbase-type","text":"","title":"ProviderBase <code>type</code>"},{"location":"reference/dotnet/#namespace_66","text":"<p>Trinsic.Services.Common.V1.Provider</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_192","text":"<p>Base class for server-side implementations of Provider</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationstatusrequestcontext-method","text":"","title":"InvitationStatus(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_193","text":"<p>rpc CreateCredentialTemplate(CreateCredentialTemplateRequest) returns (CreateCredentialTemplateResponse);   rpc ListCredentialTemplates(ListCredentialTemplatesRequest) returns (ListCredentialTemplatesResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_29","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_68","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviterequestcontext-method","text":"","title":"Invite(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_194","text":"<p>rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_30","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_69","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#providerclient-type","text":"","title":"ProviderClient <code>type</code>"},{"location":"reference/dotnet/#namespace_67","text":"<p>Trinsic.Services.Common.V1.Provider</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_195","text":"<p>Client for Provider</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_5","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_196","text":"<p>Creates a new client for Provider</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_70","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_5","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_197","text":"<p>Creates a new client for Provider that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_71","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_5","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_198","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_72","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_5","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_199","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_73","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#invitationstatusrequestheadersdeadlinecancellationtoken-method","text":"","title":"InvitationStatus(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_200","text":"<p>rpc CreateCredentialTemplate(CreateCredentialTemplateRequest) returns (CreateCredentialTemplateResponse);   rpc ListCredentialTemplates(ListCredentialTemplatesRequest) returns (ListCredentialTemplatesResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_31","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_74","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#invitationstatusrequestoptions-method","text":"","title":"InvitationStatus(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_201","text":"<p>rpc CreateCredentialTemplate(CreateCredentialTemplateRequest) returns (CreateCredentialTemplateResponse);   rpc ListCredentialTemplates(ListCredentialTemplatesRequest) returns (ListCredentialTemplatesResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_32","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_75","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#invitationstatusasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"InvitationStatusAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_202","text":"<p>rpc CreateCredentialTemplate(CreateCredentialTemplateRequest) returns (CreateCredentialTemplateResponse);   rpc ListCredentialTemplates(ListCredentialTemplatesRequest) returns (ListCredentialTemplatesResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_33","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_76","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#invitationstatusasyncrequestoptions-method","text":"","title":"InvitationStatusAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_203","text":"<p>rpc CreateCredentialTemplate(CreateCredentialTemplateRequest) returns (CreateCredentialTemplateResponse);   rpc ListCredentialTemplates(ListCredentialTemplatesRequest) returns (ListCredentialTemplatesResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_34","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_77","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviterequestheadersdeadlinecancellationtoken-method","text":"","title":"Invite(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_204","text":"<p>rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_35","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_78","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviterequestoptions-method","text":"","title":"Invite(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_205","text":"<p>rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_36","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_79","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviteasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"InviteAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_206","text":"<p>rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_37","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_80","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviteasyncrequestoptions-method","text":"","title":"InviteAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_207","text":"<p>rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);</p>","title":"Summary"},{"location":"reference/dotnet/#returns_38","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_81","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_5","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_208","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_82","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#providerreflection-type","text":"","title":"ProviderReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_68","text":"<p>Trinsic.Services.Common.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_209","text":"<p>Holder for reflection information generated from services/provider/v1/provider.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_9","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_210","text":"<p>File descriptor for services/provider/v1/provider.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#providerservice-type","text":"","title":"ProviderService <code>type</code>"},{"location":"reference/dotnet/#namespace_69","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#invitationstatusrequest-method","text":"","title":"InvitationStatus(request) <code>method</code>"},{"location":"reference/dotnet/#summary_211","text":"<p>Gets the status of the onboarding invitation for a given invitation ID</p>","title":"Summary"},{"location":"reference/dotnet/#returns_39","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_83","text":"Name Type Description     request Trinsic.Services.Common.V1.InvitationStatusRequest     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#inviteparticipantrequest-method","text":"","title":"InviteParticipant(request) <code>method</code>"},{"location":"reference/dotnet/#summary_212","text":"<p>Initiates the participant onboarding flow using the input contact method</p>","title":"Summary"},{"location":"reference/dotnet/#returns_40","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_84","text":"Name Type Description     request Trinsic.Services.Common.V1.InviteRequest     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerrequest-type","text":"","title":"RegisterIssuerRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_70","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#credentialtypeurifieldnumber-constants_1","text":"","title":"CredentialTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_213","text":"<p>Field number for the \"credential_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#didurifieldnumber-constants_2","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_214","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_6","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_215","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#optionsfieldnumber-constants","text":"","title":"OptionsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_216","text":"<p>Field number for the \"options\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#validfromutcfieldnumber-constants","text":"","title":"ValidFromUtcFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_217","text":"<p>Field number for the \"valid_from_utc\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#validuntilutcfieldnumber-constants","text":"","title":"ValidUntilUtcFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_218","text":"<p>Field number for the \"valid_until_utc\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants_2","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_219","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#registerissuerresponse-type","text":"","title":"RegisterIssuerResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_71","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#responsedatafieldnumber-constants","text":"","title":"ResponseDataFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_220","text":"<p>Field number for the \"response_data\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_6","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_221","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#registerverifierrequest-type","text":"","title":"RegisterVerifierRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_72","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#didurifieldnumber-constants_3","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_222","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_7","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_223","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#optionsfieldnumber-constants_1","text":"","title":"OptionsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_224","text":"<p>Field number for the \"options\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#presentationtypeurifieldnumber-constants_1","text":"","title":"PresentationTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_225","text":"<p>Field number for the \"presentation_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#validfromutcfieldnumber-constants_1","text":"","title":"ValidFromUtcFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_226","text":"<p>Field number for the \"valid_from_utc\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#validuntilutcfieldnumber-constants_1","text":"","title":"ValidUntilUtcFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_227","text":"<p>Field number for the \"valid_until_utc\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants_3","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_228","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#registerverifierresponse-type","text":"","title":"RegisterVerifierResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_73","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#responsedatafieldnumber-constants_1","text":"","title":"ResponseDataFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_229","text":"<p>Field number for the \"response_data\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_7","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_230","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#registrationstatus-type","text":"","title":"RegistrationStatus <code>type</code>"},{"location":"reference/dotnet/#namespace_74","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#current-constants","text":"","title":"Current <code>constants</code>"},{"location":"reference/dotnet/#summary_231","text":"<ul> <li>the entity is currently authorized, as of time of the query.</li> </ul> <p></p>","title":"Summary"},{"location":"reference/dotnet/#expired-constants","text":"","title":"Expired <code>constants</code>"},{"location":"reference/dotnet/#summary_232","text":"<ul> <li>entity rights have expired.</li> </ul> <p></p>","title":"Summary"},{"location":"reference/dotnet/#revoked-constants","text":"","title":"Revoked <code>constants</code>"},{"location":"reference/dotnet/#summary_233","text":"<ul> <li>entity authority under specific EGF was terminated by the governing authority.</li> </ul> <p></p>","title":"Summary"},{"location":"reference/dotnet/#terminated-constants","text":"","title":"Terminated <code>constants</code>"},{"location":"reference/dotnet/#summary_234","text":"<ul> <li>entity has voluntarily ceased Issuer role under the specific EGF.</li> </ul> <p></p>","title":"Summary"},{"location":"reference/dotnet/#removeframeworkrequest-type","text":"","title":"RemoveFrameworkRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_75","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#governanceframeworkfieldnumber-constants_1","text":"","title":"GovernanceFrameworkFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_235","text":"<p>Field number for the \"governance_framework\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#removeframeworkresponse-type","text":"","title":"RemoveFrameworkResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_76","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusfieldnumber-constants_8","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_236","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#requestoptions-type","text":"","title":"RequestOptions <code>type</code>"},{"location":"reference/dotnet/#namespace_77","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#responsejsonformatfieldnumber-constants","text":"","title":"ResponseJsonFormatFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_237","text":"<p>Field number for the \"response_json_format\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchcredentialtemplatesrequest-type","text":"","title":"SearchCredentialTemplatesRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_78","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_238","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#queryfieldnumber-constants_1","text":"","title":"QueryFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_239","text":"<p>Field number for the \"query\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#query-property","text":"","title":"Query <code>property</code>"},{"location":"reference/dotnet/#summary_240","text":"<p>SELECT * FROM c WHERE c.name = 'Diploma'</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchcredentialtemplatesresponse-type","text":"","title":"SearchCredentialTemplatesResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_79","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants_1","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_241","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#countfieldnumber-constants","text":"","title":"CountFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_242","text":"<p>Field number for the \"count\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#hasmorefieldnumber-constants","text":"","title":"HasMoreFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_243","text":"<p>Field number for the \"has_more\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#templatesfieldnumber-constants","text":"","title":"TemplatesFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_244","text":"<p>Field number for the \"templates\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchregistryrequest-type","text":"","title":"SearchRegistryRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_80","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants_2","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_245","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#optionsfieldnumber-constants_2","text":"","title":"OptionsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_246","text":"<p>Field number for the \"options\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#queryfieldnumber-constants_2","text":"","title":"QueryFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_247","text":"<p>Field number for the \"query\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#query-property_1","text":"","title":"Query <code>property</code>"},{"location":"reference/dotnet/#summary_248","text":"<p>SELECT c from c where c.type == 'GovernanceFramework'</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchregistryresponse-type","text":"","title":"SearchRegistryResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_81","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants_3","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_249","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#countfieldnumber-constants_1","text":"","title":"CountFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_250","text":"<p>Field number for the \"count\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#hasmorefieldnumber-constants_1","text":"","title":"HasMoreFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_251","text":"<p>Field number for the \"has_more\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemsfieldnumber-constants","text":"","title":"ItemsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_252","text":"<p>Field number for the \"items\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchrequest-type","text":"","title":"SearchRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_82","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_253","text":"<p>Search request object</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants_4","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_254","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#optionsfieldnumber-constants_3","text":"","title":"OptionsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_255","text":"<p>Field number for the \"options\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#queryfieldnumber-constants_3","text":"","title":"QueryFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_256","text":"<p>Field number for the \"query\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#searchresponse-type","text":"","title":"SearchResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_83","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_257","text":"<p>Search response object</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#continuationtokenfieldnumber-constants_5","text":"","title":"ContinuationTokenFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_258","text":"<p>Field number for the \"continuation_token\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#countfieldnumber-constants_2","text":"","title":"CountFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_259","text":"<p>Field number for the \"count\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#hasmorefieldnumber-constants_2","text":"","title":"HasMoreFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_260","text":"<p>Field number for the \"has_more\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#itemsfieldnumber-constants_1","text":"","title":"ItemsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_261","text":"<p>Field number for the \"items\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#sendrequest-type","text":"","title":"SendRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_84","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#didurifieldnumber-constants_4","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_262","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#didcomminvitationfieldnumber-constants_1","text":"","title":"DidcommInvitationFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_263","text":"<p>Field number for the \"didcomm_invitation\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#documentfieldnumber-constants_2","text":"","title":"DocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_264","text":"<p>Field number for the \"document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#emailfieldnumber-constants_2","text":"","title":"EmailFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_265","text":"<p>Field number for the \"email\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#sendresponse-type","text":"","title":"SendResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_85","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusfieldnumber-constants_9","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_266","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#serverconfig-type","text":"","title":"ServerConfig <code>type</code>"},{"location":"reference/dotnet/#namespace_86","text":"<p>Trinsic.Services.Common.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#endpointfieldnumber-constants","text":"","title":"EndpointFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_267","text":"<p>Field number for the \"endpoint\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#portfieldnumber-constants","text":"","title":"PortFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_268","text":"<p>Field number for the \"port\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#usetlsfieldnumber-constants","text":"","title":"UseTlsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_269","text":"<p>Field number for the \"use_tls\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#endpoint-property","text":"","title":"Endpoint <code>property</code>"},{"location":"reference/dotnet/#summary_270","text":"<p>service endpoint</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#port-property","text":"","title":"Port <code>property</code>"},{"location":"reference/dotnet/#summary_271","text":"<p>service port</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#usetls-property","text":"","title":"UseTls <code>property</code>"},{"location":"reference/dotnet/#summary_272","text":"<p>indicates if tls is used</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#servicebase-type","text":"","title":"ServiceBase <code>type</code>"},{"location":"reference/dotnet/#namespace_87","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#buildmetadataasync-method","text":"","title":"BuildMetadataAsync() <code>method</code>"},{"location":"reference/dotnet/#summary_273","text":"<p>Create call metadata by setting the required authentication headers</p>","title":"Summary"},{"location":"reference/dotnet/#returns_41","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_85","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#signinrequest-type","text":"","title":"SignInRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_88","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_274","text":"<p>Request for creating new account</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#detailsfieldnumber-constants_1","text":"","title":"DetailsFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_275","text":"<p>Field number for the \"details\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationcodefieldnumber-constants","text":"","title":"InvitationCodeFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_276","text":"<p>Field number for the \"invitation_code\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#details-property_1","text":"","title":"Details <code>property</code>"},{"location":"reference/dotnet/#summary_277","text":"<p>Account registration details</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationcode-property","text":"","title":"InvitationCode <code>property</code>"},{"location":"reference/dotnet/#summary_278","text":"<p>Invitation code associated with this registration This field is optional.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#signinresponse-type","text":"","title":"SignInResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_89","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_279","text":"<p>Response for creating new account This object will indicate if a confirmation code was sent to one of the users two-factor methods like email, SMS, etc.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#confirmationmethodfieldnumber-constants","text":"","title":"ConfirmationMethodFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_280","text":"<p>Field number for the \"confirmation_method\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#profilefieldnumber-constants","text":"","title":"ProfileFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_281","text":"<p>Field number for the \"profile\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#statusfieldnumber-constants_10","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_282","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#confirmationmethod-property","text":"","title":"ConfirmationMethod <code>property</code>"},{"location":"reference/dotnet/#summary_283","text":"<p>Indicates if confirmation of account is required. This settings is configured globally by the server administrator.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#profile-property","text":"","title":"Profile <code>property</code>"},{"location":"reference/dotnet/#summary_284","text":"<p>Contains authentication data for use with the current device. This object must be stored in a secure place. It can also be protected with a PIN, but this is optional. See the docs at https://docs.trinsic.id for more information on working with authentication data.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#status-property","text":"","title":"Status <code>property</code>"},{"location":"reference/dotnet/#summary_285","text":"<p>The status of the response</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#status-type","text":"","title":"Status <code>type</code>"},{"location":"reference/dotnet/#namespace_90","text":"<p>Trinsic.Services.Common.V1.InvitationStatusResponse.Types</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#completed-constants","text":"","title":"Completed <code>constants</code>"},{"location":"reference/dotnet/#summary_286","text":"<p>The participant has been onboarded</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#error-constants","text":"","title":"Error <code>constants</code>"},{"location":"reference/dotnet/#summary_287","text":"<p>Onboarding resulted in error</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#invitationsent-constants","text":"","title":"InvitationSent <code>constants</code>"},{"location":"reference/dotnet/#summary_288","text":"<p>The participant has been invited</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#structextensions-type","text":"","title":"StructExtensions <code>type</code>"},{"location":"reference/dotnet/#namespace_91","text":"<p>Google.Protobuf.WellKnownTypes</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#tojobjectmessage-method","text":"","title":"ToJObject(message) <code>method</code>"},{"location":"reference/dotnet/#summary_289","text":"<p>Converts to <code>JObject</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_42","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_86","text":"Name Type Description     message Google.Protobuf.WellKnownTypes.Struct The message.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#tojtokenmessage-method","text":"","title":"ToJToken(message) <code>method</code>"},{"location":"reference/dotnet/#summary_290","text":"<p>Converts to jtoken.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_43","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_87","text":"Name Type Description     message Google.Protobuf.WellKnownTypes.Struct The message.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#templatesreflection-type","text":"","title":"TemplatesReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_92","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_291","text":"<p>Holder for reflection information generated from services/verifiable-credentials/templates/v1/templates.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_10","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_292","text":"<p>File descriptor for services/verifiable-credentials/templates/v1/templates.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#tokenprotection-type","text":"","title":"TokenProtection <code>type</code>"},{"location":"reference/dotnet/#namespace_93","text":"<p>Trinsic.Services.Account.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_293","text":"<p>Token protection info</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#enabledfieldnumber-constants","text":"","title":"EnabledFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_294","text":"<p>Field number for the \"enabled\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#methodfieldnumber-constants","text":"","title":"MethodFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_295","text":"<p>Field number for the \"method\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#enabled-property","text":"","title":"Enabled <code>property</code>"},{"location":"reference/dotnet/#summary_296","text":"<p>Indicates if token is protected using a PIN, security code, HSM secret, etc.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#method-property","text":"","title":"Method <code>property</code>"},{"location":"reference/dotnet/#summary_297","text":"<p>The method used to protect the token</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#trustregistry-type","text":"","title":"TrustRegistry <code>type</code>"},{"location":"reference/dotnet/#namespace_94","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_11","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_298","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_6","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_299","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_88","text":"Name Type Description     serviceImpl Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_6","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_300","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_89","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#trustregistrybase-type","text":"","title":"TrustRegistryBase <code>type</code>"},{"location":"reference/dotnet/#namespace_95","text":"<p>Trinsic.Services.TrustRegistry.V1.TrustRegistry</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_301","text":"<p>Base class for server-side implementations of TrustRegistry</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#addframeworkrequestcontext-method","text":"","title":"AddFramework(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_302","text":"<p>Adds a trust registry defintion to the ecosystem</p>","title":"Summary"},{"location":"reference/dotnet/#returns_44","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_90","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerrequestcontext-method","text":"","title":"RegisterIssuer(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_303","text":"<p>Registers an authoritative issuer with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_45","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_91","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierrequestcontext-method","text":"","title":"RegisterVerifier(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_304","text":"<p>Registers an authoritative verifier with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_46","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_92","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterissuerrequestcontext-method","text":"","title":"UnregisterIssuer(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_305","text":"<p>Removes an authoritative issuer with a credential template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_47","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_93","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterverifierrequestcontext-method","text":"","title":"UnregisterVerifier(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_306","text":"<p>Removes an authoritative verifier with a presentation template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_48","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_94","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#trustregistryclient-type","text":"","title":"TrustRegistryClient <code>type</code>"},{"location":"reference/dotnet/#namespace_96","text":"<p>Trinsic.Services.TrustRegistry.V1.TrustRegistry</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_307","text":"<p>Client for TrustRegistry</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_6","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_308","text":"<p>Creates a new client for TrustRegistry</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_95","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_6","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_309","text":"<p>Creates a new client for TrustRegistry that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_96","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_6","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_310","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_97","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_6","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_311","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_98","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#addframeworkrequestheadersdeadlinecancellationtoken-method","text":"","title":"AddFramework(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_312","text":"<p>Adds a trust registry defintion to the ecosystem</p>","title":"Summary"},{"location":"reference/dotnet/#returns_49","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_99","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#addframeworkrequestoptions-method","text":"","title":"AddFramework(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_313","text":"<p>Adds a trust registry defintion to the ecosystem</p>","title":"Summary"},{"location":"reference/dotnet/#returns_50","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_100","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#addframeworkasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"AddFrameworkAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_314","text":"<p>Adds a trust registry defintion to the ecosystem</p>","title":"Summary"},{"location":"reference/dotnet/#returns_51","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_101","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#addframeworkasyncrequestoptions-method","text":"","title":"AddFrameworkAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_315","text":"<p>Adds a trust registry defintion to the ecosystem</p>","title":"Summary"},{"location":"reference/dotnet/#returns_52","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_102","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_6","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_316","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_103","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerrequestheadersdeadlinecancellationtoken-method","text":"","title":"RegisterIssuer(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_317","text":"<p>Registers an authoritative issuer with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_53","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_104","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerrequestoptions-method","text":"","title":"RegisterIssuer(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_318","text":"<p>Registers an authoritative issuer with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_54","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_105","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"RegisterIssuerAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_319","text":"<p>Registers an authoritative issuer with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_55","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_106","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerissuerasyncrequestoptions-method","text":"","title":"RegisterIssuerAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_320","text":"<p>Registers an authoritative issuer with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_56","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_107","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterIssuerRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierrequestheadersdeadlinecancellationtoken-method","text":"","title":"RegisterVerifier(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_321","text":"<p>Registers an authoritative verifier with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_57","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_108","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierrequestoptions-method","text":"","title":"RegisterVerifier(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_322","text":"<p>Registers an authoritative verifier with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_58","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_109","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"RegisterVerifierAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_323","text":"<p>Registers an authoritative verifier with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_59","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_110","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierasyncrequestoptions-method","text":"","title":"RegisterVerifierAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_324","text":"<p>Registers an authoritative verifier with a credential template</p>","title":"Summary"},{"location":"reference/dotnet/#returns_60","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_111","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.RegisterVerifierRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterissuerrequestheadersdeadlinecancellationtoken-method","text":"","title":"UnregisterIssuer(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_325","text":"<p>Removes an authoritative issuer with a credential template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_61","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_112","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterissuerrequestoptions-method","text":"","title":"UnregisterIssuer(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_326","text":"<p>Removes an authoritative issuer with a credential template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_62","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_113","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterissuerasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"UnregisterIssuerAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_327","text":"<p>Removes an authoritative issuer with a credential template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_63","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_114","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterissuerasyncrequestoptions-method","text":"","title":"UnregisterIssuerAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_328","text":"<p>Removes an authoritative issuer with a credential template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_64","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_115","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterIssuerRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterverifierrequestheadersdeadlinecancellationtoken-method","text":"","title":"UnregisterVerifier(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_329","text":"<p>Removes an authoritative verifier with a presentation template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_65","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_116","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterverifierrequestoptions-method","text":"","title":"UnregisterVerifier(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_330","text":"<p>Removes an authoritative verifier with a presentation template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_66","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_117","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterverifierasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"UnregisterVerifierAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_331","text":"<p>Removes an authoritative verifier with a presentation template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_67","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_118","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#unregisterverifierasyncrequestoptions-method","text":"","title":"UnregisterVerifierAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_332","text":"<p>Removes an authoritative verifier with a presentation template from the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_68","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_119","text":"Name Type Description     request Trinsic.Services.TrustRegistry.V1.UnregisterVerifierRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#trustregistryreflection-type","text":"","title":"TrustRegistryReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_97","text":"<p>Trinsic.Services.TrustRegistry.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_333","text":"<p>Holder for reflection information generated from services/trust-registry/v1/trust-registry.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_12","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_334","text":"<p>File descriptor for services/trust-registry/v1/trust-registry.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#trustregistryservice-type","text":"","title":"TrustRegistryService <code>type</code>"},{"location":"reference/dotnet/#namespace_98","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#checkissuerstatusissuerdidcredentialtypegovernanceframework-method","text":"","title":"CheckIssuerStatus(issuerDid,credentialType,governanceFramework) <code>method</code>"},{"location":"reference/dotnet/#summary_335","text":"<p>Checks the status of the issuer for a given credential type in the given governance framework</p>","title":"Summary"},{"location":"reference/dotnet/#returns_69","text":"<p>The status of the registration</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_120","text":"Name Type Description     issuerDid System.String The issuer DID   credentialType System.String    governanceFramework System.String     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#checkverifierstatusverifierdidpresentationtypegovernanceframework-method","text":"","title":"CheckVerifierStatus(verifierDid,presentationType,governanceFramework) <code>method</code>"},{"location":"reference/dotnet/#summary_336","text":"<p>Checks the status of the verifier for a given presentation type in the given governance framework</p>","title":"Summary"},{"location":"reference/dotnet/#returns_70","text":"<p>The status of the registration</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_121","text":"Name Type Description     verifierDid System.String The verifier DID   presentationType System.String The presentation type URI   governanceFramework System.String The governance framework URI    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registergovernanceframeworkgovernanceframeworkdescription-method","text":"","title":"RegisterGovernanceFramework(governanceFramework,description) <code>method</code>"},{"location":"reference/dotnet/#summary_337","text":"<p>Register a Governance Framework with the Trust Registry.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_71","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_122","text":"Name Type Description     governanceFramework System.String The governance framework URI   description System.String The framework description","title":"Parameters"},{"location":"reference/dotnet/#remarks","text":"<p>Calling this multiple times with the same URI will update the previously registered framework.</p> <p></p>","title":"Remarks"},{"location":"reference/dotnet/#registerissuerissuerdidcredentialtypegovernanceframeworkvalidfromvaliduntil-method","text":"","title":"RegisterIssuer(issuerDid,credentialType,governanceFramework,validFrom,validUntil) <code>method</code>"},{"location":"reference/dotnet/#summary_338","text":"<p>Register a DID as authoritative issuer with the configured governance framework.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_72","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_123","text":"Name Type Description     issuerDid System.String The issuer DID   credentialType System.String The full credential type URI   governanceFramework System.String The governance framework URI   validFrom System.Nullable{System.DateTimeOffset} Valid from (UTC)   validUntil System.Nullable{System.DateTimeOffset} Valid until (UTC)    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#registerverifierverifierdidpresentationtypegovernanceframeworkvalidfromvaliduntil-method","text":"","title":"RegisterVerifier(verifierDid,presentationType,governanceFramework,validFrom,validUntil) <code>method</code>"},{"location":"reference/dotnet/#summary_339","text":"<p>Register a DID as authoritative verifier with the configured governance framework.</p>","title":"Summary"},{"location":"reference/dotnet/#returns_73","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_124","text":"Name Type Description     verifierDid System.String The verifier DID   presentationType System.String The full presentation type URI   governanceFramework System.String The governance framework URI   validFrom System.Nullable{System.DateTimeOffset} Valid from (UTC)   validUntil System.Nullable{System.DateTimeOffset} Valid until (UTC)    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchregistryquery-method","text":"","title":"SearchRegistry(query) <code>method</code>"},{"location":"reference/dotnet/#summary_340","text":"<p>Search the trust registry</p>","title":"Summary"},{"location":"reference/dotnet/#returns_74","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_125","text":"Name Type Description     query System.String     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#types-type","text":"","title":"Types <code>type</code>"},{"location":"reference/dotnet/#namespace_99","text":"<p>Trinsic.Services.Common.V1.InvitationStatusResponse</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_341","text":"<p>Container for nested types declared in the InvitationStatusResponse message type.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#types-type_1","text":"","title":"Types <code>type</code>"},{"location":"reference/dotnet/#namespace_100","text":"<p>Trinsic.Services.Common.V1.InviteRequest</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_342","text":"<p>Container for nested types declared in the InviteRequest message type.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#universalwalletreflection-type","text":"","title":"UniversalWalletReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_101","text":"<p>Trinsic.Services.UniversalWallet.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_343","text":"<p>Holder for reflection information generated from services/universal-wallet/v1/universal-wallet.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_13","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_344","text":"<p>File descriptor for services/universal-wallet/v1/universal-wallet.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#unregisterissuerrequest-type","text":"","title":"UnregisterIssuerRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_102","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#credentialtypeurifieldnumber-constants_2","text":"","title":"CredentialTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_345","text":"<p>Field number for the \"credential_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#didurifieldnumber-constants_5","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_346","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_8","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_347","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants_4","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_348","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#unregisterissuerresponse-type","text":"","title":"UnregisterIssuerResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_103","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusfieldnumber-constants_11","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_349","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#unregisterverifierrequest-type","text":"","title":"UnregisterVerifierRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_104","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#didurifieldnumber-constants_6","text":"","title":"DidUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_350","text":"<p>Field number for the \"did_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#governanceframeworkurifieldnumber-constants_9","text":"","title":"GovernanceFrameworkUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_351","text":"<p>Field number for the \"governance_framework_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#presentationtypeurifieldnumber-constants_2","text":"","title":"PresentationTypeUriFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_352","text":"<p>Field number for the \"presentation_type_uri\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#x509certfieldnumber-constants_5","text":"","title":"X509CertFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_353","text":"<p>Field number for the \"x509_cert\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#unregisterverifierresponse-type","text":"","title":"UnregisterVerifierResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_105","text":"<p>Trinsic.Services.TrustRegistry.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#statusfieldnumber-constants_12","text":"","title":"StatusFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_354","text":"<p>Field number for the \"status\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#updatecredentialtemplaterequest-type","text":"","title":"UpdateCredentialTemplateRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_106","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#idfieldnumber-constants_4","text":"","title":"IdFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_355","text":"<p>Field number for the \"id\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#namefieldnumber-constants_3","text":"","title":"NameFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_356","text":"<p>Field number for the \"name\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#schemafieldnumber-constants_2","text":"","title":"SchemaFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_357","text":"<p>Field number for the \"schema\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#updatecredentialtemplateresponse-type","text":"","title":"UpdateCredentialTemplateResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_107","text":"<p>Trinsic.Services.VerifiableCredentials.Templates.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#templatefieldnumber-constants_1","text":"","title":"TemplateFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_358","text":"<p>Field number for the \"template\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#verifiablecredentialsreflection-type","text":"","title":"VerifiableCredentialsReflection <code>type</code>"},{"location":"reference/dotnet/#namespace_108","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_359","text":"<p>Holder for reflection information generated from services/verifiable-credentials/v1/verifiable-credentials.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#descriptor-property_14","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_360","text":"<p>File descriptor for services/verifiable-credentials/v1/verifiable-credentials.proto</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#verifyproofrequest-type","text":"","title":"VerifyProofRequest <code>type</code>"},{"location":"reference/dotnet/#namespace_109","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_361","text":"<p>Verify Proof</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#proofdocumentfieldnumber-constants_1","text":"","title":"ProofDocumentFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_362","text":"<p>Field number for the \"proof_document\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#verifyproofresponse-type","text":"","title":"VerifyProofResponse <code>type</code>"},{"location":"reference/dotnet/#namespace_110","text":"<p>Trinsic.Services.VerifiableCredentials.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#validfieldnumber-constants","text":"","title":"ValidFieldNumber <code>constants</code>"},{"location":"reference/dotnet/#summary_363","text":"<p>Field number for the \"valid\" field.</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#walletservice-type","text":"","title":"WalletService <code>type</code>"},{"location":"reference/dotnet/#namespace_111","text":"<p>Trinsic.Services.UniversalWallet.V1</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#walletservice-type_1","text":"","title":"WalletService <code>type</code>"},{"location":"reference/dotnet/#namespace_112","text":"<p>Trinsic</p> <p></p>","title":"Namespace"},{"location":"reference/dotnet/#descriptor-property_15","text":"","title":"Descriptor <code>property</code>"},{"location":"reference/dotnet/#summary_364","text":"<p>Service descriptor</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#bindserviceserviceimpl-method_7","text":"","title":"BindService(serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_365","text":"<p>Creates service definition that can be registered with a server</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_126","text":"Name Type Description     serviceImpl Trinsic.Services.UniversalWallet.V1.WalletService.WalletServiceBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#bindserviceservicebinderserviceimpl-method_7","text":"","title":"BindService(serviceBinder,serviceImpl) <code>method</code>"},{"location":"reference/dotnet/#summary_366","text":"<p>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic. Note: this method is part of an experimental API that can change or be removed without any prior notice.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_127","text":"Name Type Description     serviceBinder Grpc.Core.ServiceBinderBase Service methods will be bound by calling <code>AddMethod</code> on this object.   serviceImpl Trinsic.Services.UniversalWallet.V1.WalletService.WalletServiceBase An object implementing the server-side handling logic.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemitem-method","text":"","title":"InsertItem(item) <code>method</code>"},{"location":"reference/dotnet/#summary_367","text":"<p>Insert an item into the personal wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_75","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_128","text":"Name Type Description     item Newtonsoft.Json.Linq.JObject     <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchquery-method","text":"","title":"Search(query) <code>method</code>"},{"location":"reference/dotnet/#summary_368","text":"<p>Search the wallet for records matching the specified criteria</p>","title":"Summary"},{"location":"reference/dotnet/#returns_76","text":"","title":"Returns"},{"location":"reference/dotnet/#parameters_129","text":"Name Type Description     query System.String The SQL query","title":"Parameters"},{"location":"reference/dotnet/#remarks_1","text":"<p>See https://docs.microsoft.com/en-us/azure/cosmos-db/sql-query-select</p> <p></p>","title":"Remarks"},{"location":"reference/dotnet/#walletservicebase-type","text":"","title":"WalletServiceBase <code>type</code>"},{"location":"reference/dotnet/#namespace_113","text":"<p>Trinsic.Services.UniversalWallet.V1.WalletService</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_369","text":"<p>Base class for server-side implementations of WalletService</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#deleteitemrequestcontext-method","text":"","title":"Deleteitem(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_370","text":"<p>Delete an item from the wallet permanently</p>","title":"Summary"},{"location":"reference/dotnet/#returns_77","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_130","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.DeleteItemRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemrequestcontext-method","text":"","title":"InsertItem(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_371","text":"<p>Insert an item into the wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_78","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_131","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.InsertItemRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchrequestcontext-method","text":"","title":"Search(request,context) <code>method</code>"},{"location":"reference/dotnet/#summary_372","text":"<p>Search the wallet using a SQL-like syntax</p>","title":"Summary"},{"location":"reference/dotnet/#returns_79","text":"<p>The response to send back to the client (wrapped by a task).</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_132","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.SearchRequest The request received from the client.   context Grpc.Core.ServerCallContext The context of the server-side call handler being invoked.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#walletserviceclient-type","text":"","title":"WalletServiceClient <code>type</code>"},{"location":"reference/dotnet/#namespace_114","text":"<p>Trinsic.Services.UniversalWallet.V1.WalletService</p>","title":"Namespace"},{"location":"reference/dotnet/#summary_373","text":"<p>Client for WalletService</p> <p></p>","title":"Summary"},{"location":"reference/dotnet/#ctorchannel-constructor_7","text":"","title":"#ctor(channel) <code>constructor</code>"},{"location":"reference/dotnet/#summary_374","text":"<p>Creates a new client for WalletService</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_133","text":"Name Type Description     channel Grpc.Core.ChannelBase The channel to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorcallinvoker-constructor_7","text":"","title":"#ctor(callInvoker) <code>constructor</code>"},{"location":"reference/dotnet/#summary_375","text":"<p>Creates a new client for WalletService that uses a custom <code>CallInvoker</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_134","text":"Name Type Description     callInvoker Grpc.Core.CallInvoker The callInvoker to use to make remote calls.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctor-constructor_7","text":"","title":"#ctor() <code>constructor</code>"},{"location":"reference/dotnet/#summary_376","text":"<p>Protected parameterless constructor to allow creation of test doubles.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_135","text":"<p>This constructor has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#ctorconfiguration-constructor_7","text":"","title":"#ctor(configuration) <code>constructor</code>"},{"location":"reference/dotnet/#summary_377","text":"<p>Protected constructor to allow creation of configured clients.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_136","text":"Name Type Description     configuration Grpc.Core.ClientBase.ClientBaseConfiguration The client configuration.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#deleteitemrequestheadersdeadlinecancellationtoken-method","text":"","title":"Deleteitem(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_378","text":"<p>Delete an item from the wallet permanently</p>","title":"Summary"},{"location":"reference/dotnet/#returns_80","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_137","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.DeleteItemRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#deleteitemrequestoptions-method","text":"","title":"Deleteitem(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_379","text":"<p>Delete an item from the wallet permanently</p>","title":"Summary"},{"location":"reference/dotnet/#returns_81","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_138","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.DeleteItemRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#deleteitemasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"DeleteitemAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_380","text":"<p>Delete an item from the wallet permanently</p>","title":"Summary"},{"location":"reference/dotnet/#returns_82","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_139","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.DeleteItemRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#deleteitemasyncrequestoptions-method","text":"","title":"DeleteitemAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_381","text":"<p>Delete an item from the wallet permanently</p>","title":"Summary"},{"location":"reference/dotnet/#returns_83","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_140","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.DeleteItemRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemrequestheadersdeadlinecancellationtoken-method","text":"","title":"InsertItem(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_382","text":"<p>Insert an item into the wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_84","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_141","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.InsertItemRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemrequestoptions-method","text":"","title":"InsertItem(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_383","text":"<p>Insert an item into the wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_85","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_142","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.InsertItemRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"InsertItemAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_384","text":"<p>Insert an item into the wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_86","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_143","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.InsertItemRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#insertitemasyncrequestoptions-method","text":"","title":"InsertItemAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_385","text":"<p>Insert an item into the wallet</p>","title":"Summary"},{"location":"reference/dotnet/#returns_87","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_144","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.InsertItemRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#newinstance-method_7","text":"","title":"NewInstance() <code>method</code>"},{"location":"reference/dotnet/#summary_386","text":"<p>Creates a new instance of client from given <code>ClientBaseConfiguration</code>.</p>","title":"Summary"},{"location":"reference/dotnet/#parameters_145","text":"<p>This method has no parameters.</p> <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchrequestheadersdeadlinecancellationtoken-method","text":"","title":"Search(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_387","text":"<p>Search the wallet using a SQL-like syntax</p>","title":"Summary"},{"location":"reference/dotnet/#returns_88","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_146","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.SearchRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchrequestoptions-method","text":"","title":"Search(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_388","text":"<p>Search the wallet using a SQL-like syntax</p>","title":"Summary"},{"location":"reference/dotnet/#returns_89","text":"<p>The response received from the server.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_147","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.SearchRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchasyncrequestheadersdeadlinecancellationtoken-method","text":"","title":"SearchAsync(request,headers,deadline,cancellationToken) <code>method</code>"},{"location":"reference/dotnet/#summary_389","text":"<p>Search the wallet using a SQL-like syntax</p>","title":"Summary"},{"location":"reference/dotnet/#returns_90","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_148","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.SearchRequest The request to send to the server.   headers Grpc.Core.Metadata The initial metadata to send with the call. This parameter is optional.   deadline System.Nullable{System.DateTime} An optional deadline for the call. The call will be cancelled if deadline is hit.   cancellationToken System.Threading.CancellationToken An optional token for canceling the call.    <p></p>","title":"Parameters"},{"location":"reference/dotnet/#searchasyncrequestoptions-method","text":"","title":"SearchAsync(request,options) <code>method</code>"},{"location":"reference/dotnet/#summary_390","text":"<p>Search the wallet using a SQL-like syntax</p>","title":"Summary"},{"location":"reference/dotnet/#returns_91","text":"<p>The call object.</p>","title":"Returns"},{"location":"reference/dotnet/#parameters_149","text":"Name Type Description     request Trinsic.Services.UniversalWallet.V1.SearchRequest The request to send to the server.   options Grpc.Core.CallOptions The options for the call.","title":"Parameters"},{"location":"reference/python/","text":"","title":"Python"},{"location":"reference/python/#trinsic.services","text":"<p>Trinsic Service wrappers</p>","title":"<code>services</code>"},{"location":"reference/python/#trinsic.services.AccountService","text":"<p>Wrapper for the Account Service</p>","title":"<code> AccountService            (ServiceBase)         </code>"},{"location":"reference/python/#trinsic.services.AccountService.__init__","text":"<p>Initialize a connection to the server.</p> <p>Parameters:</p>    Name Type Description Default     <code>server_config</code> <code>ServerConfig</code> <p>The URL of the server, or a channel which encapsulates the connection already.</p> <code>ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True)</code>","title":"<code>__init__(self, profile=None, server_config=ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True))</code>  <code>special</code>"},{"location":"reference/python/#trinsic.services.AccountService.get_info","text":"<p>Return the details about the currently active account.</p> <p>Returns:</p>    Type Description     <code>InfoResponse</code> <p>The <code>InfoResponse</code></p>","title":"<code>get_info(self)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.AccountService.protect","text":"<p>Protects the account profile with a security code. The code can be a PIN, password, keychain secret, etc.</p> <p>Parameters:</p>    Name Type Description Default     <code>profile</code> <code>AccountProfile</code>  required   <code>security_code</code> <code>str</code>  required","title":"<code>protect(profile, security_code)</code>  <code>staticmethod</code>"},{"location":"reference/python/#trinsic.services.AccountService.sign_in","text":"<p>Perform a sign-in to obtain an account profile. If the <code>AccountDetails</code> are specified, they will be used to associate</p> <p>Parameters:</p>    Name Type Description Default     <code>details</code> <code>AccountDetails</code>  <code>AccountDetails(email='')</code>","title":"<code>sign_in(self, details=AccountDetails(email=''))</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.AccountService.unprotect","text":"<p>Unprotects the account profile using a security code. The confirmation method field will specify how this code was communicated with the account owner.</p> <p>Parameters:</p>    Name Type Description Default     <code>profile</code> <code>AccountProfile</code>  required   <code>security_code</code> <code>str</code>  required    <p>Returns:</p>    Type Description     <code>AccountProfile</code> <p>The in-place modified profile</p>","title":"<code>unprotect(profile, security_code)</code>  <code>staticmethod</code>"},{"location":"reference/python/#trinsic.services.CredentialsService","text":"<p>Wrapper for the Credentials Service</p>","title":"<code> CredentialsService            (ServiceBase)         </code>"},{"location":"reference/python/#trinsic.services.CredentialsService.__init__","text":"<p>Initialize a connection to the server.</p> <p>Parameters:</p>    Name Type Description Default     <code>server_config</code> <code>ServerConfig</code> <p>The URL of the server, or a channel which encapsulates the connection already.</p> <code>ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True)</code>","title":"<code>__init__(self, profile, server_config=ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True))</code>  <code>special</code>"},{"location":"reference/python/#trinsic.services.CredentialsService.create_proof","text":"<p>Create a proof</p> <p>Parameters:</p>    Name Type Description Default     <code>document_id</code> <code>str</code> <p>document in the wallet that is signed</p> required   <code>reveal_document</code> <code>dict</code> <p>JSONLD frame describing what data is to be disclosed.</p> required    <p>Returns:</p>    Type Description     <code>dict</code> <p>The JSONLD proof</p>","title":"<code>create_proof(self, document_id, reveal_document)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.CredentialsService.issue_credential","text":"<p>Issue a new credential</p> <p>Parameters:</p>    Name Type Description Default     <code>document</code> <code>dict</code> <p>Dictionary describing the credential</p> required    <p>Returns:</p>    Type Description     <code>dict</code> <p>Dictionary with the issued credential</p>","title":"<code>issue_credential(self, document)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.CredentialsService.send","text":"<p>Send the provided document to the given email</p> <p>Parameters:</p>    Name Type Description Default     <code>document</code> <code>dict</code> <p>Document to send</p> required   <code>email</code> <code>str</code> <p>Email to which the document is sent</p> required","title":"<code>send(self, document, email)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.CredentialsService.verify_proof","text":"<p>Verify a proof</p> <p>Parameters:</p>    Name Type Description Default     <code>proof_document</code> <code>dict</code> <p>Document to verify</p> required    <p>Returns:</p>    Type Description     <code>bool</code> <p><code>True</code> if verified, <code>False</code> if not verified</p>","title":"<code>verify_proof(self, proof_document)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.ProviderService","text":"<p>Wrapper for the Provider Service</p>","title":"<code> ProviderService            (ServiceBase)         </code>"},{"location":"reference/python/#trinsic.services.ProviderService.__init__","text":"<p>Initialize the connection</p> <p>Parameters:</p>    Name Type Description Default     <code>server_config</code> <code>ServerConfig</code> <p>The address of the server to connect, or an already-connected <code>Channel</code></p> <code>ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True)</code>","title":"<code>__init__(self, profile, server_config=ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True))</code>  <code>special</code>"},{"location":"reference/python/#trinsic.services.ProviderService.invitation_status","text":"<p>Check invitation status</p> <p>Parameters:</p>    Name Type Description Default     <code>invitation_id</code> <code>str</code> <p>invitation id returned from <code>invite_participant()</code></p> <code>''</code>    <p>Returns:</p>    Type Description     <code>InvitationStatusResponse</code> <p>InvitationStatusResponse</p>","title":"<code>invitation_status(self, invitation_id='')</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.ProviderService.invite_participant","text":"<p>Invite a new participant to the provider ecosystem</p> <p>Parameters:</p>    Name Type Description Default     <code>participant</code> <code>ParticipantType</code> <p>ParticipantType</p> <code>None</code>   <code>description</code> <code>str</code>  <code>None</code>   <code>email</code> <code>str</code>  <code>None</code>   <code>phone</code> <code>str</code>  <code>None</code>   <code>didcomm_invitation</code> <code>InviteRequestDidCommInvitation</code> <p>InviteRequestDidCommInvitation</p> <code>None</code>    <p>Returns:</p>    Type Description     <code>InviteResponse</code> <p>InviteResponse</p>","title":"<code>invite_participant(self, participant=None, description=None, email=None, phone=None, didcomm_invitation=None)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService","text":"<p>Wrapper for Trust Registry Service</p>","title":"<code> TrustRegistryService            (ServiceBase)         </code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.check_issuer_status","text":"<p>Check for authoritative status</p> <p>Parameters:</p>    Name Type Description Default     <code>issuer_did</code> <code>str</code>  required   <code>credential_type</code> <code>str</code>  required   <code>governance_framework</code> <code>str</code>  required    <p>Returns:</p>    Type Description     <code>RegistrationStatus</code> <p>RegistrationStatus</p>","title":"<code>check_issuer_status(self, issuer_did, credential_type, governance_framework)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.check_verifier_status","text":"<p>Check verifier status Args     issuer_did: Issuer DID     presentation_type: Presentation type     governance_framework: Governance framework</p> <p>Returns:</p>    Type Description     <code>RegistrationStatus</code> <p>RegistrationStatus</p>","title":"<code>check_verifier_status(self, issuer_did, presentation_type, governance_framework)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.register_governance_framework","text":"<p>Create a governance framework</p> <p>Parameters:</p>    Name Type Description Default     <code>governance_framework</code> <code>str</code>  required   <code>description</code> <code>str</code>  required","title":"<code>register_governance_framework(self, governance_framework, description)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.register_issuer","text":"<p>Register the issuer</p> <p>Parameters:</p>    Name Type Description Default     <code>issuer_did</code> <code>str</code>  required   <code>credential_type</code> <code>str</code>  required   <code>governance_framework</code> <code>str</code>  required   <code>valid_from</code> <code>datetime</code>  required   <code>valid_until</code> <code>datetime</code>  required    <p>Exceptions:</p>    Type Description     <code>ValueError</code> <p>if date ranges are not provided</p>","title":"<code>register_issuer(self, issuer_did, credential_type, governance_framework, valid_from, valid_until)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.register_verifier","text":"<p>Register the verifier</p> <p>Parameters:</p>    Name Type Description Default     <code>verifier_did</code> <code>str</code>  required   <code>presentation_type</code> <code>str</code>  required   <code>governance_framework</code> <code>str</code>  required   <code>valid_from</code> <code>datetime</code>  required   <code>valid_until</code> <code>datetime</code>  required","title":"<code>register_verifier(self, verifier_did, presentation_type, governance_framework, valid_from, valid_until)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.search_registry","text":"<p>Search the registry</p> <p>Parameters:</p>    Name Type Description Default     <code>query</code> <code>str</code> <p>Search query</p> <code>'SELECT * FROM c'</code>    <p>Returns:</p>    Type Description     <code>List[Dict]</code> <p>SearchRegistryResponse</p>","title":"<code>search_registry(self, query='SELECT * FROM c')</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.unregister_issuer","text":"<p>Unregister the issuer</p> <p>Parameters:</p>    Name Type Description Default     <code>issuer_did</code> <code>str</code>  required   <code>credential_type</code> <code>str</code>  required   <code>governance_framework</code> <code>str</code>  required   <code>valid_from</code> <code>datetime</code>  required   <code>valid_until</code> <code>datetime</code>  required    <p>Exceptions:</p>    Type Description     <code>NotImplementedError</code> <p>Unsupported call</p>","title":"<code>unregister_issuer(self, issuer_did, credential_type, governance_framework, valid_from, valid_until)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.TrustRegistryService.unregister_verifier","text":"<p>Unregister the verifier</p> <p>Parameters:</p>    Name Type Description Default     <code>verifier_did</code> <code>str</code>  required   <code>presentation_type</code> <code>str</code>  required   <code>governance_framework</code> <code>str</code>  required   <code>valid_from</code> <code>datetime</code>  required   <code>valid_until</code> <code>datetime</code>  required    <p>Exceptions:</p>    Type Description     <code>NotImplementedError</code> <p>Unsupported call</p>","title":"<code>unregister_verifier(self, verifier_did, presentation_type, governance_framework, valid_from, valid_until)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.WalletService","text":"<p>Wrapper for the Wallet Service</p>","title":"<code> WalletService            (ServiceBase)         </code>"},{"location":"reference/python/#trinsic.services.WalletService.__init__","text":"<p>Initialize a connection to the server.</p> <p>Parameters:</p>    Name Type Description Default     <code>server_config</code> <code>ServerConfig</code> <p>The URL of the server, or a channel which encapsulates the connection already.</p> <code>ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True)</code>","title":"<code>__init__(self, profile, server_config=ServerConfig(endpoint='prod.trinsic.cloud', port=443, use_tls=True))</code>  <code>special</code>"},{"location":"reference/python/#trinsic.services.WalletService.close","text":"<p>Close the channel</p>","title":"<code>close(self)</code>"},{"location":"reference/python/#trinsic.services.WalletService.insert_item","text":"<p>Insert a new item</p> <p>Parameters:</p>    Name Type Description Default     <code>item</code> <code>dict</code> <p>Item to insert into the wallet.</p> required    <p>Returns:</p>    Type Description     <code>str</code> <p><code>item_id</code> of the created record.</p>","title":"<code>insert_item(self, item)</code>  <code>async</code>"},{"location":"reference/python/#trinsic.services.WalletService.search","text":"<p>Search for crdentials</p> <p>Parameters:</p>    Name Type Description Default     <code>query</code> <code>str</code> <p>SQL query to use for searching, see the docs for allowed keywords</p> <code>'SELECT * from c'</code>    <p>Returns:</p>    Type Description     <code>SearchResponse</code> <p>The search response object information</p>","title":"<code>search(self, query='SELECT * from c')</code>  <code>async</code>"},{"location":"reference/python/#trinsic.trinsic_util","text":"<p>Utility functions for the Trinsic services SDK</p>","title":"<code>trinsic_util</code>"},{"location":"reference/python/#trinsic.trinsic_util.create_channel","text":"<p>Create the channel from the provided URL</p> <p>Parameters:</p>    Name Type Description Default     <code>config</code> <code>Union[trinsic.proto.services.common.v1.ServerConfig, str, grpclib.client.Channel]</code> <p>Server configuration</p> required    <p>Returns:</p>    Type Description     <code>Channel</code> <p>connected <code>Channel</code></p>","title":"<code>create_channel(config)</code>"},{"location":"reference/python/#trinsic.trinsic_util.trinsic_production_config","text":"<p>Default production configuration for the trinsic cloud</p> <p>Returns:</p>    Type Description     <code>ServerConfig</code> <p>ServerConfig</p>","title":"<code>trinsic_production_config()</code>"},{"location":"reference/python/#trinsic.trinsic_util.trinsic_test_config","text":"<p>Test server configuration</p> <p>Returns:</p>    Type Description     <code>ServerConfig</code> <p>ServerConfig</p>","title":"<code>trinsic_test_config()</code>"},{"location":"reference/proto/","text":"<p></p>","title":"Protocol Documentation"},{"location":"reference/proto/#table-of-contents","text":"<ul> <li> <p>pbmse/v1/pbmse.proto</p> <ul> <li>EncryptedMessage</li> <li>EncryptionHeader</li> <li>EncryptionRecipient</li> <li>Signature</li> <li>SignatureHeader</li> <li> <p>SignedMessage</p> </li> <li> <p>EncryptionAlgorithm</p> </li> <li>EncryptionMode</li> </ul> </li> <li> <p>services/account/v1/account.proto</p> <ul> <li>AccountDetails</li> <li>AccountProfile</li> <li>InfoRequest</li> <li>InfoResponse</li> <li>ListDevicesRequest</li> <li>ListDevicesResponse</li> <li>RevokeDeviceRequest</li> <li>RevokeDeviceResponse</li> <li>SignInRequest</li> <li>SignInResponse</li> <li> <p>TokenProtection</p> </li> <li> <p>ConfirmationMethod</p> </li> <li> <p>Account</p> </li> </ul> </li> <li> <p>services/common/v1/common.proto</p> <ul> <li>JsonPayload</li> <li>Nonce</li> <li>RequestOptions</li> <li> <p>ServerConfig</p> </li> <li> <p>JsonFormat</p> </li> <li> <p>ResponseStatus</p> </li> <li> <p>Common</p> </li> </ul> </li> <li> <p>services/debug/v1/debug.proto</p> <ul> <li>Debugging</li> </ul> </li> <li> <p>services/provider/v1/provider.proto</p> <ul> <li>InvitationStatusRequest</li> <li>InvitationStatusResponse</li> <li>InviteRequest</li> <li>InviteRequest.DidCommInvitation</li> <li> <p>InviteResponse</p> </li> <li> <p>InvitationStatusResponse.Status</p> </li> <li> <p>ParticipantType</p> </li> <li> <p>Provider</p> </li> </ul> </li> <li> <p>services/trust-registry/v1/trust-registry.proto</p> <ul> <li>AddFrameworkRequest</li> <li>AddFrameworkResponse</li> <li>CheckIssuerStatusRequest</li> <li>CheckIssuerStatusResponse</li> <li>CheckVerifierStatusRequest</li> <li>CheckVerifierStatusResponse</li> <li>FetchDataRequest</li> <li>FetchDataResponse</li> <li>GovernanceFramework</li> <li>RegisterIssuerRequest</li> <li>RegisterIssuerResponse</li> <li>RegisterVerifierRequest</li> <li>RegisterVerifierResponse</li> <li>RemoveFrameworkRequest</li> <li>RemoveFrameworkResponse</li> <li>SearchRegistryRequest</li> <li>SearchRegistryResponse</li> <li>UnregisterIssuerRequest</li> <li>UnregisterIssuerResponse</li> <li>UnregisterVerifierRequest</li> <li> <p>UnregisterVerifierResponse</p> </li> <li> <p>RegistrationStatus</p> </li> <li> <p>TrustRegistry</p> </li> </ul> </li> <li> <p>services/universal-wallet/v1/universal-wallet.proto</p> <ul> <li>DeleteItemRequest</li> <li>DeleteItemResponse</li> <li>InsertItemRequest</li> <li>InsertItemResponse</li> <li>SearchRequest</li> <li> <p>SearchResponse</p> </li> <li> <p>UniversalWallet</p> </li> </ul> </li> <li> <p>services/verifiable-credentials/templates/v1/templates.proto</p> <ul> <li>CreateCredentialTemplateRequest</li> <li>CreateCredentialTemplateResponse</li> <li>CredentialTemplate</li> <li>DeleteCredentialTemplateRequest</li> <li>DeleteCredentialTemplateResponse</li> <li>GetCredentialTemplateRequest</li> <li>GetCredentialTemplateResponse</li> <li>SearchCredentialTemplatesRequest</li> <li>SearchCredentialTemplatesResponse</li> <li>UpdateCredentialTemplateRequest</li> <li> <p>UpdateCredentialTemplateResponse</p> </li> <li> <p>CredentialTemplates</p> </li> </ul> </li> <li> <p>services/verifiable-credentials/v1/verifiable-credentials.proto</p> <ul> <li>CreateProofRequest</li> <li>CreateProofResponse</li> <li>IssueFromTemplateRequest</li> <li>IssueRequest</li> <li>IssueResponse</li> <li>SendRequest</li> <li>SendResponse</li> <li>VerifyProofRequest</li> <li> <p>VerifyProofResponse</p> </li> <li> <p>VerifiableCredential</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>","title":"Table of Contents"},{"location":"reference/proto/#pbmsev1pbmseproto","text":"<p></p>","title":"pbmse/v1/pbmse.proto"},{"location":"reference/proto/#encryptedmessage","text":"Field Type Label Description     iv bytes     aad bytes     ciphertext bytes     tag bytes     recipients EncryptionRecipient repeated     <p></p>","title":"EncryptedMessage"},{"location":"reference/proto/#encryptionheader","text":"Field Type Label Description     mode EncryptionMode     algorithm EncryptionAlgorithm     key_id string     sender_key_id string      <p></p>","title":"EncryptionHeader"},{"location":"reference/proto/#encryptionrecipient","text":"Field Type Label Description     header EncryptionHeader     content_encryption_key bytes      <p></p>","title":"EncryptionRecipient"},{"location":"reference/proto/#signature","text":"Field Type Label Description     header bytes     signature bytes      <p></p>","title":"Signature"},{"location":"reference/proto/#signatureheader","text":"Field Type Label Description     algorithm string     key_id string      <p></p>","title":"SignatureHeader"},{"location":"reference/proto/#signedmessage","text":"<p>JWS Protocol buffer message signing and encryption</p>    Field Type Label Description     payload bytes     signatures Signature repeated     <p></p>","title":"SignedMessage"},{"location":"reference/proto/#encryptionalgorithm","text":"Name Number Description     ENCRYPTION_ALGORITHM_UNSPECIFIED 0    ENCRYPTION_ALGORITHM_XCHACHA20POLY1305 1    ENCRYPTION_ALGORITHM_AES_GCM 2     <p></p>","title":"EncryptionAlgorithm"},{"location":"reference/proto/#encryptionmode","text":"Name Number Description     ENCRYPTION_MODE_UNSPECIFIED 0    ENCRYPTION_MODE_DIRECT 1    ENCRYPTION_MODE_CONTENT_ENCRYPTION_KEY 2     <p></p> <p>Top</p>","title":"EncryptionMode"},{"location":"reference/proto/#servicesaccountv1accountproto","text":"<p></p>","title":"services/account/v1/account.proto"},{"location":"reference/proto/#accountdetails","text":"<p>Account Registration Details</p>    Field Type Label Description     name string  Account name (optional)   email string  Email account (required)   sms string  SMS number including country code (optional)    <p></p>","title":"AccountDetails"},{"location":"reference/proto/#accountprofile","text":"<p>Device profile containing sensitive authentication data. This information should be stored securely</p>    Field Type Label Description     profile_type string  The type of profile, used to differentiate between protocol schemes or versions   auth_data bytes  Auth data containg information about the current device access   auth_token bytes  Secure token issued by server used to generate zero-knowledge proofs   protection TokenProtection  Token security information about the token. If token protection is enabled, implementations must supply protection secret before using the token for authentication.    <p></p>","title":"AccountProfile"},{"location":"reference/proto/#inforequest","text":"<p></p>","title":"InfoRequest"},{"location":"reference/proto/#inforesponse","text":"Field Type Label Description     details AccountDetails  The account details associated with the calling request context    <p></p>","title":"InfoResponse"},{"location":"reference/proto/#listdevicesrequest","text":"<p></p>","title":"ListDevicesRequest"},{"location":"reference/proto/#listdevicesresponse","text":"<p></p>","title":"ListDevicesResponse"},{"location":"reference/proto/#revokedevicerequest","text":"<p></p>","title":"RevokeDeviceRequest"},{"location":"reference/proto/#revokedeviceresponse","text":"<p></p>","title":"RevokeDeviceResponse"},{"location":"reference/proto/#signinrequest","text":"<p>Request for creating new account</p>    Field Type Label Description     details AccountDetails  Account registration details   invitation_code string  Invitation code associated with this registration This field is optional.    <p></p>","title":"SignInRequest"},{"location":"reference/proto/#signinresponse","text":"<p>Response for creating new account This object will indicate if a confirmation code was sent to one of the users two-factor methods like email, SMS, etc.</p>    Field Type Label Description     status services.common.v1.ResponseStatus  The status of the response   confirmation_method ConfirmationMethod  Indicates if confirmation of account is required. This settings is configured globally by the server administrator.   profile AccountProfile  Contains authentication data for use with the current device. This object must be stored in a secure place. It can also be protected with a PIN, but this is optional. See the docs at https://docs.trinsic.id for more information on working with authentication data.    <p></p>","title":"SignInResponse"},{"location":"reference/proto/#tokenprotection","text":"<p>Token protection info</p>    Field Type Label Description     enabled bool  Indicates if token is protected using a PIN, security code, HSM secret, etc.   method ConfirmationMethod  The method used to protect the token    <p></p>","title":"TokenProtection"},{"location":"reference/proto/#confirmationmethod","text":"<p>Confirmation method type for two-factor workflows</p>    Name Number Description     None 0 No confirmation required   Email 1 Email confirmation required   Sms 2 SMS confirmation required   ConnectedDevice 3 Confirmation from a connected device is required   Other 10 Indicates third-party method of confirmation is required    <p></p>","title":"ConfirmationMethod"},{"location":"reference/proto/#account","text":"Method Name Request Type Response Type Description     SignIn SignInRequest SignInResponse Sign in to an already existing account    <p>rpc SIgnInConfirm (SignInConfirmRequest) returns (SignInConfirmResponse); | | Info | InfoRequest | InfoResponse | Get account information | | ListDevices | ListDevicesRequest | ListDevicesResponse | List all connected devices | | RevokeDevice | RevokeDeviceRequest | RevokeDeviceResponse | Revoke device access to the account's cloud wallet |</p> <p></p> <p>Top</p>","title":"Account"},{"location":"reference/proto/#servicescommonv1commonproto","text":"<p></p>","title":"services/common/v1/common.proto"},{"location":"reference/proto/#jsonpayload","text":"Field Type Label Description     json_struct google.protobuf.Struct     json_string string     json_bytes bytes      <p></p>","title":"JsonPayload"},{"location":"reference/proto/#nonce","text":"<p>Nonce used to generate an oberon proof</p>    Field Type Label Description     timestamp int64  UTC unix millisecond timestamp the request was made   request_hash bytes  blake3256 hash of the request body    <p></p>","title":"Nonce"},{"location":"reference/proto/#requestoptions","text":"Field Type Label Description     response_json_format JsonFormat      <p></p>","title":"RequestOptions"},{"location":"reference/proto/#serverconfig","text":"Field Type Label Description     endpoint string  service endpoint   port int32  service port   use_tls bool  indicates if tls is used    <p></p>","title":"ServerConfig"},{"location":"reference/proto/#jsonformat","text":"Name Number Description     Protobuf 0    Binary 1    String 2     <p></p>","title":"JsonFormat"},{"location":"reference/proto/#responsestatus","text":"Name Number Description     SUCCESS 0    WALLET_ACCESS_DENIED 10    WALLET_EXISTS 11    ITEM_NOT_FOUND 20    SERIALIZATION_ERROR 200    UNKNOWN_ERROR 100     <p></p>","title":"ResponseStatus"},{"location":"reference/proto/#common","text":"Method Name Request Type Response Type Description     Request .pbmse.v1.EncryptedMessage .pbmse.v1.EncryptedMessage     <p></p> <p>Top</p>","title":"Common"},{"location":"reference/proto/#servicesdebugv1debugproto","text":"<p></p>","title":"services/debug/v1/debug.proto"},{"location":"reference/proto/#debugging","text":"Method Name Request Type Response Type Description     CallEmpty .google.protobuf.Empty .google.protobuf.Empty    CallEmptyAuth .google.protobuf.Empty .google.protobuf.Empty     <p></p> <p>Top</p>","title":"Debugging"},{"location":"reference/proto/#servicesproviderv1providerproto","text":"<p></p>","title":"services/provider/v1/provider.proto"},{"location":"reference/proto/#invitationstatusrequest","text":"<p>Request details for the status of onboarding an individual or organization. The referenece_id passed is the response from the <code>Onboard</code> method call</p>    Field Type Label Description     invitation_id string      <p></p>","title":"InvitationStatusRequest"},{"location":"reference/proto/#invitationstatusresponse","text":"Field Type Label Description     status InvitationStatusResponse.Status     status_details string      <p></p>","title":"InvitationStatusResponse"},{"location":"reference/proto/#inviterequest","text":"Field Type Label Description     participant ParticipantType     description string     email string     phone string     didcomm_invitation InviteRequest.DidCommInvitation      <p></p>","title":"InviteRequest"},{"location":"reference/proto/#inviterequestdidcomminvitation","text":"<p></p>","title":"InviteRequest.DidCommInvitation"},{"location":"reference/proto/#inviteresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus     invitation_id string      <p></p>","title":"InviteResponse"},{"location":"reference/proto/#invitationstatusresponsestatus","text":"Name Number Description     Error 0 Onboarding resulted in error   InvitationSent 1 The participant has been invited   Completed 2 The participant has been onboarded    <p></p>","title":"InvitationStatusResponse.Status"},{"location":"reference/proto/#participanttype","text":"Name Number Description     participant_type_individual 0    participant_type_organization 1     <p></p>","title":"ParticipantType"},{"location":"reference/proto/#provider","text":"Method Name Request Type Response Type Description     Invite InviteRequest InviteResponse rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);   InviteWithWorkflow InviteRequest InviteResponse    InvitationStatus InvitationStatusRequest InvitationStatusResponse     <p></p> <p>Top</p>","title":"Provider"},{"location":"reference/proto/#servicestrust-registryv1trust-registryproto","text":"<p></p>","title":"services/trust-registry/v1/trust-registry.proto"},{"location":"reference/proto/#addframeworkrequest","text":"Field Type Label Description     governance_framework GovernanceFramework      <p></p>","title":"AddFrameworkRequest"},{"location":"reference/proto/#addframeworkresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus      <p></p>","title":"AddFrameworkResponse"},{"location":"reference/proto/#checkissuerstatusrequest","text":"Field Type Label Description     governance_framework_uri string     did_uri string     x509_cert string     credential_type_uri string      <p></p>","title":"CheckIssuerStatusRequest"},{"location":"reference/proto/#checkissuerstatusresponse","text":"Field Type Label Description     governance_framework_uri string     status RegistrationStatus      <p></p>","title":"CheckIssuerStatusResponse"},{"location":"reference/proto/#checkverifierstatusrequest","text":"Field Type Label Description     governance_framework_uri string     did_uri string     x509_cert string     presentation_type_uri string      <p></p>","title":"CheckVerifierStatusRequest"},{"location":"reference/proto/#checkverifierstatusresponse","text":"Field Type Label Description     governance_framework_uri string     status RegistrationStatus      <p></p>","title":"CheckVerifierStatusResponse"},{"location":"reference/proto/#fetchdatarequest","text":"Field Type Label Description     governance_framework_uri string     query string      <p></p>","title":"FetchDataRequest"},{"location":"reference/proto/#fetchdataresponse","text":"Field Type Label Description     response services.common.v1.JsonPayload      <p></p>","title":"FetchDataResponse"},{"location":"reference/proto/#governanceframework","text":"Field Type Label Description     governance_framework_uri string     trust_registry_uri string     description string      <p></p>","title":"GovernanceFramework"},{"location":"reference/proto/#registerissuerrequest","text":"Field Type Label Description     did_uri string     x509_cert string     credential_type_uri string     valid_from_utc uint64     valid_until_utc uint64     governance_framework_uri string     options services.common.v1.RequestOptions      <p></p>","title":"RegisterIssuerRequest"},{"location":"reference/proto/#registerissuerresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus     response_data services.common.v1.JsonPayload      <p></p>","title":"RegisterIssuerResponse"},{"location":"reference/proto/#registerverifierrequest","text":"Field Type Label Description     did_uri string     x509_cert string     presentation_type_uri string     valid_from_utc uint64     valid_until_utc uint64     governance_framework_uri string     options services.common.v1.RequestOptions      <p></p>","title":"RegisterVerifierRequest"},{"location":"reference/proto/#registerverifierresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus     response_data services.common.v1.JsonPayload      <p></p>","title":"RegisterVerifierResponse"},{"location":"reference/proto/#removeframeworkrequest","text":"Field Type Label Description     governance_framework GovernanceFramework      <p></p>","title":"RemoveFrameworkRequest"},{"location":"reference/proto/#removeframeworkresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus      <p></p>","title":"RemoveFrameworkResponse"},{"location":"reference/proto/#searchregistryrequest","text":"Field Type Label Description     query string  SELECT c from c where c.type == 'GovernanceFramework'   continuation_token string     options services.common.v1.RequestOptions      <p></p>","title":"SearchRegistryRequest"},{"location":"reference/proto/#searchregistryresponse","text":"Field Type Label Description     items services.common.v1.JsonPayload repeated    has_more bool     count int32     continuation_token string      <p></p>","title":"SearchRegistryResponse"},{"location":"reference/proto/#unregisterissuerrequest","text":"Field Type Label Description     did_uri string     x509_cert string     credential_type_uri string     governance_framework_uri string      <p></p>","title":"UnregisterIssuerRequest"},{"location":"reference/proto/#unregisterissuerresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus      <p></p>","title":"UnregisterIssuerResponse"},{"location":"reference/proto/#unregisterverifierrequest","text":"Field Type Label Description     did_uri string     x509_cert string     presentation_type_uri string     governance_framework_uri string      <p></p>","title":"UnregisterVerifierRequest"},{"location":"reference/proto/#unregisterverifierresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus      <p></p>","title":"UnregisterVerifierResponse"},{"location":"reference/proto/#registrationstatus","text":"Name Number Description     CURRENT 0 - the entity is currently authorized, as of time of the query.   EXPIRED 1 - entity rights have expired.   TERMINATED 2 - entity has voluntarily ceased Issuer role under the specific EGF.   REVOKED 3 - entity authority under specific EGF was terminated by the governing authority.   NOT_FOUND 10     <p></p>","title":"RegistrationStatus"},{"location":"reference/proto/#trustregistry","text":"Method Name Request Type Response Type Description     AddFramework AddFrameworkRequest AddFrameworkResponse Adds a trust registry defintion to the ecosystem   RemoveFramework RemoveFrameworkRequest RemoveFrameworkResponse    SearchRegistry SearchRegistryRequest SearchRegistryResponse    RegisterIssuer RegisterIssuerRequest RegisterIssuerResponse Registers an authoritative issuer with a credential template   RegisterVerifier RegisterVerifierRequest RegisterVerifierResponse Registers an authoritative verifier with a credential template   UnregisterIssuer UnregisterIssuerRequest UnregisterIssuerResponse Removes an authoritative issuer with a credential template from the trust registry   UnregisterVerifier UnregisterVerifierRequest UnregisterVerifierResponse Removes an authoritative verifier with a presentation template from the trust registry   CheckIssuerStatus CheckIssuerStatusRequest CheckIssuerStatusResponse    CheckVerifierStatus CheckVerifierStatusRequest CheckVerifierStatusResponse    FetchData FetchDataRequest FetchDataResponse stream     <p></p> <p>Top</p>","title":"TrustRegistry"},{"location":"reference/proto/#servicesuniversal-walletv1universal-walletproto","text":"<p></p>","title":"services/universal-wallet/v1/universal-wallet.proto"},{"location":"reference/proto/#deleteitemrequest","text":"<p>Delete item request</p> <p></p>","title":"DeleteItemRequest"},{"location":"reference/proto/#deleteitemresponse","text":"<p></p>","title":"DeleteItemResponse"},{"location":"reference/proto/#insertitemrequest","text":"<p>Insert item request</p>    Field Type Label Description     item services.common.v1.JsonPayload     item_type string      <p></p>","title":"InsertItemRequest"},{"location":"reference/proto/#insertitemresponse","text":"<p>Insert item response</p>    Field Type Label Description     status services.common.v1.ResponseStatus     item_id string  The item identifier of the inserted record    <p></p>","title":"InsertItemResponse"},{"location":"reference/proto/#searchrequest","text":"<p>Search request object</p>    Field Type Label Description     query string     continuation_token string     options services.common.v1.RequestOptions      <p></p>","title":"SearchRequest"},{"location":"reference/proto/#searchresponse","text":"<p>Search response object</p>    Field Type Label Description     items services.common.v1.JsonPayload repeated    has_more bool     count int32     continuation_token string      <p></p>","title":"SearchResponse"},{"location":"reference/proto/#universalwallet","text":"Method Name Request Type Response Type Description     Search SearchRequest SearchResponse Search the wallet using a SQL-like syntax   InsertItem InsertItemRequest InsertItemResponse Insert an item into the wallet   Deleteitem DeleteItemRequest DeleteItemResponse Delete an item from the wallet permanently    <p></p> <p>Top</p>","title":"UniversalWallet"},{"location":"reference/proto/#servicesverifiable-credentialstemplatesv1templatesproto","text":"<p></p>","title":"services/verifiable-credentials/templates/v1/templates.proto"},{"location":"reference/proto/#createcredentialtemplaterequest","text":"Field Type Label Description     name string     schema services.common.v1.JsonPayload     base_uri string      <p></p>","title":"CreateCredentialTemplateRequest"},{"location":"reference/proto/#createcredentialtemplateresponse","text":"Field Type Label Description     id string     uri string      <p></p>","title":"CreateCredentialTemplateResponse"},{"location":"reference/proto/#credentialtemplate","text":"Field Type Label Description     id string     name string     version string     schema services.common.v1.JsonPayload     uri string      <p></p>","title":"CredentialTemplate"},{"location":"reference/proto/#deletecredentialtemplaterequest","text":"Field Type Label Description     id string      <p></p>","title":"DeleteCredentialTemplateRequest"},{"location":"reference/proto/#deletecredentialtemplateresponse","text":"<p></p>","title":"DeleteCredentialTemplateResponse"},{"location":"reference/proto/#getcredentialtemplaterequest","text":"Field Type Label Description     id string      <p></p>","title":"GetCredentialTemplateRequest"},{"location":"reference/proto/#getcredentialtemplateresponse","text":"Field Type Label Description     template CredentialTemplate      <p></p>","title":"GetCredentialTemplateResponse"},{"location":"reference/proto/#searchcredentialtemplatesrequest","text":"Field Type Label Description     query string  SELECT * FROM c WHERE c.name = 'Diploma'   continuation_token string      <p></p>","title":"SearchCredentialTemplatesRequest"},{"location":"reference/proto/#searchcredentialtemplatesresponse","text":"Field Type Label Description     templates CredentialTemplate repeated    has_more bool     count int32     continuation_token string      <p></p>","title":"SearchCredentialTemplatesResponse"},{"location":"reference/proto/#updatecredentialtemplaterequest","text":"Field Type Label Description     id string     name string     schema services.common.v1.JsonPayload      <p></p>","title":"UpdateCredentialTemplateRequest"},{"location":"reference/proto/#updatecredentialtemplateresponse","text":"Field Type Label Description     template CredentialTemplate      <p></p>","title":"UpdateCredentialTemplateResponse"},{"location":"reference/proto/#credentialtemplates","text":"Method Name Request Type Response Type Description     Create CreateCredentialTemplateRequest CreateCredentialTemplateResponse    Get GetCredentialTemplateRequest GetCredentialTemplateResponse    Search SearchCredentialTemplatesRequest SearchCredentialTemplatesResponse    Update UpdateCredentialTemplateRequest UpdateCredentialTemplateResponse    Delete DeleteCredentialTemplateRequest DeleteCredentialTemplateResponse     <p></p> <p>Top</p>","title":"CredentialTemplates"},{"location":"reference/proto/#servicesverifiable-credentialsv1verifiable-credentialsproto","text":"<p></p>","title":"services/verifiable-credentials/v1/verifiable-credentials.proto"},{"location":"reference/proto/#createproofrequest","text":"<p>Create Proof</p>    Field Type Label Description     reveal_document services.common.v1.JsonPayload     document_id string      <p></p>","title":"CreateProofRequest"},{"location":"reference/proto/#createproofresponse","text":"Field Type Label Description     proof_document services.common.v1.JsonPayload      <p></p>","title":"CreateProofResponse"},{"location":"reference/proto/#issuefromtemplaterequest","text":"Field Type Label Description     templateId string     attributes services.common.v1.JsonPayload      <p></p>","title":"IssueFromTemplateRequest"},{"location":"reference/proto/#issuerequest","text":"Field Type Label Description     document services.common.v1.JsonPayload      <p></p>","title":"IssueRequest"},{"location":"reference/proto/#issueresponse","text":"Field Type Label Description     document services.common.v1.JsonPayload      <p></p>","title":"IssueResponse"},{"location":"reference/proto/#sendrequest","text":"Field Type Label Description     email string     did_uri string     didcomm_invitation services.common.v1.JsonPayload     document services.common.v1.JsonPayload      <p></p>","title":"SendRequest"},{"location":"reference/proto/#sendresponse","text":"Field Type Label Description     status services.common.v1.ResponseStatus      <p></p>","title":"SendResponse"},{"location":"reference/proto/#verifyproofrequest","text":"<p>Verify Proof</p>    Field Type Label Description     proof_document services.common.v1.JsonPayload      <p></p>","title":"VerifyProofRequest"},{"location":"reference/proto/#verifyproofresponse","text":"Field Type Label Description     valid bool      <p></p>","title":"VerifyProofResponse"},{"location":"reference/proto/#verifiablecredential","text":"Method Name Request Type Response Type Description     Issue IssueRequest IssueResponse    IssueFromTemplate IssueFromTemplateRequest IssueResponse    CreateProof CreateProofRequest CreateProofResponse    VerifyProof VerifyProofRequest VerifyProofResponse    Send SendRequest SendResponse","title":"VerifiableCredential"},{"location":"reference/proto/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby      double  double double float float64 double float Float    float  float float float float32 float float Float    int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)    int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum    uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)    uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)    sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)    sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum    fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)    fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum    sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)    sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum    bool  bool boolean boolean bool bool boolean TrueClass/FalseClass    string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)    bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"reference/services/provider-service/","text":"<p>This service helps ecosystem providers with data management and onboarding. This service requires a security profile with administrative authorization access. This can be obtained during the deployment of your ecosystem infrastructure.</p>","title":"Provider Service"},{"location":"reference/services/provider-service/#onboarding","text":"","title":"Onboarding"},{"location":"reference/services/provider-service/#invite-participants","text":"<p>Users can be onboarded as participants in the ecosystem by sending an invitation and a security code. This code can be sent directly through them using existing platforms or via email, SMS, etc. When users accept this invitation, they should do so using the service methods as described in creating wallet with provider invitation</p> <p>In Trinsic Ecosystems, participants can be Individuals or Organizations. This distinction is important, as providers have the ability to apply restrictions on what functionalities can be invoked by these participants. Additionally, Organizations have the ability to write their DID Document to a public ledger. Currently, the supported ledger is Sovrin, with ION and Element still in development.</p> Trinsic CLI <pre><code>trinsic provider invite --organization --method-email admin@faber.edu\n\ntrinsic provider invite --person --method-email alice@faber.edu</code></pre>  TypeScript <pre><code>import { ProviderService, ParticipantType } from \"@trinsic/trinsic\";\n\nconst providerService = new ProviderService();\n\nlet inviteRequest = new InviteRequest();\ninviteRequest.setParticipant(ParticipantType.PARTICIPANT_TYPE_ORGANIZATION);\ninviteRequest.setEmail(\"admin@faber.edu\");\n\nconst inviteResponse = await providerService.inviteParticipant(inviteRequest);\n\nconsole.log(inviteResponse.getInvitationId());</code></pre>  C# <pre><code>using Trinsic;\n\nvar providerService = new ProviderService();\n\nvar inviteRequest = new InviteRequest\n{\n    ParticipantType = ParticipantType.Organization,\n    Email = \"admin@faber.edu\"\n}\n\nlet inviteResponse = await providerService.InviteParticipant(inviteRequest);\n\nConsole.WriteLine(inviteResponse.InvitationId);</code></pre>  Python <pre><code>from trinsic.services import ProviderService\n\nrequest = {\n    \"email\" : \"admin@faber.edu\",\n    \"participant\" : provider_services.Organization\n} \nresponse = await provider_service.invite_participant(request)</code></pre>   <p>The <code>invitationId</code> in the response contains the security code that users must supply when creating their wallet. If using email method in onboarding, they will receive this code in their email.</p>","title":"Invite Participants"},{"location":"reference/services/provider-service/#check-invitation-status","text":"<p>User invitation status can be checked with the provided <code>invitation id</code>. It returns an <code>InvitationStatusResponse</code> object. TODO: Link to protobuf.</p> Trinsic CLI <pre><code>TODO</code></pre>  TypeScript <pre><code>import { ProviderService, ParticipantType } from \"@trinsic/trinsic\";\n\nconst providerService = new ProviderService();\n\nconst inviteResponse = await providerService.invitationStatus(\"INVITATION ID\");\n\nconsole.log(inviteResponse.getInvitationId());</code></pre>  C# <pre><code>using Trinsic;\n\nvar providerService = new ProviderService();\n\nlet invitationStatus = await providerService.InvitationStatus(\"INVITATION ID\");</code></pre>  Python <pre><code>from trinsic.services import ProviderService\n\nresponse = await provider_service.invitation_status(invitation_id=\"INVITATION ID\")</code></pre>   <p>The <code>invitationId</code> in the response contains the security code that users must supply when creating their wallet. If using email method in onboarding, they will receive this code in their email.</p>","title":"Check Invitation Status"},{"location":"reference/services/provider-service/#credential-templates","text":"<p>Credential Templates are json templates that help issuers save context when issuing credentials. </p> <p>When issuing a credential through Trinsic, it's as simple as adding the attributes to the credential template and then issuing it. </p> <p>These credential templates can be shared between issuers in an ecosystem. </p> <p>A template is a saved JSON-LD schema that is used to define/create credentials and verification. </p>","title":"Credential Templates"},{"location":"reference/services/provider-service/#get","text":"Trinsic CLI <pre><code></code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Get"},{"location":"reference/services/provider-service/#search","text":"Trinsic CLI <pre><code></code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Search"},{"location":"reference/services/provider-service/#update","text":"Trinsic CLI <pre><code></code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Update"},{"location":"reference/services/provider-service/#delete","text":"Trinsic CLI <pre><code></code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>","title":"Delete"},{"location":"reference/services/trust-registry/","text":"<p>In many real-world credential exchange scenarios, a credential holder or verifier has the question \u201cHow do I know the issuer of this credential is trustworthy?\u201d</p> <p>Credential holders may also be uneasy about sharing information with a verifier if trust in the verifier has not been established.</p> <p>These problems can be solved by having a trusted third party vouch for the trustworthiness of a credential exchange participant.</p> <p>A trust registry is a list of authorized issuers and verifiers in the ecosystem and the types of credentials and passes they are authorized to issue and verify.</p> <p></p>","title":"Trust Registry"},{"location":"reference/services/trust-registry/#specification","text":"<p>The Trust over IP Foundation has a specification for a interoperable trust registry.  This defined an API interface so that trust registries can be queried in the same way.  Our implementation is based off of this trust registry spec.</p>","title":"Specification"},{"location":"reference/services/trust-registry/#api-reference","text":"","title":"API Reference"},{"location":"reference/services/trust-registry/#create-a-ecosystem-governance-framework","text":"<p>An ecosystem governance framework is useful because it provides a good basis for verifying issuers and verifiers. It's a json-ld document that lists the issuers and verifiers. These issuers and verifiers are identified by a decentralized identifier. The governance framework is signified by an identifier as well. This can be used to represent the governance framework outside in the credential that it comes in. </p> Trinsic CLI <pre><code>trinsic trust-registry register-efg</code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Create a Ecosystem Governance Framework"},{"location":"reference/services/trust-registry/#register-issuers-and-verifiers","text":"<p>Each entity on the governance framework, whether an issuer or a verifier, is represented by a decentralized identifier. These entities are registered to either issue or verify specific credential types. A credential type is represented as a fully qualified <code>type</code> URI, of the kind found in a JSON-LD Verifiable Credential. Finally, each entity must be registered on a specific governance framework. </p> Trinsic CLI <pre><code>trinsic trust-registry register-issuer \\\n    --egf http://hl7.org/fhir \\\n    --credential-type https://w3id.org/vaccination#VaccinationCertificate \\\n    --did did:example:fabre</code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Register Issuers and Verifiers"},{"location":"reference/services/trust-registry/#unregister-issuers-and-verifiers","text":"<p>To unregister an entity, include the credential type, the did, and the ecosystem governance framework. The credential type will be unregistered from that issuer.</p> Trinsic CLI <pre><code>trinsic trust-registry unregister-issuer \\\n    --egf http://hl7.org/fhir \\\n    --credential-type https://w3id.org/vaccination#VaccinationCertificate \\\n    --did did:example:fabre</code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Unregister Issuers and Verifiers"},{"location":"reference/services/trust-registry/#check-authoritative-status","text":"<p>Check the status of an issuer for a credential type within a given governance framework. Returns all historical data for the given input parameter.</p> Trinsic CLI <pre><code>trinsic trust-registry check-issuer \\\n    --egf http://hl7.org/fhir \\\n    --credential-type https://w3id.org/vaccination#VaccinationCertificate \\\n    --did did:example:fabre</code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Check Authoritative Status"},{"location":"reference/services/trust-registry/#search","text":"<p>Search the registry for authoritative issuer and verifiers using a custom query in a SQL format.</p> Trinsic CLI <pre><code>trinsic trust-registry search --query &lt;SQL query&gt;</code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Search"},{"location":"reference/services/trust-registry/#cache-offline-registry-file","text":"Trinsic CLI <pre><code>trinsic trust-registry download </code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Cache Offline Registry File"},{"location":"reference/services/wallet-service/","text":"<p>The wallet service is the main interface for interacting with a cloud wallet. The service endpoints are designed to closely match the recommendations of the Universal Wallet 2020  specification by W3C Community Credentials Group. The service exposes a gRPC interface and a set of data contracts as described in the specification. Our intention with this design is to bring it closer to interoperability as more implementations of this wallet appear in production.</p>","title":"Wallet Service"},{"location":"reference/services/wallet-service/#create-wallet","text":"<p>Wallets can be created directly by the user or through an invitation by the ecosystem provider. Depending on the ecosystem settings, direct wallet creation may not be enabled for your provider.</p>","title":"Create Wallet"},{"location":"reference/services/wallet-service/#create-wallet-directly","text":"<p>To create a wallet directly without an invitation, use the following methods. These methods return secure profile data that should be stored in a safe place. The profile is used to authenticate the wallet service with the cloud provider. Read more details and recommendations in the Security Profiles page.</p> Trinsic CLI <pre><code>trinsic wallet create --name &lt;profile_name&gt;</code></pre>  TypeScript <pre><code>const profile = await walletService.createWallet();</code></pre>  C# <pre><code>var profile = await walletService.Create();</code></pre>  Python <pre><code>profile = await wallet_service.create_wallet()</code></pre>","title":"Create wallet directly"},{"location":"reference/services/wallet-service/#create-wallet-with-provider-invitation","text":"<p>If invited by a provider, you can supply the security code found in your invitation (via email, SMS, etc). Read more about inviting participants to your ecosystem as provider.</p> Trinsic CLI <pre><code>trinsic wallet create --name &lt;profile&gt; --security-code &lt;code&gt;</code></pre>  TypeScript <pre><code>const profile = await walletService.createWallet(\"&lt;security code&gt;\");</code></pre>  C# <pre><code>var profile = await walletService.Create(\"&lt;security code&gt;\");</code></pre>  Python <pre><code>profile = await wallet_service.create_wallet(\"&lt;security code&gt;\")</code></pre>","title":"Create wallet with provider invitation"},{"location":"reference/services/wallet-service/#insert-record","text":"<p>This method allows inserting any JSON data in the wallet.</p> Trinsic CLI <pre><code>trinsic wallet insert-item --item &lt;INPUT_JSON_FILE&gt;</code></pre>  TypeScript <pre><code>let itemId = await walletService.insertItem({\n    \"foo\": \"bar\"\n});</code></pre>  C# <pre><code>var item = new JObject\n{\n    { \"foo\", \"bar\" }\n};\n\nvar itemId = await walletService.InsertItem(item);</code></pre>  Python <pre><code>item_id = await wallet_service.insert_item(credential)</code></pre>   <p>The output of this method will be a unique <code>itemId</code> that can be used as input where required.</p>","title":"Insert Record"},{"location":"reference/services/wallet-service/#search-query","text":"<p>Querying wallet data in our SDK is enabled through the use of familiar SQL syntax. All data is stored in JSON-LD format, so it can be easily searched. This apporach allows us to give developers full control over how data is retrieved. In addition to customizable sorting, paging and filtering, developers have the ability to construct projections, combine result sets, and even run user-defined functions over their queries.</p>  <p>This endpoint will support querying using Verifiable Presentation Request Spec . This feature is still in development.</p>","title":"Search / Query"},{"location":"reference/services/wallet-service/#basic-search","text":"<p>The default query used in the commands below returns a full wallet result set. The query is <code>SELECT * FROM c</code>.</p> Trinsic CLI <pre><code>trinsic wallet search</code></pre>  TypeScript <pre><code>const items = await walletService.Search();</code></pre>  C# <pre><code>var items = await walletService.Search();</code></pre>  Python <pre><code>item = await wallet_service.search()</code></pre>","title":"Basic Search"},{"location":"reference/services/wallet-service/#sql-search","text":"<p>To pass custom query to the search function, use the query parameter or the available overload.</p> Trinsic CLI <pre><code>trinsic wallet search \\\n    --query \"SELECT * FROM c WHERE c.type = 'VerifiableCredential'\"</code></pre>  TypeScript <pre><code>const query = \"SELECT * FROM c WHERE c.type = 'VerifiableCredential'\";\n\nconst items = await walletService.search(query);</code></pre>  C# <pre><code>var items = await walletService.Search(\"SELECT * FROM c WHERE c.type = 'VerifiableCredential'\");</code></pre>  Python <pre><code>query = \"SELECT * FROM c WHERE c.type = 'VerifiableCredential'\"\nitem = await wallet_service.search(query)</code></pre>","title":"SQL Search"},{"location":"reference/services/wallet-service/#common-sql-queries","text":"","title":"Common SQL Queries"},{"location":"reference/services/wallet-service/#paging","text":"<p>Paging uses the <code>OFFSET</code> clause that takes in a value indicating how many records should be skipped in the returned query. To specify the size of the result set (page size) use the <code>LIMIT</code> clause.</p> <pre><code>SELECT * FROM c OFFSET 10 LIMIT 5</code></pre>","title":"Paging"},{"location":"reference/services/wallet-service/#sorting","text":"<p>The optional <code>ORDER BY</code> clause specifies the sorting order for results returned by the query. To control sorting order, specify <code>ASC</code> or <code>DESC</code> at the end; if not specified ascending order is used by default.</p> <pre><code>SELECT * FROM c ORDER BY c.credential.issued DESC</code></pre>","title":"Sorting"},{"location":"reference/services/wallet-service/#filtering","text":"<p>The optional WHERE clause (<code>WHERE &lt;filter_condition&gt;</code>) specifies condition(s) that the source JSON items must satisfy for the query to include them in results. A JSON item must evaluate the specified conditions to true to be considered for the result. The index layer uses the <code>WHERE</code> clause to determine the smallest subset of source items that can be part of the result.</p> <pre><code>SELECT * FROM c WHERE c.name = 'Trinsic' AND c.dateCreated &gt;= \"2020-09-30T23:14:25.7251173Z\"</code></pre>","title":"Filtering"},{"location":"reference/services/wallet-service/#grouping","text":"<p>The <code>GROUP BY</code> clause divides the query's results according to the values of one or more specified properties. Examples and detailed description on working with grouped results can be found here </p>","title":"Grouping"},{"location":"reference/services/wallet-service/#additional-resources","text":"<p>You can read the full documentation on working with SQL queries on the Azure Cosmos DB website .</p>","title":"Additional Resources"},{"location":"reference/services/wallet-service/#issue-credential","text":"<p>The wallet service supports signing data using BBS+ Signatures . The data is signed with a key unique to the owner's wallet. This key is also used as linked secret, when it comes to proof derivation.</p>  <p>This endpoint requires that the user provide a valid JSON-LD document.</p>  Trinsic CLI <pre><code>trinsic issuer issue --document &lt;INPUT_JSONLD_FILE&gt; --out &lt;OUTPUT_FILE&gt;</code></pre>  TypeScript <pre><code>let unsignedDocument = {\n    \"@context\": \"https://w3id.org/security/v2\",\n    \"id\": \"https://issuer.oidp.uscis.gov/credentials/83627465\"\n}\n\nlet signedDocument = await walletService.issue(unsignedDocument);</code></pre>  C# <pre><code>var unsignedDocument = new JObject\n{\n    { \"@context\", \"https://w3id.org/security/v2\" },\n    { \"id\", \"https://issuer.oidp.uscis.gov/credentials/83627465\" }\n};\n\nvar signedDocument = await walletService.IssueCredential(unsignedDocument);</code></pre>  Python <pre><code>import json\ncredential_json = json.dumps({\n  { \"@context\", \"https://w3id.org/security/v2\" },\n  { \"id\", \"https://issuer.oidp.uscis.gov/credentials/83627465\" }\n})\ncredential = await wallet_service.issue_credential(credential_json)</code></pre>   <p>The output of this method will be a signed JSON document using BBS+ Signature Suite 2020. This document is not automatically stored in the wallet when issued. You need to call the insert record separately if you'd like to store a copy of this document.</p>","title":"Issue Credential"},{"location":"reference/services/wallet-service/#issue-credential-from-template","text":"Trinsic CLI <pre><code></code></pre>  TypeScript <pre><code></code></pre>  C# <pre><code></code></pre>  Python <pre><code></code></pre>  Go <pre><code></code></pre>  Java <pre><code></code></pre>  Ruby <pre><code></code></pre>","title":"Issue Credential from Template"},{"location":"reference/services/wallet-service/#create-proof","text":"<p>Wallets allow data to be shared between parties in a secure manner, using a technique called Zero Knowledge Proofs. Trinsic Ecosystems uses the BBS+ Signature Proof scheme to allow data to be selectively disclosed to the requesting party. This allows users to share only the requested subset of data, instead the entire document.</p> <p>The endpoint to create a proof requires two inputs:</p> <ul> <li>document in the wallet that is signed with the correct signature</li> <li>JSONLD frame that describes the data to be disclosed</li> </ul> Trinsic CLI <pre><code>trinsic issuer create-proof --document-id &lt;STRING&gt; --out &lt;OUTPUT_FILE&gt; --reveal-document &lt;JSONLD_FRAME_FILE&gt;</code></pre>  TypeScript <pre><code>let frame = {\n    \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n    \"type\": [ \"VerifiableCredential\" ],\n    \"@explicit\": true,\n    \"issuer\": {}\n}\nlet itemId = \"&lt;item document id&gt;\";\n\nlet signedDocument = await walletService.createProof(itemId, frame);</code></pre>  C# <pre><code>var frame = new JObject\n{\n    { \"@context\", \"https://www.w3.org/2018/credentials/v1\" },\n    { \"@explicit\", true }\n    { \"issuer\", new JObject() }\n};\nvar itemId = \"&lt;item document id&gt;\";\n\nvar signedDocument = await walletService.CreateProof(itemId, frame);</code></pre>  Python <pre><code>import json\nframe_json = json.dumps({\n\"@context\": \"https://www.w3.org/2018/credentials/v1\",\n\"type\": [ \"VerifiableCredential\" ],\n\"@explicit\": true,\n\"issuer\": {}\n})\n\npresentation = wallet_services.create_proof(document_id, frame_json)</code></pre>","title":"Create Proof"},{"location":"reference/services/wallet-service/#verify-proof","text":"<p>This endpoint verifies if the submitted data contains a valid proof. The data to be verified must contain a Linked Data Proof with BBS+ signature scheme.</p> Trinsic CLI <pre><code>trinsic issuer verify-proof --proof-document &lt;JSONLD_FILE&gt;</code></pre>  TypeScript <pre><code>let isValid = await walletService.verifyProof(proofDocument);\n\nconsole.log(\"Verify result: \" + isValid);</code></pre>  C# <pre><code>var isValid = await walletService.VerifyProof(proofDocument);\n\nConsole.WriteLine($\"Verify result: {isValid}\");</code></pre>  Python <pre><code>valid = await wallet_service.verify_proof(presentation)</code></pre>","title":"Verify Proof"},{"location":"reference/services/wallet-service/#data-exchange","text":"<p>Exchanging data securely is one of the fundamental functions of digital identity systems. There are many specifications with varying maturity that aim to provide interoperable and secure way of exchanging authentic data. We are commited to providing support for these methods.</p> <ul> <li>DIDComm Messaging </li> <li>Wallet And Credential Interactions </li> <li>OpenID Connect Credential Provider </li> </ul>  <p>During this beta period, we are only supporting exchanging data between users by using their email addresses. The messages are routed securely to the destination wallet without leaving the secure network of the ecosystem backend. Our goal is to provide basic ability to share data without affecting the user experience. As interoperable exchange methods become available, we will add this functionality in the SDK.</p>","title":"Data Exchange"},{"location":"reference/services/wallet-service/#sending-documents-using-email-as-identifier","text":"<p>To send a document to another user, they must have created a wallet and associated their email address with that wallet.</p> Trinsic CLI <pre><code>trinsic wallet send --email &lt;EMAIL_ADDRESS&gt; --item &lt;FILE&gt;</code></pre>  TypeScript <pre><code>await walletService.send(document, \"admin@example.com\");</code></pre>  C# <pre><code>await walletService.Send(document, \"admin@example.com\");</code></pre>  Python <pre><code>await wallet_service.send(document, \"admin@example.com\");</code></pre>","title":"Sending documents using Email as identifier"},{"location":"reference/setup/installation/install-cli/","text":"<p>The CLI can be installed directly as binary or built from source.</p>","title":"Install cli"},{"location":"reference/setup/installation/install-cli/#using-homebrew-for-macos-and-linux","text":"<pre><code>brew tap trinsic-id/trinsic\nbrew install trinsic</code></pre>","title":"Using Homebrew for MacOS and Linux"},{"location":"reference/setup/installation/install-cli/#from-source-using-the-rust-toolchain","text":"<p>This requires the Rustup toolchain  installed on your system.</p> <p>Once installed, run this command in terminal:</p> <pre><code>cargo +nightly install --git https://github.com/trinsic-id/sdk trinsic</code></pre> <p>To verify that the CLI has been installed successfully, try running:</p> <pre><code>trinsic --help</code></pre>","title":"From source using the Rust toolchain"},{"location":"ruby/","text":"<p>The Trinsic Ruby SDK makes it easy to interact with the Trinsic API from any Ruby application. The most recent version of the library can be found on ____. You can find the SDKs source on Github.</p>","title":"The Trinsic Ruby SDK"},{"location":"ruby/#installation","text":"<p>TODO</p>","title":"Installation"},{"location":"ruby/#configuration","text":"<p>TODO</p>","title":"Configuration"},{"location":"ruby/#next-steps","text":"<p>TODO</p>","title":"Next Steps"},{"location":"snippets/buttons/","text":"<p> Learn More</p>","title":"Buttons"},{"location":"snippets/intro-infrastructure/","text":"<p>In this walkthrough we will showcase a practical example of how participants in an ecosystem use verifiable data to exchange trusted bits of information.</p>","title":"Intro infrastructure"},{"location":"snippets/intro-infrastructure/#ecosystem-setup","text":"<p>Before we begin, please ensure that you have access to our beta environment. If you haven't yet, join our early adopter program and we'll get in touch.</p>","title":"Ecosystem setup"},{"location":"snippets/intro-use-case/","text":"","title":"Intro use case"},{"location":"snippets/intro-use-case/#use-case-overview","text":"<p>In this walkthrough we'll explore a scenario where Allison gets her vaccination certificate. She then uses this certificate to board an airline that requires proof of vaccination. Each participant in this scenario is part of the same ecosystem, though this is not a functional requirement.</p> <pre><code>journey\n    section Issuance\n      Obtain cert.: 3: Allison, Clinic\n      Store in wallet: 3: Allison\n    section Verification\n      Request cert.: 3: Allison, Airline\n      Share: 3: Allison\n      Verify: 5: Airline</code></pre> <p>If you haven't learned about verifiable credentials already, first read Verifiable Credential Basics.</p> <p>In most credential exchange scenarios there are three primary roles - Issuer, Holder, and Verifier.</p> <p>Issuer: Responsible for issuing signed credentials that attest information about a credential subject</p> <p>Holder: Stores issued credentials from an issuer. Most often this is the credential subject. Also generates passes to share with verifiers.</p> <p>Verifier: Verifies passes presented from holders.</p>","title":"Use case overview"},{"location":"web/","text":"<p>The Trinsic Web SDK makes it easy to interact with the Trinsic API from any client-side web application. The most recent version of the library can be found on ____. You can find the SDKs source on Github.</p>","title":"The Trinsic Javascript / Web SDK"},{"location":"web/#installation","text":"<p>Install the package for Node or Browser from npmjs.com </p> Install <pre><code>npm i @trinsic/trinsic</code></pre>","title":"Installation"},{"location":"web/#configuration","text":"<p>TODO</p>","title":"Configuration"},{"location":"web/#next-steps","text":"<p>Once the SDK is installed and configured, you're ready to start building! We recommend going through the walkthrough next. If you're ready to dive into building your ecosystem, check out our API Reference</p> <p>Start Walkthrough Explore API</p>","title":"Next Steps"},{"location":"web/vaccination-web/","text":"","title":"Vaccination Use Case for Browsers"},{"location":"web/vaccination-web/#technical-requirements","text":"<p>You can run this example on your local machine, or you can use our Gitpod setup to bootstrap a full development environment. If running locally, you only need node and npm installed on your machine and a code editor of your choice.</p>","title":"Technical requirements"},{"location":"web/vaccination-web/#create-new-project","text":"<p>Let's create a new console app that we will use to add our sample code</p> <pre><code>mkdir VaccinationSample &amp;&amp; cd VaccinationSample &amp;&amp; npm init</code></pre> <p>You can select all the defaults for the node project.</p> <p>Add the required dependencies</p> <pre><code>npm i @trinsic/trinsic-web</code></pre> <pre><code>npm i --save-dev http-server webpack webpack-cli</code></pre>","title":"Create new project"},{"location":"web/vaccination-web/#configure-webpack","text":"<p>After installing the dependencies you'll need a configuration file for webpack. Create a file called webpack.config.js at the root of your project and then copy and paste this into that file <pre><code>const path = require('path');\n\nmodule.exports = {\n  mode: 'development',\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './src'),\n    filename: 'bundle.js',\n  }\n};</code></pre></p>","title":"Configure Webpack"},{"location":"web/vaccination-web/#set-up-website","text":"<p>Create a simple html page with a script tag referencing the webpack bundle that will be built after completing the sample code. Note that you will not have the bundle.js file yet because it will be generated from the index.js file you create.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Vaccination Sample&lt;/title&gt;\n  &lt;meta charset=\"UTF-8\" /&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" /&gt;\n  &lt;meta name=\"description\" content=\"\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Vaccination Sample&lt;/h1&gt;\n  &lt;div id=\"wallet\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;script src=\"../bundle.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;</code></pre> <p>Your file structure should look like this</p> <pre><code>VaccinationSample\n    src\n        index.html\n        index.js\n    package.json\n    webpack.config.js</code></pre>","title":"Set up Website"},{"location":"web/vaccination-web/#configure-services","text":"<p>Create a reference to the wallet service that points to your ecosystem service. You should have received this URL with your ecosystem setup. In your <code>index.js</code> file add the following line replacing the placeholder with your URL:</p> <pre><code>const { WalletService } = require('@trinsic/trinsic-web')\n\nconst walletService = new WalletService(\"&lt;ECOSYSTEM SERVICE URL&gt;\");</code></pre>","title":"Configure services"},{"location":"web/vaccination-web/#setup-wallet-profiles","text":"<p>Let's create three different profiles, each pointing to a separate wallet. Since we are using a single console app for this demo, we will simply set the active profile before each interaction to designate which actor is currently taking action. To create a new wallet profile, we use the Create Wallet feature.</p> <pre><code>let allison = await walletService.createWallet();\nlet clinic = await walletService.createWallet();\nlet airline = await walletService.createWallet();</code></pre> <p>If you would like to save the profile for future use, you can simply export the serialized profile to a local storage. Please note that the profiles contain sensitive key data, so they should be stored in a secure enclave.</p> <pre><code>const fs = require('fs');\nconst { Struct } = require('google-protobuf/google/protobuf/struct_pb');\n\n// Serialize profile by exporting the binary protobuf form\nlocalStorage.setItem(\"allison.bin\", allison.serializeBinary());\n\n// Create profile from existing data\nlet allison = WalletProfile.deserializeBinary(localStorage.getItem(\"allison.bin\"));</code></pre>  <p>Loading Profiles</p> <p>In order to load a profile from a saved file you'll need to install google-protobuf with <code>npm i google-protobuf</code> in order to use the Struct class and convert the DID Document from JavaScript to the protobuf form.</p>  <p>Read more about security profiles and authentication.</p>","title":"Setup wallet profiles"},{"location":"web/vaccination-web/#certificate-issuance","text":"<p>Upon receiving her vaccine, Allison also receives a digital certificate from the clinic. This certificate is digitally signed by the clinic, acting as an issuer. The certificate is in a JSON form, and for this example, we load the JSON structure directly.</p> <pre><code>// Set active profile to 'clinic' so we can issue credential signed\n// with the clinic's signing keys\nwalletService.setProfile(clinic);\n\n// Read the JSON credential data\nlet credentialJson = {\n  \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/vaccination/v1\",\n      \"https://w3id.org/security/bbs/v1\"\n  ],\n  \"id\": \"urn:uvci:af5vshde843jf831j128fj\",\n  \"type\": [\n      \"VaccinationCertificate\",\n      \"VerifiableCredential\"\n  ],\n  \"description\": \"COVID-19 Vaccination Certificate\",\n  \"name\": \"COVID-19 Vaccination Certificate\",\n  \"expirationDate\": \"2029-12-03T12:19:52Z\",\n  \"issuanceDate\": \"2019-12-03T12:19:52Z\",\n  \"issuer\": \"did:key:zUC724vuGvHpnCGFG1qqpXb81SiBLu3KLSqVzenwEZNPoY35i2Bscb8DLaVwHvRFs6F2NkNNXRcPWvqnPDUd9ukdjLkjZd3u9zzL4wDZDUpkPAatLDGLEYVo8kkAzuAKJQMr7N2\",\n  \"credentialSubject\": {\n      \"id\": \"urn:uuid:c53e70f8-ce9a-4576-8744-e5f85c20a743\",\n      \"type\": \"VaccinationEvent\",\n      \"batchNumber\": \"1183738569\",\n      \"countryOfVaccination\": \"US\"\n  }\n};\n\n// Sign the credential using BBS+ signature scheme\nlet credential = await walletService.issueCredential(JSON.parse(credentialJson));</code></pre> <p>At this point, the clinic can send the signed credential to Allison using any available methods. These methods can include any message exchange protocol, or a custom transport. In this case, we'll assume that the credential was delivered to Allison in an offline environment.</p>","title":"Certificate issuance"},{"location":"web/vaccination-web/#store-certificate-in-personal-wallet","text":"<p>Allison can store this credential in her cloud wallet, simply by calling the Insert Item function.</p> <pre><code>// Set active profile to 'allison' so we can manage her cloud wallet\nwalletService.setProfile(allison);\n\n// Insert the signed credential\nlet itemId = await walletService.insertItem(credential);</code></pre>","title":"Store certificate in personal wallet"},{"location":"web/vaccination-web/#proof-of-vaccination","text":"<p>Before boarding an airplane, Allison must show a proof of vaccination. The request for this proof also comes in a form of JSON, in this case a JSON-LD frame. This request can be communicated using any exchange protocol. Again, we'll assume this was done offline.</p> <p>This request asks Allison to provide proof of valid vaccination certificate, including the <code>issuer</code>, <code>batchNumber</code>and <code>countryOfVaccination</code> fields.</p> <p>Allison can use the Create Proof functions to build a proof that will share only the requested fields.</p> <pre><code>// We'll read the request frame from a file and communicate this with Allison\nlet proofRequestJson = {\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://w3id.org/vaccination/v1\",\n        \"https://w3id.org/security/bbs/v1\"\n    ],\n    \"type\": [\n        \"VerifiableCredential\",\n        \"VaccinationCertificate\"\n    ],\n    \"@explicit\": true,\n    \"issuer\": {},\n    \"credentialSubject\": {\n        \"@explicit\": true,\n        \"@type\": \"VaccinationEvent\",\n        \"batchNumber\": {},\n        \"countryOfVaccination\": {}\n    }\n}\n\n// Set the active profile to 'allison'\nwalletService.setProfile(allison);\n\n// Build a proof for the given request and the `itemId` we previously received\n// which points to the stored credential\nlet credentialProof = await walletService.createProof(itemId, JSON.parse(proofRequestJson));</code></pre>","title":"Proof of vaccination"},{"location":"web/vaccination-web/#verification","text":"<p>Allison shares the proof of credential she created with the airline. The airline can now use Verify Proof functions to check the validity of the proof.</p> <pre><code>// Set active profile to 'airline'\nwalletService.setProfile(airline);\n\n// Check for valid signature\nlet valid = await walletService.verifyProof(credentialProof);\n\ndocument.getElementById(\"wallet\").innerHTML = valid</code></pre>","title":"Verification"},{"location":"web/vaccination-web/#build","text":"<p>To build the bundle.js file run <pre><code>webpack build</code></pre></p>","title":"Build"},{"location":"web/vaccination-web/#run","text":"<p>To serve the website and run the sample run <pre><code>npx http-server src</code></pre></p>","title":"Run"},{"location":"web/vaccination-web/#complete-sample-code","text":"<p>This sample is available in our GitHub repo.</p>","title":"Complete sample code"}]}