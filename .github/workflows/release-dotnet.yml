name: ".NET (release)"

on:
  workflow_dispatch:
  release:
    types: [published, prereleased]

jobs:
  publish:
    name: Publish to nuget.org
    runs-on: windows-latest
    environment:
      name: nuget.org
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Generate Package Version
        run: |
          $json = Invoke-WebRequest 'https://api.github.com/repos/trinsic-id/okapi/releases/latest' `
            -Headers @{ "Authorization" = "Token $env:API_GITHUB_TOKEN"} | ConvertFrom-Json
          $version = $json.tag_name.Trim("v")
          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
      - run: |
          dotnet restore
          dotnet build -c Release
          dotnet pack -c Release -p:PackageVersion=$env:PACKAGE_VERSION
        working-directory: ./dotnet
      - uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: |
            ./dotnet/**/Release/*.nupkg
            ./dotnet/**/Release/*.snupkg
      - name: Push packages to Nuget
        run: |
          foreach ($item in get-childitem ./ -recurse | select-object FullName | where { $_.FullName.EndsWith("nupkg") })
          {
            nuget push $item.FullName -ApiKey "${{ secrets.NUGET_API_KEY }}" -Source https://api.nuget.org/v3/index.json -SkipDuplicate
          }
        shell: pwsh
        working-directory: ./dotnet



